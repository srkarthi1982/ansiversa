---
import { Fragment } from "astro/jsx-runtime";
import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/Button.astro";
import Modal from "../../../components/Modal.astro";
import DataGrid from "../../../components/DataGrid.astro";

const questionColumns = [
  {
    key: "actions",
    label: "Actions",
    filter: {
      type: "button",
      label: "Clear",
      onClick: "questions.clearFilters()",
    },
  },
  {
    key: "platform",
    label: "Platform",
    sortable: true,
    sortKey: "platformName",
    filter: {
      type: "select",
      key: "platformId",
      placeholder: "All platforms",
      optionsVar: "questions.filterPlatformOptions",
      attributes: {
        "x-on:change": "questions.onFilterPlatformChange()",
        "x-bind:disabled": "questions.mutating || !questions.filterPlatformOptions.length",
      },
    },
  },
  {
    key: "subject",
    label: "Subject",
    sortable: true,
    sortKey: "subjectName",
    filter: {
      type: "select",
      key: "subjectId",
      placeholder: "All subjects",
      optionsVar: "questions.filterSubjectOptions",
      attributes: {
        "x-on:change": "questions.onFilterSubjectChange()",
        "x-bind:disabled": "questions.mutating || !questions.filters.platformId || !questions.filterSubjectOptions.length",
      },
    },
  },
  {
    key: "topic",
    label: "Topic",
    sortable: true,
    sortKey: "topicName",
    filter: {
      type: "select",
      key: "topicId",
      placeholder: "All topics",
      optionsVar: "questions.filterTopicOptions",
      attributes: {
        "x-on:change": "questions.onFilterTopicChange()",
        "x-bind:disabled": "questions.mutating || !questions.filters.subjectId || !questions.filterTopicOptions.length",
      },
    },
  },
  {
    key: "roadmap",
    label: "Roadmap",
    sortable: true,
    sortKey: "roadmapName",
    filter: {
      type: "select",
      key: "roadmapId",
      placeholder: "All roadmaps",
      optionsVar: "questions.filterRoadmapOptions",
      attributes: {
        "x-bind:disabled": "questions.mutating || !questions.filters.topicId || !questions.filterRoadmapOptions.length",
      },
    },
  },
  {
    key: "level",
    label: "Level",
    sortable: true,
    sortKey: "level",
    filter: {
      type: "select",
      key: "level",
      options: [
        { label: "All", value: "" },
        { label: "Easy (E)", value: "E" },
        { label: "Medium (M)", value: "M" },
        { label: "Difficult (D)", value: "D" },
      ],
    },
  },
  {
    key: "status",
    label: "Status",
    sortable: true,
    sortKey: "status",
    align: "center",
    widthClass: "w-16",
    filter: {
      type: "select",
      key: "status",
      options: [
        { label: "All", value: "all" },
        { label: "✓", value: "active" },
        { label: "✕", value: "inactive" },
      ],
    },
  },
];
---
<Layout>
  <main class="bg-slate-50 min-h-screen">
    <section class="py-4" x-data="{ questions: $store.questions }" x-init="questions.onInit()">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="flex flex-col gap-4 sm:flex-row sm:items-end sm:justify-between">
          <div>
            <h2 class="mt-3 text-3xl font-bold tracking-tight text-slate-900 sm:text-4xl">
              Questions
            </h2>
          </div>
          <div class="flex flex-wrap items-center gap-3">
            <Button
              type="button"
              size="sm"
              x-on:click="questions.openCreateModal()"
              x-bind:disabled="questions.loading || questions.mutating"
            >
              <i class="fas fa-plus text-sm"></i>
              Add question
            </Button>
            <Button
              type="button"
              variant="outline"
              size="sm"
              x-on:click="questions.loadQuestions()"
              x-bind:disabled="questions.loading || questions.mutating"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-3.5 w-3.5"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.992 0 3.181 3.181a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.181"
                />
              </svg>
              Refresh
            </Button>
          </div>
        </div>

        <Modal
          size="lg"
          x-show="questions.showModal"
          x-on:keydown.escape.window="questions.closeModal()"
          x-on:modal-close="questions.closeModal()"
        >
          <Fragment slot="title">
            <div class="flex items-center justify-between gap-3">
              <h2 class="text-lg font-semibold text-slate-900" x-text="questions.isEditMode ? 'Update question' : 'Add a new question'"></h2>
              <template x-if="questions.isEditMode">
                <span
                  class="inline-flex items-center gap-2 rounded-full border border-slate-200 bg-slate-50 px-3 py-1 text-xs font-semibold text-slate-600"
                >
                  <span>ID</span>
                  <span class="text-slate-900" x-text="questions.editingId ?? ''"></span>
                </span>
              </template>
            </div>
          </Fragment>
          <form id="question-form" class="grid gap-4" x-on:submit.prevent="questions.submitModal()">
            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Platform</span>
              <select
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model="questions.form.platformId"
                x-on:change="questions.onPlatformChange()"
                x-bind:disabled="questions.mutating || !questions.platformOptionList.length"
                required
              >
                <option value="" disabled>Select platform</option>
                <template x-for="platform in questions.platformOptionList" x-bind:key="platform.id">
                  <option x-bind:value="String(platform.id)" x-text="`${platform.name} (#${platform.id})`"></option>
                </template>
              </select>
            </label>

            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Subject</span>
              <select
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model="questions.form.subjectId"
                x-on:change="questions.onSubjectChange()"
                x-bind:disabled="questions.mutating || !questions.form.platformId || !questions.subjectOptionList.length"
                required
              >
                <option value="" disabled>Select subject</option>
                <template x-for="subject in questions.subjectOptionList" x-bind:key="subject.id">
                  <option x-bind:value="String(subject.id)" x-text="`${subject.name} (#${subject.id})`"></option>
                </template>
              </select>
            </label>

            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Topic</span>
              <select
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model="questions.form.topicId"
                x-on:change="questions.onTopicChange()"
                x-bind:disabled="questions.mutating || !questions.form.subjectId || !questions.topicOptionList.length"
                required
              >
                <option value="" disabled>Select topic</option>
                <template x-for="topic in questions.topicOptionList" x-bind:key="topic.id">
                  <option x-bind:value="String(topic.id)" x-text="`${topic.name} (#${topic.id})`"></option>
                </template>
              </select>
            </label>

            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Roadmap</span>
              <select
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model="questions.form.roadmapId"
                x-bind:disabled="questions.mutating || !questions.form.topicId || !questions.roadmapOptionList.length"
                required
              >
                <option value="" disabled>Select roadmap</option>
                <template x-for="roadmap in questions.roadmapOptionList" x-bind:key="roadmap.id">
                  <option x-bind:value="String(roadmap.id)" x-text="`${roadmap.name} (#${roadmap.id})`"></option>
                </template>
              </select>
            </label>

            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Question text</span>
              <textarea
                rows="4"
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model.trim="questions.form.questionText"
                x-bind:disabled="questions.mutating"
                required
              ></textarea>
            </label>

            <fieldset class="flex flex-col gap-2">
              <legend class="text-xs font-semibold text-slate-600">Options</legend>
              <template x-for="(option, index) in questions.form.options" x-bind:key="`option-${index}`">
                <div class="flex items-center gap-3">
                  <input
                    type="radio"
                    name="correct-option"
                    class="h-4 w-4 border-slate-300 text-indigo-600 focus:ring-indigo-500"
                    x-model.number="questions.form.correctOptionIndex"
                    x-bind:value="index"
                    x-bind:disabled="questions.mutating"
                    x-bind:aria-label="`Mark option ${index + 1} as correct`"
                  />
                  <input
                    type="text"
                    class="flex-1 rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                    x-model="questions.form.options[index]"
                    x-bind:disabled="questions.mutating"
                    x-bind:placeholder="`Option ${index + 1}`"
                  />
                </div>
              </template>
            </fieldset>

            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Explanation</span>
              <textarea
                rows="4"
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model="questions.form.explanation"
                x-bind:disabled="questions.mutating"
                required
              ></textarea>
            </label>

            <label class="flex flex-col gap-1 text-xs font-semibold text-slate-600">
              <span>Level</span>
              <select
                class="rounded-lg border border-slate-200 px-3 py-2 text-sm font-normal text-slate-900 focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-200 disabled:cursor-not-allowed disabled:bg-slate-100"
                x-model="questions.form.level"
                x-bind:disabled="questions.mutating"
                required
              >
                <option value="" disabled>Select difficulty</option>
                <option value="E">Easy</option>
                <option value="M">Medium</option>
                <option value="D">Difficult</option>
              </select>
            </label>

            <label class="flex items-center gap-2 text-xs font-semibold text-slate-600">
              <input
                type="checkbox"
                class="h-4 w-4 rounded border-slate-300 text-indigo-600 focus:ring-indigo-500"
                x-model="questions.form.isActive"
                x-bind:disabled="questions.mutating"
              />
              <span>Active</span>
            </label>

            <div class="flex items-center justify-end gap-3">
              <Button
                type="button"
                variant="ghost"
                size="sm"
                x-on:click="questions.closeModal()"
                x-bind:disabled="questions.mutating"
              >
                Cancel
              </Button>
              <Button
                type="submit"
                size="sm"
                x-bind:disabled="questions.mutating"
              >
                <span x-text="questions.isEditMode ? 'Save changes' : 'Save question'"></span>
              </Button>
            </div>
          </form>
        </Modal>

        <div class="mt-8">
          <DataGrid
            id="questions-grid"
            columns={questionColumns}
            rowsVar="questions.questions"
            loadingVar="questions.loading"
            errorVar="questions.error"
            filtersVar="questions.filters"
            hasFiltersVar="questions.hasActiveFilters"
            sortStateVar="questions.sort"
            onSort="questions.setSort"
            onFilterChange="questions.onFilterChange"
            onPageSizeChange="questions.setPageSize"
            onPrevPage="questions.prevPage"
            onNextPage="questions.nextPage"
            onSetPage="questions.setPage"
            onFirstPage="questions.firstPage"
            onLastPage="questions.lastPage"
            pageSizeVar="questions.pageSize"
            pageSizeOptions={[10, 20, 30, 50]}
            pageVar="questions.page"
            pageNumbersVar="questions.pageNumbers"
            totalVar="questions.totalItems"
            totalPagesVar="questions.totalPages"
            emptyMessage="No questions available yet."
            filteredEmptyMessage="No questions match the current filters."
          >
            <Fragment slot="body">
              <template x-for="question in questions.questions" :key="question.id">
                <tr class="align-top">
                  <td class="px-3 py-4" colspan="7">
                    <div class="rounded-2xl border border-slate-200 bg-white p-5 shadow-sm">
                      <div class="flex flex-col gap-4 sm:flex-row sm:items-start sm:justify-between">
                        <div class="flex-1">
                          <div class="flex items-center gap-3 text-xs font-semibold uppercase tracking-wide text-slate-400">
                            <span>Q</span>
                            <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-2 py-0.5 text-[11px] font-semibold text-slate-600">
                              <i class="fas fa-hashtag text-[9px]"></i>
                              <span x-text="question.id"></span>
                            </span>
                            <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-2 py-0.5 text-[11px] font-semibold text-slate-600">
                              <i class="fas fa-signal text-[9px]"></i>
                              <span x-text="question.level || 'N/A'"></span>
                            </span>
                          </div>
                          <h3 class="mt-2 text-base font-semibold text-slate-900" x-text="question.questionText"></h3>
                        </div>
                        <div
                          class="relative flex justify-end"
                          x-data="{ open: false }"
                          x-on:click.away="open = false"
                          x-on:keydown.escape.stop="open = false"
                        >
                          <Button
                            type="button"
                            variant="ghost"
                            size="sm"
                            x-on:click="open = !open"
                            x-bind:disabled="questions.loading || questions.mutating"
                            aria-label="Question actions"
                          >
                            <i class="fas fa-ellipsis-v text-sm"></i>
                          </Button>
                          <div
                            x-cloak
                            x-show="open"
                            x-transition
                            class="absolute right-0 top-full z-20 mt-2 w-40 rounded-lg border border-slate-200 bg-white p-1 shadow-lg"
                          >
                            <Button
                              type="button"
                              variant="ghost"
                              size="sm"
                              block
                              x-on:click="open = false; questions.openEditModal(question)"
                              x-bind:disabled="questions.loading || questions.mutating"
                            >
                              Edit
                            </Button>
                            <Button
                              type="button"
                              variant="ghost"
                              size="sm"
                              block
                              class="text-rose-600 hover:bg-rose-50"
                              x-on:click="open = false; questions.deleteQuestion(question.id)"
                              x-bind:disabled="questions.loading || questions.mutating"
                            >
                              Delete
                            </Button>
                          </div>
                        </div>
                      </div>

                      <ol class="mt-4 space-y-2 text-sm text-slate-700">
                        <template x-for="(option, index) in question.options" x-bind:key="`option-display-${question.id}-${index}`">
                          <li
                            class="flex items-start gap-3 rounded-lg border border-transparent px-3 py-2"
                            x-data="{ isCorrect: question.answer ? question.answer.trim() === (option ?? '').trim() : Number(question.answerKey) === index }"
                            x-bind:class="isCorrect ? 'border-emerald-200 bg-emerald-50/50 text-emerald-700' : 'bg-slate-50/40 text-slate-700'"
                          >
                            <span class="text-xs font-semibold text-slate-500" x-text="`${index + 1}.`"></span>
                            <div class="flex flex-1 items-center gap-2">
                              <span class="flex-1" x-text="option"></span>
                              <template x-if="isCorrect">
                                <span class="inline-flex items-center gap-1 rounded-full bg-emerald-500/10 px-2 py-0.5 text-[11px] font-semibold text-emerald-600">
                                  <i class="fas fa-check text-[9px]"></i>
                                  Correct
                                </span>
                              </template>
                            </div>
                          </li>
                        </template>
                      </ol>

                      <div class="mt-4 rounded-lg bg-slate-50 px-3 py-2 text-sm text-slate-700">
                        <span class="font-semibold text-slate-900">Explanation:</span>
                        <span class="ml-1" x-text="question.explanation || 'No explanation provided.'"></span>
                      </div>

                      <div class="mt-4 grid gap-3 text-xs text-slate-500 sm:grid-cols-2 md:grid-cols-4">
                        <div class="flex flex-col">
                          <span class="font-semibold text-slate-600">Platform</span>
                          <span x-text="question.platformName || 'Unassigned platform'"></span>
                          <span class="text-[11px]" x-text="`#${question.platformId}`"></span>
                        </div>
                        <div class="flex flex-col">
                          <span class="font-semibold text-slate-600">Subject</span>
                          <span x-text="question.subjectName || 'Unknown subject'"></span>
                          <span class="text-[11px]" x-text="`#${question.subjectId}`"></span>
                        </div>
                        <div class="flex flex-col">
                          <span class="font-semibold text-slate-600">Topic</span>
                          <span x-text="question.topicName || 'Unknown topic'"></span>
                          <span class="text-[11px]" x-text="`#${question.topicId}`"></span>
                        </div>
                        <div class="flex flex-col">
                          <span class="font-semibold text-slate-600">Roadmap</span>
                          <span x-text="question.roadmapName || 'None'"></span>
                          <span class="text-[11px]" x-text="question.roadmapId ? `#${question.roadmapId}` : '—'"></span>
                        </div>
                      </div>

                      <div class="mt-4 flex items-center justify-between text-xs font-semibold text-slate-500">
                        <div class="inline-flex items-center gap-2">
                          <span>Status:</span>
                          <span
                            class="inline-flex h-6 min-w-[2rem] items-center justify-center rounded-full border px-3"
                            :class="question.isActive ? 'border-emerald-200 bg-emerald-50 text-emerald-600' : 'border-rose-200 bg-rose-50 text-rose-600'"
                            x-text="question.isActive ? 'Active' : 'Inactive'"
                          ></span>
                        </div>
                        <div class="inline-flex items-center gap-2">
                          <i class="fas fa-list-ul text-[10px]"></i>
                          <span x-text="`${question.options?.length ?? 0} options`"></span>
                        </div>
                      </div>
                    </div>
                  </td>
                </tr>
              </template>
            </Fragment>
          </DataGrid>
        </div>
      </div>
    </section>
  </main>
</Layout>
