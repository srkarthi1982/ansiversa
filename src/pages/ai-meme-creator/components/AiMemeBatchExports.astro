---
import SectionHeading from '../../../components/SectionHeading.astro';
import Button from '../../../components/Button.astro';
---
<section id="ai-meme-exports" class="bg-slate-950 py-16 text-white" x-data="() => ({ meme: $store.aiMemeCreator })">
  <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
    <SectionHeading
      eyebrow="Batching and exports"
      title="Generate campaign-sized meme packs and export in seconds"
      description="Spin up variants across aspect ratios, apply tone sweeps, and deliver PNG, WebP, GIF, MP4, or ZIP bundles ready for every channel."
      titleClass="mt-3 text-3xl font-bold tracking-tight sm:text-4xl text-white"
      descriptionClass="mt-4 text-base text-white/70"
      eyebrowClass="text-xs font-semibold uppercase tracking-[0.35em] text-sky-300"
    />

    <div class="mt-12 grid gap-10 lg:grid-cols-[1.05fr_0.95fr]">
      <div class="space-y-6">
        <div class="rounded-3xl border border-white/10 bg-white/5 p-6">
          <div class="flex items-start justify-between">
            <div>
              <h3 class="text-sm font-semibold">Batch presets</h3>
              <p class="mt-1 text-xs text-white/60">Choose a preset to pre-fill variant counts, channels, and metadata.</p>
            </div>
            <Button type="button" size="sm" variant="tinted" x-on:click="meme.selectBatchPreset('campaign-pack')">
              Default pack
            </Button>
          </div>
          <div class="mt-4 space-y-3">
            <template x-for="preset in meme.state.batchPresets" :key="preset.id">
              <article
                class="rounded-2xl border px-4 py-3 text-sm transition"
                :class="
                  preset.id === meme.state.selectedBatchId
                    ? 'border-sky-400 bg-sky-500/20'
                    : 'border-white/15 bg-white/5 hover:border-white/30'
                "
                x-on:click="meme.selectBatchPreset(preset.id)"
              >
                <div class="flex flex-wrap items-start justify-between gap-3">
                  <div>
                    <p class="font-semibold" x-text="preset.label"></p>
                    <p class="text-xs text-white/70" x-text="preset.description"></p>
                    <p class="mt-2 text-[11px] text-white/50" x-text="preset.bestFor"></p>
                    <div class="mt-3 flex flex-wrap gap-2 text-[10px]">
                      <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2 py-1 font-semibold text-white/80">
                        <i class="fas fa-layer-group text-[9px]"></i>
                        <span x-text="`${preset.variants} variants`"></span>
                      </span>
                      <template x-for="item in preset.includes" :key="item">
                        <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2 py-1 font-semibold text-white/70">
                          <i class="fas fa-circle-check text-[9px]"></i>
                          <span x-text="item"></span>
                        </span>
                      </template>
                    </div>
                  </div>
                  <span
                    class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-[10px] font-semibold uppercase tracking-wide"
                    :class="preset.plan === 'pro' ? 'bg-purple-500/20 text-purple-200' : 'bg-emerald-500/20 text-emerald-200'"
                  >
                    <i class="fas fa-star text-[9px]"></i>
                    <span x-text="preset.plan === 'pro' ? 'Pro' : 'Free'"></span>
                  </span>
                </div>
              </article>
            </template>
          </div>
        </div>

        <div class="rounded-3xl border border-dashed border-white/15 bg-white/5 p-6 text-sm text-white/70">
          <p class="font-semibold text-white">Filename intelligence</p>
          <p class="mt-2">
            Every batch auto-generates filenames with tone, panel count, and UTM slugs. Export logs include caption CSVs and audit events when safety rewrites occur.
          </p>
        </div>
      </div>

      <div class="space-y-6">
        <div class="rounded-3xl border border-white/15 bg-white/10 p-6">
          <h3 class="text-sm font-semibold">Export formats</h3>
          <p class="mt-2 text-xs text-white/60">Select the primary export target. Additional formats stay queued for later downloads.</p>
          <div class="mt-4 grid gap-3">
            <template x-for="format in meme.state.exportFormats" :key="format.id">
              <button
                type="button"
                class="flex w-full items-start gap-3 rounded-2xl border px-4 py-3 text-left text-sm transition"
                :class="
                  format.id === meme.state.selectedExportId
                    ? 'border-sky-400 bg-sky-500/20 text-white'
                    : 'border-white/15 bg-white/5 text-white/80 hover:border-white/30'
                "
                x-on:click="meme.selectExportFormat(format.id)"
              >
                <span class="mt-1 inline-flex h-8 w-8 items-center justify-center rounded-full bg-white/20 text-white">
                  <i class="fas fa-file-export"></i>
                </span>
                <div>
                  <p class="font-semibold" x-text="format.label"></p>
                  <p class="text-xs text-white/70" x-text="format.description"></p>
                  <div class="mt-2 flex flex-wrap gap-2 text-[10px] text-white/60">
                    <template x-for="option in format.options" :key="option">
                      <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2 py-1">
                        <i class="fas fa-gear text-[9px]"></i>
                        <span x-text="option"></span>
                      </span>
                    </template>
                  </div>
                </div>
                <span
                  class="ml-auto mt-1 inline-flex items-center gap-1 rounded-full px-3 py-1 text-[10px] font-semibold uppercase tracking-wide"
                  :class="format.plan === 'pro' ? 'bg-purple-500/20 text-purple-200' : 'bg-emerald-500/20 text-emerald-200'"
                >
                  <i class="fas fa-lock-open text-[9px]"></i>
                  <span x-text="format.plan === 'pro' ? 'Pro' : 'Free'"></span>
                </span>
              </button>
            </template>
          </div>
        </div>

        <div class="rounded-3xl border border-white/10 bg-white/5 p-6 text-sm text-white/80">
          <p class="font-semibold text-white">Export summary</p>
          <p class="mt-2">
            Selected batch:
            <span class="font-semibold" x-text="meme.selectedBatchPreset?.label ?? '—'"></span>
            · Export target:
            <span
              class="font-semibold"
              x-text="
                (meme.state.exportFormats.find((format) => format.id === meme.state.selectedExportId)?.label) ?? '—'
              "
            ></span>
          </p>
          <p class="mt-2 text-xs text-white/60">
            Tip: Enable motion captions in the workspace before exporting GIF/MP4 to capture entrance timings.
          </p>
        </div>
      </div>
    </div>
  </div>
</section>
