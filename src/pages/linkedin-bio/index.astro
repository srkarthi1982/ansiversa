---
import Layout from '../../layouts/Layout.astro';
import Button from '../../components/Button.astro';
import SectionHeading from '../../components/SectionHeading.astro';

const featureHighlights = [
  {
    icon: 'fas fa-cloud-arrow-up',
    title: 'Import, parse, align',
    description:
      'Bring data from Resume Builder JSON, paste raw text, or start from scratch. We normalize experience blocks, metrics, and skills into a structured evidence map.',
  },
  {
    icon: 'fas fa-bullseye',
    title: 'Targeting that understands nuance',
    description:
      'Roles, industries, seniority, visa and remote preferences, plus your top keyword bank ensure every variant speaks to the right recruiter search.',
  },
  {
    icon: 'fas fa-sliders',
    title: 'Tone, persona, and localization',
    description:
      'Switch between professional, friendly, confident, humble, storyteller, and data-driven voices in first or third person — with multilingual output and emoji control.',
  },
  {
    icon: 'fas fa-magnifying-glass-chart',
    title: 'STAR/CAR micro-bullets baked in',
    description:
      'Surface measurable outcomes, frameworks, and highlights that convert achievements into scannable bullets ready for LinkedIn’s About section.',
  },
  {
    icon: 'fas fa-scale-balanced',
    title: 'Compliance-first drafting',
    description:
      'Every claim links back to verifiable resume evidence. Authenticity, bias, and buzzword linting run in real time so you stay policy-safe.',
  },
  {
    icon: 'fas fa-share-nodes',
    title: 'Export and integrate in one click',
    description:
      'Copy optimized blocks, export Markdown/PDF, or push directly to Resume Builder, Cover Letter Writer, Portfolio Creator, and Email Polisher.',
  },
];

const workflowSteps = [
  {
    step: '1',
    title: 'Ingest profile data',
    description:
      'Import Resume Builder JSON or paste experience. We detect roles, achievements, metrics, and skills automatically while sanitizing formatting.',
  },
  {
    step: '2',
    title: 'Set targets and tone',
    description:
      'Define roles, industries, locations, visa/remote preferences, plus choose tone, persona, language, and emoji policy for every variant.',
  },
  {
    step: '3',
    title: 'Generate and compare',
    description:
      'Headline, About, and Featured variants appear side-by-side with live keyword coverage, STAR guidance, and evidence callouts.',
  },
  {
    step: '4',
    title: 'Score, lint, and export',
    description:
      'Coverage %, readability, length, buzzword, bias, and authenticity scores update instantly. Save the winning set or export to Markdown/PDF.',
  },
];

const lintSignals = [
  { label: 'Coverage %', description: 'Target keyword ratio using stemming + synonyms and suggestions for gaps.' },
  { label: 'Readability', description: 'CEFR grade (A2–C2) with sentence and vocabulary heuristics.' },
  { label: 'Length guardrails', description: '220-character headline cap, 2,600-character About, friendly counters for Featured blurbs.' },
  { label: 'Buzzword density', description: 'Flags clichés like “results-oriented” and proposes replacements with context awareness.' },
  { label: 'Bias and inclusivity', description: 'Highlights gendered phrases, location bias, and offers neutral alternates.' },
  { label: 'Authenticity', description: 'Every metric must map to an evidence reference or be marked aspirational with safe phrasing.' },
];

const integrationHighlights = [
  {
    name: 'Resume Builder',
    description: 'Push verified bullets into your resume draft with references intact and no retyping.',
    icon: 'fas fa-file-lines',
  },
  {
    name: 'Cover Letter Writer',
    description: 'Send focus paragraphs, tone, and keywords straight into cover letter outlines.',
    icon: 'fas fa-pen-nib',
  },
  {
    name: 'Portfolio Creator',
    description: 'Transform Featured picks into rich case studies with hero metrics and media embeds.',
    icon: 'fas fa-diagram-project',
  },
  {
    name: 'Email Polisher',
    description: 'Reuse headlines and proof points when reaching out to recruiters or hiring managers.',
    icon: 'fas fa-envelope-open-text',
  },
];

const apiContracts = [
  { method: 'POST', path: '/linkedin-bio/api/generate', description: 'Generate headline, About, and Featured variants with evidence map.' },
  { method: 'POST', path: '/linkedin-bio/api/score', description: 'Return coverage %, readability, buzzword, bias, and length diagnostics.' },
  { method: 'POST', path: '/linkedin-bio/api/save', description: 'Persist selected artifacts and keyword banks per profile.' },
  { method: 'GET', path: '/linkedin-bio/api/history', description: 'Paginate saved variants with plan gating and audit trails.' },
  { method: 'POST', path: '/linkedin-bio/api/export', description: 'Produce Markdown or PDF exports with watermark enforcement.' },
  { method: 'POST', path: '/linkedin-bio/api/featured/suggest', description: 'Suggest Featured media from resume or linked projects.' },
];

const dataModelRows = [
  {
    entity: 'Profile',
    fields:
      '`id` (uuid pk), `userId` (fk), `targets` (jsonb), `preferences` (jsonb), `resumeRef` (jsonb), `createdAt`, `updatedAt`',
  },
  {
    entity: 'Artifact',
    fields:
      "`id` (uuid pk), `profileId` (fk), `type` ('headline'|'about'|'featured'), `language`, `text`, `chars`, `keywordsCovered` (jsonb), `scores` (jsonb), `evidenceRefs` (jsonb), `createdAt`",
  },
  {
    entity: 'KeywordBank',
    fields:
      "`id` (uuid pk), `profileId` (fk), `items` (text[]), `source` ('user'|'suggested'|'import'), `createdAt`",
  },
  {
    entity: 'History',
    fields:
      "`id` (uuid pk), `profileId` (fk), `artifactId` (fk), `action` ('create'|'update'|'export'), `ts`",
  },
];

const planRows = [
  { feature: 'Generations / day', free: '3', pro: 'Unlimited' },
  { feature: 'Saved profiles', free: '1', pro: 'Unlimited' },
  { feature: 'Variants per artifact', free: '2 each', pro: '5 each + localization' },
  { feature: 'Exports', free: 'Markdown (watermark)', pro: 'Markdown and PDF (no watermark)' },
  { feature: 'Linting', free: 'Coverage + length', pro: 'Adds bias, buzzword, authenticity' },
  { feature: 'Localization', free: 'English only', pro: 'English + Arabic + Tamil + Spanish', },
  { feature: 'Integrations', free: 'Copy and paste', pro: 'Resume, Cover Letter, Portfolio, Email' },
];

const compliancePoints = [
  'No unverifiable claims — every metric ties back to a resume or imported evidence reference.',
  'Optional aspirational toggle rewrites claims with “aiming to” phrasing and removes unsupported numbers.',
  'Sanitised Markdown/PDF exports strip risky HTML and redact confidential data before publishing.',
  'History log tracks every generate, score, save, export, and publish event for audit readiness.',
];

const artifactColumns = [
  {
    key: 'headline',
    icon: 'fas fa-heading',
    title: 'Headline variants',
    limit: '≤ 220 characters',
    description: 'Lead with role, proof, and keywords that boost recruiter search.'
  },
  {
    key: 'about',
    icon: 'fas fa-id-card-clip',
    title: 'About / Bio variants',
    limit: '≤ 2,600 characters',
    description: 'Tell a STAR or CAR story with measurable impact and inclusive tone.'
  },
  {
    key: 'featured',
    icon: 'fas fa-star',
    title: 'Featured suggestions',
    limit: 'Links, media, case studies',
    description: 'Highlight proof like case studies, talks, and portfolios with evidence refs.'
  },
] as const;
---

<Layout>
  <a
    class="sr-only focus:not-sr-only focus:absolute focus:left-4 focus:top-4 focus:rounded-md focus:bg-white focus:px-4 focus:py-2 focus:text-sm focus:font-semibold focus:text-slate-900 focus:outline-none focus:ring-2 focus:ring-indigo-500"
    href="#linkedin-bio-content"
  >
    Skip to LinkedIn Bio Optimizer
  </a>
  <main
    id="linkedin-bio-content"
    class="min-h-screen bg-slate-50"
    x-data="() => ({ linkedinBio: $store.linkedinBio })"
    x-init="linkedinBio.initLanding()"
  >
    <section class="relative overflow-hidden py-16 sm:py-20">
      <div class="absolute inset-0 bg-gradient-to-br from-indigo-100 via-white to-transparent"></div>
      <div class="relative mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="grid gap-12 lg:grid-cols-[1.05fr_0.95fr] lg:items-center">
          <div class="space-y-6 text-center lg:text-left">
            <span class="inline-flex items-center gap-2 rounded-full bg-indigo-100 px-4 py-1.5 text-sm font-semibold text-indigo-700">
              <i class="fas fa-user-pen text-xs"></i>
              Career and Professional · LinkedIn Bio Optimizer
            </span>
            <h1 class="text-4xl font-bold tracking-tight text-slate-900 sm:text-5xl">
              Ship a LinkedIn presence backed by evidence
            </h1>
            <p class="text-base text-slate-600 sm:text-lg">
              Generate polished headlines, About sections, and Featured spotlights that stay within character limits, hit recruiter keyword goals, and keep every claim verifiable. Tone, persona, localization, and compliance run in real time.
            </p>
            <ul class="mx-auto max-w-xl space-y-2 text-left text-sm text-slate-600 lg:mx-0">
              <li class="flex items-start gap-3">
                <i class="fas fa-circle-check mt-0.5 text-xs text-indigo-500"></i>
                Import Resume Builder JSON, map metrics, and keep an evidence trail for every line.
              </li>
              <li class="flex items-start gap-3">
                <i class="fas fa-circle-check mt-0.5 text-xs text-indigo-500"></i>
                Compare tone variants side-by-side and track keyword coverage, readability, and bias scores.
              </li>
              <li class="flex items-start gap-3">
                <i class="fas fa-circle-check mt-0.5 text-xs text-indigo-500"></i>
                Export Markdown/PDF or push winning variants to Resume Builder, Cover Letter Writer, and Portfolio Creator.
              </li>
            </ul>
            <div class="flex flex-wrap justify-center gap-3 lg:justify-start">
              <Button
                class="shadow-sm"
                x-bind:href="`/linkedin-bio/editor/${linkedinBio.activeProfile?.id ?? ''}`"
              >
                <i class="fas fa-sliders text-xs"></i>
                Launch editor
              </Button>
              <Button
                variant="outline"
                href="/linkedin-bio/history"
              >
                <i class="fas fa-clock-rotate-left text-xs"></i>
                View history
              </Button>
              <Button variant="ghost" href="/linkedin-bio/settings">
                <i class="fas fa-gear text-xs"></i>
                Workspace settings
              </Button>
            </div>
            <p class="text-xs text-slate-500">
              <span
                class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-semibold"
                x-bind:class="linkedinBio.planBadgeClass"
              >
                <i class="fas fa-star text-[10px]"></i>
                <span x-text="linkedinBio.planLabel"></span>
              </span>
              ·
              <span class="font-semibold text-slate-700" x-text="`Generations ${linkedinBio.generationUsageLabel}`"></span>
              ·
              <span class="font-semibold text-slate-700" x-text="linkedinBio.savedProfilesLabel"></span>
              · Last generated
              <span class="font-semibold text-slate-700" x-text="new Date(linkedinBio.state.usage.lastGeneratedAt).toLocaleString()"></span>
            </p>
          </div>
          <aside class="relative">
            <div class="absolute inset-0 translate-x-6 translate-y-6 rounded-3xl bg-indigo-200 opacity-40 blur-2xl"></div>
            <div class="relative space-y-5 rounded-3xl border border-slate-200 bg-white/90 p-6 shadow-xl backdrop-blur">
              <header class="flex items-center justify-between">
                <div>
                  <p class="text-sm font-semibold text-slate-900">Active profile snapshot</p>
                  <p class="text-xs text-slate-500" x-text="linkedinBio.activeProfile?.title"></p>
                </div>
                <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-600">
                  <i class="fas fa-language text-[10px] text-indigo-500"></i>
                  <span x-text="linkedinBio.toneSummary"></span>
                </span>
              </header>
              <dl class="grid gap-4 sm:grid-cols-2">
                <div class="rounded-2xl border border-slate-100 bg-slate-50 p-4">
                  <dt class="text-xs font-medium uppercase tracking-wide text-slate-500">Keyword coverage</dt>
                  <dd class="mt-2 flex items-end gap-2 text-2xl font-semibold text-slate-900">
                    <span x-text="`${linkedinBio.scoreSummary.coverage}%`"></span>
                    <span class="text-xs font-medium text-slate-500">of target list</span>
                  </dd>
                </div>
                <div class="rounded-2xl border border-slate-100 bg-slate-50 p-4">
                  <dt class="text-xs font-medium uppercase tracking-wide text-slate-500">Readability</dt>
                  <dd class="mt-2 flex items-end gap-2 text-2xl font-semibold text-slate-900">
                    <span x-text="linkedinBio.scoreSummary.readability"></span>
                    <span class="text-xs font-medium text-slate-500">CEFR</span>
                  </dd>
                </div>
                <div class="rounded-2xl border border-indigo-100 bg-indigo-50/60 p-4 sm:col-span-2">
                  <dt class="text-xs font-medium uppercase tracking-wide text-indigo-700">Compliance and authenticity</dt>
                  <dd class="mt-2 flex items-center justify-between gap-3 text-sm text-indigo-800">
                    <span x-text="linkedinBio.scoreSummary.authenticity"></span>
                    <span class="inline-flex items-center gap-2 rounded-full bg-white px-3 py-1 text-xs font-semibold text-indigo-700">
                      <i class="fas fa-shield-heart text-[10px]"></i>
                      Evidence locked
                    </span>
                  </dd>
                </div>
              </dl>
              <div class="space-y-3 rounded-2xl border border-slate-100 bg-white/70 p-4">
                <div class="flex items-center justify-between text-xs text-slate-500">
                  <span>Roles targeted</span>
                  <span class="font-semibold text-slate-700" x-text="linkedinBio.activeTargets?.roles.join(', ')"></span>
                </div>
                <div class="flex items-center justify-between text-xs text-slate-500">
                  <span>Keywords</span>
                  <span class="font-semibold text-slate-700" x-text="`${linkedinBio.keywordTotal} tracked`"></span>
                </div>
                <div class="flex items-center justify-between text-xs text-slate-500">
                  <span>Coverage status</span>
                  <span class="font-semibold text-indigo-600" x-text="linkedinBio.coverageRemainingLabel"></span>
                </div>
              </div>
            </div>
          </aside>
        </div>
      </div>
    </section>

    <section class="pb-20">
      <div class="mx-auto max-w-6xl space-y-10 px-4 sm:px-6 lg:px-8">
        <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
          <div class="flex flex-col gap-6 lg:flex-row lg:items-center lg:justify-between">
            <div class="space-y-1">
              <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Workspace controls</p>
              <h2 class="text-2xl font-semibold text-slate-900">Dial tone, persona, and localization instantly</h2>
              <p class="text-sm text-slate-600">
                Click to add or remove tone ingredients, switch persona, toggle emoji style, and localize output. Variants snap to matching combinations automatically.
              </p>
            </div>
            <div class="flex flex-wrap gap-3">
              <button
                type="button"
                class="inline-flex items-center gap-2 rounded-full border px-3 py-1.5 text-xs font-semibold transition"
                :class="linkedinBio.state.emoji ? 'border-emerald-300 bg-emerald-50 text-emerald-700' : 'border-slate-200 bg-white text-slate-600 hover:border-indigo-200 hover:text-indigo-700'"
                @click="linkedinBio.toggleEmoji()"
              >
                <i class="fas fa-face-smile"></i>
                Emoji toggle
              </button>
              <button
                type="button"
                class="inline-flex items-center gap-2 rounded-full border px-3 py-1.5 text-xs font-semibold transition"
                :class="linkedinBio.state.plan === 'pro' ? 'border-indigo-300 bg-indigo-50 text-indigo-700' : 'border-slate-200 bg-white text-slate-600 hover:border-indigo-200 hover:text-indigo-700'"
                @click="linkedinBio.setPlan(linkedinBio.state.plan === 'pro' ? 'free' : 'pro')"
              >
                <i class="fas fa-arrows-rotate"></i>
                Switch to <span x-text="linkedinBio.state.plan === 'pro' ? 'Free' : 'Pro'"></span>
              </button>
            </div>
          </div>
          <div class="mt-6 grid gap-4 lg:grid-cols-[minmax(0,3fr)_minmax(0,1.1fr)]">
            <div class="space-y-4">
              <div class="flex flex-wrap gap-2">
                <template x-for="option in linkedinBio.toneOptions" :key="option.value">
                  <button
                    type="button"
                    class="inline-flex items-center gap-2 rounded-full border px-3 py-1.5 text-xs font-semibold transition"
                    :class="linkedinBio.isToneSelected(option.value) ? 'border-indigo-300 bg-indigo-50 text-indigo-700 shadow-sm' : 'border-slate-200 bg-white text-slate-600 hover:border-indigo-200 hover:text-indigo-700'"
                    @click="linkedinBio.toggleTone(option.value)"
                  >
                    <i class="fas text-[10px]" :class="option.icon"></i>
                    <span x-text="option.label"></span>
                  </button>
                </template>
              </div>
              <div class="flex flex-wrap gap-3">
                <template x-for="option in linkedinBio.personaOptions" :key="option.value">
                  <button
                    type="button"
                    class="inline-flex items-center gap-2 rounded-full border px-3 py-1.5 text-xs font-semibold transition"
                    :class="linkedinBio.isPersonaActive(option.value) ? 'border-slate-900 bg-slate-900 text-white' : 'border-slate-200 bg-white text-slate-600 hover:border-indigo-200 hover:text-indigo-700'"
                    @click="linkedinBio.setPersona(option.value)"
                  >
                    <i class="fas fa-user text-[10px]"></i>
                    <span x-text="option.label"></span>
                  </button>
                </template>
                <label class="inline-flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-1.5 text-xs font-semibold text-slate-600 shadow-sm">
                  <i class="fas fa-language text-[10px]"></i>
                  <select
                    class="bg-transparent text-xs font-semibold text-slate-800 focus:outline-none"
                    x-model="linkedinBio.state.language"
                    @change="linkedinBio.setLanguage($event.target.value)"
                  >
                    <template x-for="option in linkedinBio.languageOptions" :key="option.value">
                      <option :value="option.value" x-text="option.label"></option>
                    </template>
                  </select>
                </label>
              </div>
            </div>
            <div class="space-y-3 rounded-2xl border border-slate-100 bg-slate-50 p-4 text-xs text-slate-600">
              <p class="font-semibold text-slate-900">Tone dial preview</p>
              <template x-for="axis in Object.keys(linkedinBio.state.toneIntensity)" :key="axis">
                <div>
                  <div class="flex items-center justify-between">
                    <span class="capitalize" x-text="axis.replace(/([A-Z])/g, ' $1')"></span>
                    <span class="font-semibold text-slate-700" x-text="`${linkedinBio.state.toneIntensity[axis]}%`"></span>
                  </div>
                  <input
                    type="range"
                    min="0"
                    max="100"
                    class="mt-1 h-1 w-full cursor-pointer appearance-none rounded-full bg-indigo-100"
                    x-model.number="linkedinBio.state.toneIntensity[axis]"
                    @input="linkedinBio.setToneIntensity(axis, Number($event.target.value))"
                  />
                </div>
              </template>
              <p class="text-[11px] text-slate-500">
                Tone sliders inform prompt weighting for regenerate calls and show up in the editor sidebar.
              </p>
            </div>
          </div>
        </div>

        <div class="space-y-6">
          <SectionHeading
            eyebrow="Variants and evidence"
            title="Preview the LinkedIn Bio workspace"
            description="Pick a tone combo to see how headline, About, and Featured variants update. Coverage, char counts, and evidence references stay in sync."
          />
          <div class="grid gap-6 lg:grid-cols-3">
            <template x-for="column in ${JSON.stringify(artifactColumns)}" :key="column.key">
              <article class="flex h-full flex-col gap-4 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
                <header class="space-y-2">
                  <div class="flex items-center justify-between gap-3">
                    <div>
                      <p class="inline-flex items-center gap-2 rounded-full bg-indigo-50 px-3 py-1 text-xs font-semibold text-indigo-700">
                        <i class="fas text-[10px]" :class="column.icon"></i>
                        <span x-text="column.title"></span>
                      </p>
                      <p class="mt-2 text-xs text-slate-500" x-text="column.limit"></p>
                    </div>
                    <span class="text-[11px] font-semibold uppercase tracking-wide text-slate-400">
                      <span x-text="column.key === 'headline' ? 'Tone matched' : column.key === 'about' ? 'STAR-ready' : 'Shareable'"></span>
                    </span>
                  </div>
                  <p class="text-sm text-slate-600" x-text="column.description"></p>
                </header>
                <div class="flex flex-wrap gap-2">
                  <template x-for="variant in linkedinBio.variantGroups[column.key]" :key="variant.id">
                    <button
                      type="button"
                      class="inline-flex items-center gap-2 rounded-full border px-3 py-1.5 text-xs font-semibold transition"
                      :class="linkedinBio.isVariantActive(column.key, variant.id) ? 'border-indigo-300 bg-indigo-50 text-indigo-700 shadow-sm' : 'border-slate-200 bg-white text-slate-600 hover:border-indigo-200 hover:text-indigo-700'"
                      @click="linkedinBio.selectVariant(column.key, variant.id)"
                    >
                      <span x-text="variant.label"></span>
                      <span class="rounded-full bg-slate-100 px-2 py-0.5 text-[10px] font-semibold text-slate-500" x-text="variant.language.toUpperCase()"></span>
                    </button>
                  </template>
                </div>
                <div class="rounded-2xl border border-slate-100 bg-slate-50/70 p-4 text-sm text-slate-800">
                  <p class="whitespace-pre-line" x-text="linkedinBio.renderVariantText(linkedinBio.getSelectedVariant(column.key))"></p>
                </div>
                <div class="flex flex-wrap gap-2 text-[11px] text-slate-500">
                  <template x-for="badge in linkedinBio.variantBadges(linkedinBio.getSelectedVariant(column.key))" :key="badge">
                    <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-600">
                      <i class="fas fa-tag text-[9px]"></i>
                      <span x-text="badge"></span>
                    </span>
                  </template>
                </div>
                <footer class="mt-auto space-y-3 text-xs text-slate-500">
                  <div class="flex items-center justify-between">
                    <span>Evidence map</span>
                    <span class="font-semibold text-slate-700" x-text="`${linkedinBio.getSelectedVariant(column.key)?.evidenceRefs.length ?? 0} linked`"></span>
                  </div>
                  <ul class="space-y-2">
                    <template x-for="ref in linkedinBio.getSelectedVariant(column.key)?.evidenceRefs" :key="ref">
                      <li>
                        <button
                          type="button"
                          class="flex w-full items-start gap-2 rounded-xl border border-slate-200 bg-white px-3 py-2 text-left text-[11px] font-semibold text-slate-600 transition hover:border-indigo-200 hover:text-indigo-700"
                          @click="linkedinBio.revealEvidence(ref)"
                        >
                          <i class="fas fa-link text-[9px] text-indigo-500"></i>
                          <span x-text="linkedinBio.evidenceRecords.find((record) => record.id === ref)?.claim"></span>
                        </button>
                      </li>
                    </template>
                  </ul>
                </footer>
              </article>
            </template>
          </div>
        </div>

        <div class="grid gap-6 lg:grid-cols-[minmax(0,1.05fr)_minmax(0,0.95fr)]">
          <article class="space-y-6 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <SectionHeading
              eyebrow="Highlights"
              title="Everything you need for a magnetic LinkedIn profile"
              description="Purpose-built capabilities span imports, targeting, tone, compliance, and downstream integrations."
            />
            <div class="grid gap-4 sm:grid-cols-2">
              {featureHighlights.map((feature) => (
                <div class="rounded-2xl border border-slate-200 bg-slate-50/70 p-4">
                  <div class="flex items-center gap-2 text-sm font-semibold text-slate-900">
                    <i class={`fas text-[11px] text-indigo-500 ${feature.icon}`}></i>
                    <span>{feature.title}</span>
                  </div>
                  <p class="mt-2 text-xs text-slate-600">{feature.description}</p>
                </div>
              ))}
            </div>
          </article>
          <aside class="space-y-4 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <SectionHeading
              eyebrow="Workflow"
              title="From import to publish in four guided steps"
              description="The optimizer walks users through ingest, targeting, generation, and export with live scoring."
            />
            <ol class="space-y-3 text-xs text-slate-600">
              {workflowSteps.map((step) => (
                <li class="flex gap-3 rounded-2xl border border-slate-200 bg-slate-50/70 px-4 py-3">
                  <span class="flex h-6 w-6 items-center justify-center rounded-full bg-indigo-600 text-xs font-semibold text-white">
                    {step.step}
                  </span>
                  <div>
                    <p class="text-sm font-semibold text-slate-900">{step.title}</p>
                    <p class="mt-1 text-[11px]">{step.description}</p>
                  </div>
                </li>
              ))}
            </ol>
          </aside>
        </div>

        <div class="grid gap-6 lg:grid-cols-[minmax(0,1.1fr)_minmax(0,0.9fr)]">
          <article class="space-y-6 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <header class="flex items-center justify-between">
              <div>
                <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Scoring and linting</p>
                <h2 class="text-xl font-semibold text-slate-900">Live guardrails across every variant</h2>
              </div>
              <span class="inline-flex items-center gap-2 rounded-full bg-indigo-50 px-3 py-1 text-xs font-semibold text-indigo-700">
                <i class="fas fa-gauge-high text-[10px]"></i>
                Real-time
              </span>
            </header>
            <div class="grid gap-4 sm:grid-cols-2">
              <template x-for="signal in ${JSON.stringify(lintSignals)}" :key="signal.label">
                <div class="rounded-2xl border border-slate-200 bg-slate-50/80 p-4">
                  <p class="text-sm font-semibold text-slate-900" x-text="signal.label"></p>
                  <p class="mt-2 text-xs text-slate-600" x-text="signal.description"></p>
                </div>
              </template>
            </div>
            <div class="rounded-2xl border border-indigo-100 bg-indigo-50/70 p-4 text-xs text-indigo-800">
              <div class="flex flex-wrap items-center gap-3">
                <span class="inline-flex items-center gap-2 rounded-full bg-white px-3 py-1 text-[11px] font-semibold text-indigo-700">
                  <i class="fas fa-shield-check text-[9px]"></i>
                  Authenticity lock
                </span>
                <span x-text="linkedinBio.scoreSummary.buzzword"></span>
                <span>·</span>
                <span x-text="linkedinBio.scoreSummary.length"></span>
              </div>
            </div>
          </article>
          <aside class="space-y-4 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <header class="flex items-center justify-between">
              <div>
                <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Evidence spotlight</p>
                <h2 class="text-lg font-semibold text-slate-900">Map claims to proof instantly</h2>
              </div>
              <button
                type="button"
                class="text-xs font-semibold text-indigo-600"
                @click="linkedinBio.revealEvidence(null)"
              >
                Clear
              </button>
            </header>
            <div class="space-y-3">
              <template x-for="record in linkedinBio.evidenceRecords" :key="record.id">
                <button
                  type="button"
                  class="w-full rounded-2xl border px-4 py-3 text-left text-xs transition"
                  :class="linkedinBio.state.showEvidenceId === record.id ? 'border-indigo-300 bg-indigo-50 text-indigo-800 shadow-sm' : 'border-slate-200 bg-white text-slate-600 hover:border-indigo-200 hover:text-indigo-700'"
                  @click="linkedinBio.revealEvidence(record.id)"
                >
                  <p class="font-semibold" x-text="record.claim"></p>
                  <p class="mt-1 text-[11px]" x-text="record.source"></p>
                </button>
              </template>
            </div>
            <div class="rounded-2xl border border-slate-200 bg-slate-50/80 p-4 text-sm text-slate-700" x-show="linkedinBio.focusedEvidence" x-cloak>
              <p class="text-xs font-semibold uppercase tracking-wide text-slate-500">Evidence excerpt</p>
              <p class="mt-2 text-sm" x-text="linkedinBio.focusedEvidence?.excerpt"></p>
            </div>
          </aside>
        </div>

        <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
          <header class="flex flex-wrap items-center justify-between gap-4">
            <div class="space-y-1">
              <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Keyword intelligence</p>
              <h2 class="text-xl font-semibold text-slate-900">Coverage tracking and suggestions</h2>
            </div>
            <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-600">
              <i class="fas fa-list-check text-[10px]"></i>
              <span x-text="`${linkedinBio.keywordTotal} target keywords`"></span>
            </span>
          </header>
          <div class="mt-6 grid gap-6 md:grid-cols-3">
            <div>
              <h3 class="text-sm font-semibold text-slate-900">Covered</h3>
              <ul class="mt-3 space-y-2 text-xs text-slate-600">
                <template x-for="keyword in linkedinBio.keywordChecklist?.covered ?? []" :key="`covered-${keyword}`">
                  <li class="flex items-center gap-2">
                    <i class="fas fa-circle-check text-[9px] text-emerald-500"></i>
                    <span x-text="keyword"></span>
                  </li>
                </template>
              </ul>
            </div>
            <div>
              <h3 class="text-sm font-semibold text-slate-900">Partial or missing</h3>
              <ul class="mt-3 space-y-2 text-xs text-slate-600">
                <template x-for="keyword in linkedinBio.keywordChecklist?.partial ?? []" :key="`partial-${keyword}`">
                  <li class="flex items-center gap-2">
                    <i class="fas fa-minus text-[9px] text-amber-500"></i>
                    <span x-text="keyword"></span>
                  </li>
                </template>
                <template x-for="keyword in linkedinBio.keywordChecklist?.missing ?? []" :key="`missing-${keyword}`">
                  <li class="flex items-center gap-2">
                    <i class="fas fa-circle-exclamation text-[9px] text-rose-500"></i>
                    <span x-text="keyword"></span>
                  </li>
                </template>
              </ul>
            </div>
            <div>
              <h3 class="text-sm font-semibold text-slate-900">Suggestions</h3>
              <ul class="mt-3 space-y-2 text-xs text-slate-600">
                <template x-for="keyword in linkedinBio.keywordChecklist?.suggested ?? []" :key="`suggested-${keyword}`">
                  <li class="flex items-center gap-2">
                    <i class="fas fa-lightbulb text-[9px] text-indigo-500"></i>
                    <span x-text="keyword"></span>
                  </li>
                </template>
              </ul>
            </div>
          </div>
        </div>

        <div class="grid gap-6 lg:grid-cols-[minmax(0,1.15fr)_minmax(0,0.85fr)]">
          <article class="space-y-6 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <SectionHeading
              eyebrow="Integrations"
              title="Connected across Ansiversa"
              description="One-click actions keep your LinkedIn presence in sync with resumes, cover letters, portfolios, and outreach."
            />
            <div class="grid gap-4 sm:grid-cols-2">
              <template x-for="integration in ${JSON.stringify(integrationHighlights)}" :key="integration.name">
                <div class="rounded-2xl border border-slate-200 bg-slate-50/70 p-4">
                  <div class="flex items-center gap-2 text-sm font-semibold text-slate-900">
                    <i class="fas text-[11px] text-indigo-500" :class="integration.icon"></i>
                    <span x-text="integration.name"></span>
                  </div>
                  <p class="mt-2 text-xs text-slate-600" x-text="integration.description"></p>
                </div>
              </template>
            </div>
            <div class="rounded-2xl border border-indigo-100 bg-indigo-50/70 p-4 text-xs text-indigo-800">
              <p class="font-semibold">Pipeline ready</p>
              <p class="mt-1">Send artifacts downstream with metadata (tone, language, keyword coverage, evidence IDs) so companion tools keep compliance.</p>
            </div>
          </article>
          <aside class="space-y-4 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <SectionHeading
              eyebrow="API contracts"
              title="SSR endpoints for automation"
              description="Astro API routes return structured payloads, ready for queue workers or front-end islands."
            />
            <ul class="space-y-3 text-xs text-slate-600">
              <template x-for="contract in ${JSON.stringify(apiContracts)}" :key="contract.path">
                <li class="rounded-2xl border border-slate-200 bg-slate-50/70 px-4 py-3">
                  <p class="font-semibold text-slate-900">
                    <span class="rounded-full bg-indigo-100 px-2 py-0.5 text-[10px] font-semibold text-indigo-700" x-text="contract.method"></span>
                    <span class="ml-2" x-text="contract.path"></span>
                  </p>
                  <p class="mt-1 text-[11px]" x-text="contract.description"></p>
                </li>
              </template>
            </ul>
          </aside>
        </div>

        <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
          <SectionHeading
            eyebrow="Data model"
            title="Astro DB schema at a glance"
            description="Structured records keep variants, evidence, and history auditable across plans."
          />
          <div class="mt-6 overflow-hidden rounded-2xl border border-slate-200">
            <table class="min-w-full divide-y divide-slate-200 text-left text-sm">
              <thead class="bg-slate-50 text-xs font-semibold uppercase tracking-wide text-slate-500">
                <tr>
                  <th class="px-4 py-3">Entity</th>
                  <th class="px-4 py-3">Key fields</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-slate-100 text-xs text-slate-600">
                {dataModelRows.map((row) => (
                  <tr>
                    <td class="px-4 py-3 font-semibold text-slate-900">{row.entity}</td>
                    <td class="px-4 py-3 font-mono text-[11px] leading-relaxed text-slate-600">{row.fields}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
          <SectionHeading
            eyebrow="Plans and gating"
            title="Free vs Pro capabilities"
            description="Upgrade to unlock unlimited profiles, advanced linting, localization, and downstream integrations."
          />
          <div class="mt-6 overflow-hidden rounded-2xl border border-slate-200">
            <table class="min-w-full divide-y divide-slate-200 text-left text-sm">
              <thead class="bg-slate-50 text-xs font-semibold uppercase tracking-wide text-slate-500">
                <tr>
                  <th class="px-4 py-3">Feature</th>
                  <th class="px-4 py-3">Free</th>
                  <th class="px-4 py-3">Pro</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-slate-100 text-xs text-slate-600">
                {planRows.map((row) => (
                  <tr>
                    <td class="px-4 py-3 font-semibold text-slate-900">{row.feature}</td>
                    <td class="px-4 py-3">{row.free}</td>
                    <td class="px-4 py-3 text-indigo-600">{row.pro}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          <div class="mt-4 flex flex-wrap items-center gap-3 text-xs text-slate-500">
            <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-600">
              <i class="fas fa-gauge-high text-[10px]"></i>
              Rate limited per user/day
            </span>
            <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-600">
              <i class="fas fa-lock text-[10px]"></i>
              Exports gated per profile/hour
            </span>
          </div>
        </div>

        <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
          <SectionHeading
            eyebrow="Compliance and accessibility"
            title="Policy-safe by default"
            description="Guardrails ensure authentic, inclusive bios with full audit support and accessible UX."
          />
          <ul class="mt-6 grid gap-4 sm:grid-cols-2 text-sm text-slate-600">
            {compliancePoints.map((point) => (
              <li class="flex items-start gap-3 rounded-2xl border border-slate-200 bg-slate-50/70 px-4 py-3">
                <i class="fas fa-shield-heart mt-1 text-xs text-indigo-500"></i>
                <span>{point}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </section>
  </main>
</Layout>
