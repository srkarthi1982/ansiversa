---
import Layout from '../../../layouts/Layout.astro';
import Button from '../../../components/Button.astro';
import { db, Minutes, eq } from 'astro:db';
import { normalizeMinutesRow } from '../../../actions/minutes/utils';
import type { MinutesRecord } from '../../../lib/minutes/schema';
import { describeSummary, formatMeetingDate } from '../../../lib/minutes/utils';

export const prerender = false;

const slug = Astro.params.slug;
if (!slug) {
  throw Astro.redirect('/minutes');
}

const rows = await db.select().from(Minutes).where(eq(Minutes.slug, slug)).limit(1);
const record = rows[0];

if (!record || record.status !== 'published') {
  throw Astro.redirect('/minutes');
}

const minutes = normalizeMinutesRow(record) as MinutesRecord;
---
<Layout>
  <main class="min-h-screen bg-slate-50">
    <section class="border-b border-slate-200 bg-white/80 py-12 backdrop-blur">
      <div class="mx-auto flex flex-col gap-4 px-4 sm:px-6 lg:max-w-4xl">
        <div class="flex items-center gap-2 text-xs font-semibold uppercase tracking-wide text-slate-500">
          <span>Shared meeting minutes</span>
          <span class="h-1 w-1 rounded-full bg-slate-300"></span>
          <span x-data>Public view</span>
        </div>
        <div class="flex flex-wrap items-center justify-between gap-3">
          <div>
            <h1 class="text-3xl font-bold tracking-tight text-slate-900 sm:text-4xl">{minutes.title}</h1>
            <p class="mt-2 text-sm text-slate-600">
              {formatMeetingDate(minutes.meetingDate)} · {minutes.summary.actionItems.length} action items · {minutes.summary.keyPoints.length} key points
            </p>
          </div>
          <Button href="/minutes" variant="outline">
            <i class="fas fa-arrow-left text-xs"></i>
            Explore workspace
          </Button>
        </div>
        <p class="text-xs text-slate-500">
          Generated from the Ansiversa minutes workspace. Transcript hidden by default; contact the meeting host for raw notes.
        </p>
      </div>
    </section>

    <section class="py-16">
      <div class="mx-auto grid max-w-4xl gap-8 px-4 sm:px-6 lg:grid-cols-[1fr_0.85fr] lg:px-8">
        <article class="space-y-6">
          <section class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <h2 class="text-lg font-semibold text-slate-900">Summary</h2>
            <p class="mt-2 text-sm text-slate-600">{describeSummary(minutes.summary)}</p>
            <div class="mt-4 grid gap-4 sm:grid-cols-2">
              <div>
                <h3 class="text-xs font-semibold uppercase tracking-wide text-slate-500">Key points</h3>
                <ul class="mt-2 space-y-2 text-sm text-slate-700">
                  {minutes.summary.keyPoints.length ? (
                    minutes.summary.keyPoints.map((point, index) => (
                      <li class="flex items-start gap-2" key={`key-${index}`}>
                        <i class="fas fa-circle text-[6px] text-indigo-500"></i>
                        <span>{point}</span>
                      </li>
                    ))
                  ) : (
                    <li class="text-xs text-slate-400">Key points will appear here once added.</li>
                  )}
                </ul>
              </div>
              <div>
                <h3 class="text-xs font-semibold uppercase tracking-wide text-slate-500">Decisions</h3>
                <ul class="mt-2 space-y-2 text-sm text-slate-700">
                  {minutes.summary.decisions.length ? (
                    minutes.summary.decisions.map((decision, index) => (
                      <li class="flex items-start gap-2" key={`decision-${index}`}>
                        <i class="fas fa-scale-balanced text-[10px] text-emerald-500"></i>
                        <span>{decision}</span>
                      </li>
                    ))
                  ) : (
                    <li class="text-xs text-slate-400">No decisions documented.</li>
                  )}
                </ul>
              </div>
            </div>
          </section>

          <section class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <h2 class="text-lg font-semibold text-slate-900">Action items</h2>
            <p class="mt-2 text-xs text-slate-500">Owners can update status in the private builder. Export CSV to share with project tools.</p>
            <ul class="mt-4 space-y-3">
              {minutes.summary.actionItems.length ? (
                minutes.summary.actionItems.map((item) => (
                  <li class="rounded-2xl border border-slate-200 bg-slate-50 p-4" key={item.id}>
                    <div class="flex flex-wrap items-center justify-between gap-2 text-xs text-slate-500">
                      <span>
                        <i class="fas fa-user text-[10px] mr-1"></i>
                        {item.assignee || 'Unassigned'}
                      </span>
                      <span>
                        <i class="fas fa-calendar-day text-[10px] mr-1"></i>
                        {item.due ?? 'No due date'}
                      </span>
                      <span class="rounded-full bg-slate-200 px-3 py-1 font-semibold text-slate-600">{item.status}</span>
                    </div>
                    <p class="mt-2 text-sm text-slate-800">{item.task}</p>
                  </li>
                ))
              ) : (
                <li class="text-xs text-slate-400">No action items captured.</li>
              )}
            </ul>
          </section>
        </article>

        <aside class="space-y-6">
          <section class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <h2 class="text-sm font-semibold text-slate-900">Attendees</h2>
            <ul class="mt-3 space-y-2 text-sm text-slate-700">
              {minutes.attendees.length ? (
                minutes.attendees.map((person) => (
                  <li class="flex flex-col rounded-2xl bg-slate-50 px-4 py-3" key={person.id}>
                    <span class="font-semibold text-slate-900">{person.name}</span>
                    {person.email ? <span class="text-xs text-slate-500">{person.email}</span> : null}
                    {person.role ? <span class="text-xs text-slate-500">{person.role}</span> : null}
                  </li>
                ))
              ) : (
                <li class="text-xs text-slate-400">Attendee list hidden.</li>
              )}
            </ul>
          </section>

          <section class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <h2 class="text-sm font-semibold text-slate-900">Risks & parking lot</h2>
            <div class="mt-3 space-y-4">
              <div>
                <h3 class="text-xs font-semibold uppercase tracking-wide text-slate-500">Risks</h3>
                <ul class="mt-1 space-y-1 text-sm text-slate-700">
                  {minutes.summary.risks.length ? (
                    minutes.summary.risks.map((risk, index) => (
                      <li class="flex items-start gap-2" key={`risk-${index}`}>
                        <i class="fas fa-triangle-exclamation text-[10px] text-amber-500"></i>
                        <span>{risk}</span>
                      </li>
                    ))
                  ) : (
                    <li class="text-xs text-slate-400">No risks recorded.</li>
                  )}
                </ul>
              </div>
              <div>
                <h3 class="text-xs font-semibold uppercase tracking-wide text-slate-500">Parking lot</h3>
                <ul class="mt-1 space-y-1 text-sm text-slate-700">
                  {minutes.summary.parkingLot.length ? (
                    minutes.summary.parkingLot.map((entry, index) => (
                      <li class="flex items-start gap-2" key={`lot-${index}`}>
                        <i class="fas fa-circle-dot text-[8px] text-slate-400"></i>
                        <span>{entry}</span>
                      </li>
                    ))
                  ) : (
                    <li class="text-xs text-slate-400">No follow-ups logged.</li>
                  )}
                </ul>
              </div>
            </div>
          </section>

          <section class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <h2 class="text-sm font-semibold text-slate-900">Privacy notice</h2>
            <p class="mt-2 text-xs text-slate-600">
              This summary is published from the Ansiversa workspace. Transcript content remains private unless explicitly shared by the meeting owner.
            </p>
          </section>
        </aside>
      </div>
    </section>
  </main>
</Layout>
