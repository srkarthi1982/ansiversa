---
import Layout from "../layouts/Layout.astro";
import { readFile } from "node:fs/promises";

const endpointGlobs = import.meta.glob("./**/api/*.{ts,js}");
const endpoints = [];

for (const relativePath of Object.keys(endpointGlobs)) {
  const fileUrl = new URL(relativePath, import.meta.url);
  const source = await readFile(fileUrl, "utf-8");
  const methodMatches = Array.from(
    source.matchAll(/export\s+(?:const|async\s+function|function)\s+(GET|POST|PUT|PATCH|DELETE)\b/gi)
  );
  const methods = [...new Set(methodMatches.map((match) => match[1].toUpperCase()))];
  if (methods.length === 0) {
    methods.push("POST");
  }
  const route = relativePath
    .replace(/^\.\//, "/")
    .replace(/\.(ts|js)$/i, "")
    .replace(/\/index$/i, "");
  const segments = route.split("/").filter(Boolean);
  const appSlug = segments[0] ?? "api";
  endpoints.push({
    appSlug,
    route,
    methods,
  });
}

endpoints.sort((a, b) => a.route.localeCompare(b.route));

const toTitle = (slug) =>
  slug
    .split("-")
    .map((part) => (part ? part[0].toUpperCase() + part.slice(1) : part))
    .join(" ");

const labelOverrides = new Map([
  ["api", "Core API"],
  ["minutes", "Meeting Minutes"],
]);

const groupDescriptions = new Map([
  ["api", "Shared endpoints for platform-wide utilities such as quiz seeding."],
  ["contract", "Contracts workspace routes used to create, edit, and publish agreements."],
  ["proposal", "Proposal workspace actions for drafting, improving, and sharing proposals."],
  ["email", "Email workspace helpers for polishing and storing communication drafts."],
  ["minutes", "Meeting Minutes workspace endpoints for recording, summarising, and exporting notes."],
]);

const groupedEndpoints = Array.from(
  endpoints.reduce((acc, endpoint) => {
    if (!acc.has(endpoint.appSlug)) {
      acc.set(endpoint.appSlug, []);
    }
    acc.get(endpoint.appSlug).push(endpoint);
    return acc;
  }, new Map())
).map(([slug, routes]) => ({
  slug,
  label: labelOverrides.get(slug) ?? toTitle(slug),
  routes,
}));

groupedEndpoints.sort((a, b) => a.label.localeCompare(b.label));

const totalEndpoints = endpoints.length;
const totalWorkspaces = groupedEndpoints.length;
const methodSet = new Set(endpoints.flatMap((endpoint) => endpoint.methods));
const methodSummary = methodSet.size ? Array.from(methodSet).join(" · ") : "—";
const highlightCards = [
  { label: "Workspace-powered endpoints", value: totalEndpoints.toString() },
  { label: "Mini-app workspaces represented", value: totalWorkspaces.toString() },
  { label: "HTTP verbs detected", value: methodSummary },
];

const describeGroup = (slug, label) =>
  groupDescriptions.get(slug) ?? `Service endpoints that power the ${label} workspace.`;
---

<Layout>
  <main class="bg-slate-950 text-white">
    <section class="relative isolate overflow-hidden py-20 sm:py-24">
      <div class="absolute inset-0 -z-10 bg-gradient-to-br from-sky-500/20 via-indigo-600/30 to-purple-700/40 blur-3xl opacity-70"></div>
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="grid gap-12 lg:grid-cols-[1.15fr_0.85fr] lg:items-center">
          <div class="space-y-6">
            <p class="inline-flex items-center gap-2 rounded-full border border-white/20 bg-white/10 px-4 py-1 text-xs font-semibold uppercase tracking-[0.35em] text-white/80">
              API Hub
            </p>
            <h1 class="text-4xl font-black leading-tight sm:text-5xl">
              Integrate Ansiversa with secure workspace endpoints
            </h1>
            <p class="max-w-3xl text-base text-white/70">
              Every productivity workspace ships with server-first endpoints so you can seed data, trigger AI flows, and publish shareable artefacts from your own automations. Explore the catalogue below and wire Ansiversa into your favourite tools.
            </p>
            <div class="flex flex-wrap gap-3">
              <a
                href="/documentation"
                class="inline-flex items-center justify-center gap-2 rounded-full bg-white px-6 py-3 text-sm font-semibold text-slate-950 shadow-lg shadow-indigo-500/30 transition hover:-translate-y-0.5 hover:bg-slate-100"
              >
                View docs
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  stroke-width="1.5"
                  aria-hidden="true"
                  focusable="false"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                </svg>
              </a>
              <a
                href="mailto:contact@ansiversa.com"
                class="inline-flex items-center justify-center gap-2 rounded-full border border-white/40 px-6 py-3 text-sm font-semibold text-white/80 transition hover:border-white/70 hover:text-white"
              >
                Talk to the team
              </a>
            </div>
          </div>
          <div class="grid gap-4">
            {highlightCards.map((card) => (
              <div class="rounded-3xl border border-white/15 bg-white/10 p-6 shadow-xl shadow-indigo-900/40">
                <p class="text-xs font-semibold uppercase tracking-[0.35em] text-white/60">{card.label}</p>
                <p class="mt-3 text-3xl font-bold text-white">{card.value}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>

    <section class="border-t border-white/10 bg-slate-900/60 py-16">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="grid gap-10 lg:grid-cols-[1.1fr_0.9fr] lg:items-start">
          <div class="space-y-5">
            <h2 class="text-2xl font-semibold">Authenticate once, orchestrate everywhere</h2>
            <p class="text-sm text-white/70">
              Use your Ansiversa session or API token to call any workspace endpoint. Each route responds with JSON payloads tuned for automation workflows, so you can pipe data into dashboards, CRMs, or custom bots without manual steps.
            </p>
            <ul class="space-y-3 text-sm text-white/70">
              <li class="flex items-start gap-3">
                <span class="mt-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white/10 text-xs font-semibold">1</span>
                <span>Authenticate using a bearer token issued from your Ansiversa account settings.</span>
              </li>
              <li class="flex items-start gap-3">
                <span class="mt-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white/10 text-xs font-semibold">2</span>
                <span>Call the endpoint that matches the workspace action you need to perform.</span>
              </li>
              <li class="flex items-start gap-3">
                <span class="mt-1 inline-flex h-6 w-6 items-center justify-center rounded-full bg-white/10 text-xs font-semibold">3</span>
                <span>Process the JSON response or follow the returned link to view published artefacts.</span>
              </li>
            </ul>
          </div>
          <div class="rounded-3xl border border-white/10 bg-black/20 p-6 shadow-xl shadow-indigo-900/40">
            <p class="text-xs font-semibold uppercase tracking-[0.35em] text-white/50">Sample request</p>
            <pre class="mt-4 overflow-x-auto rounded-2xl bg-black/60 p-4 text-xs leading-relaxed text-emerald-200">
              <code>
curl -X POST \
  https://ansiversa.com/minutes/api/summarize \
  -H "Authorization: Bearer $ANSIVERSA_TOKEN" \
  -H "Content-Type: application/json" \
  -d '&#123;"transcriptId":"meeting-123","focus":"action-items"&#125;'
              </code>
            </pre>
            <p class="mt-4 text-xs font-semibold uppercase tracking-[0.35em] text-white/50">Response preview</p>
            <pre class="mt-3 overflow-x-auto rounded-2xl bg-black/60 p-4 text-xs leading-relaxed text-sky-200">
              <code>
&#123;
  "summary": &#123;
    "title": "Marketing sync",
    "actionItems": ["Launch signup experiment", "Prepare Q2 roadmap"]
  &#125;,
  "links": &#123;
    "workspace": "https://ansiversa.com/minutes/view/meeting-123"
  &#125;
&#125;
              </code>
            </pre>
          </div>
        </div>
      </div>
    </section>

    <section class="bg-white py-16 text-slate-950">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="max-w-3xl">
          <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-600">Endpoint directory</p>
          <h2 class="mt-3 text-3xl font-bold tracking-tight">Browse live API routes by workspace</h2>
          <p class="mt-3 text-sm text-slate-600">
            {totalEndpoints > 0
              ? `We detected ${totalEndpoints} server endpoints across ${totalWorkspaces} workspaces.`
              : "We did not detect any server endpoints yet."}
          </p>
        </div>

        {groupedEndpoints.length === 0 ? (
          <div class="mt-10 rounded-3xl border border-dashed border-slate-300 bg-slate-50 p-12 text-center text-sm text-slate-600">
            <p>No endpoints were discovered. Check back after enabling workspace automations.</p>
          </div>
        ) : (
          <div class="mt-10 grid gap-6">
            {groupedEndpoints.map((group) => (
              <article class="rounded-3xl border border-slate-200 bg-white/90 p-6 shadow-soft transition hover:-translate-y-0.5 hover:shadow-md">
                <div class="flex flex-wrap items-start justify-between gap-4">
                  <div>
                    <h3 class="text-xl font-semibold text-slate-900">{group.label}</h3>
                    <p class="mt-1 text-sm text-slate-600">{describeGroup(group.slug, group.label)}</p>
                  </div>
                  <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-600">
                    <span class="inline-block h-2 w-2 rounded-full bg-gradient-to-r from-indigo-500 to-sky-500"></span>
                    {group.routes.length} endpoints
                  </span>
                </div>
                <ul class="mt-5 space-y-2">
                  {group.routes.map((endpoint) => (
                    <li class="flex flex-wrap items-center justify-between gap-3 rounded-2xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm text-slate-700">
                      <div class="flex flex-wrap items-center gap-3">
                        <div class="flex flex-wrap items-center gap-1">
                          {endpoint.methods.map((method) => (
                            <span class="inline-flex items-center justify-center rounded-full bg-indigo-50 px-2.5 py-1 text-xs font-semibold text-indigo-600">
                              {method}
                            </span>
                          ))}
                        </div>
                        <code class="font-mono text-sm text-slate-900">{endpoint.route}</code>
                      </div>
                    </li>
                  ))}
                </ul>
              </article>
            ))}
          </div>
        )}
      </div>
    </section>
  </main>
</Layout>
