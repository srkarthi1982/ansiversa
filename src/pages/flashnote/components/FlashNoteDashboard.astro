---
---
<section
  x-data="() => ({ flashnote: $store.flashnote })"
  class="space-y-8"
>
  <header class="flex flex-wrap items-center justify-between gap-4">
    <div class="space-y-2">
      <h2 class="text-2xl font-semibold text-slate-900">Your flash notes</h2>
      <p class="text-sm text-slate-600">
        Capture quick insights, then refine or review them with AI assistance.
      </p>
    </div>
    <div class="flex flex-wrap items-center gap-3">
      <button
        type="button"
        class="inline-flex items-center gap-2 rounded-full bg-indigo-600 px-4 py-2 text-sm font-semibold text-white shadow-sm transition hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
        @click="flashnote.commit()"
        :disabled="flashnote.state.loading"
      >
        <i class="fas fa-save text-xs"></i>
        Save note
      </button>
      <button
        type="button"
        class="inline-flex items-center gap-2 rounded-full border border-slate-200 bg-white px-4 py-2 text-sm font-semibold text-slate-700 shadow-sm transition hover:border-indigo-200 hover:text-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
        @click="flashnote.createDraft()"
        :disabled="flashnote.state.loading"
      >
        <i class="fas fa-file-circle-plus text-xs"></i>
        New note
      </button>
      <button
        type="button"
        class="inline-flex items-center gap-2 rounded-full border border-dashed border-slate-300 px-4 py-2 text-sm font-semibold text-slate-600 transition hover:border-indigo-300 hover:text-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
        @click="flashnote.importSample()"
      >
        <i class="fas fa-magic-wand-sparkles text-xs"></i>
        Import sample deck
      </button>
    </div>
  </header>

  <template x-if="flashnote.state.loading">
    <div class="grid gap-4 sm:grid-cols-2 xl:grid-cols-3">
      <template x-for="idx in 6" :key="`flashnote-skeleton-${idx}`">
        <article class="animate-pulse rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
          <div class="h-6 w-32 rounded bg-slate-200"></div>
          <div class="mt-4 space-y-3">
            <div class="h-4 w-full rounded bg-slate-100"></div>
            <div class="h-4 w-5/6 rounded bg-slate-100"></div>
            <div class="h-4 w-2/3 rounded bg-slate-100"></div>
          </div>
          <div class="mt-6 flex flex-wrap gap-2">
            <span class="inline-block h-6 w-20 rounded-full bg-slate-100"></span>
            <span class="inline-block h-6 w-16 rounded-full bg-slate-100"></span>
          </div>
        </article>
      </template>
    </div>
  </template>

  <template x-if="!flashnote.state.loading && flashnote.state.filteredNotes.length === 0">
    <div class="rounded-3xl border border-dashed border-slate-300 bg-white px-10 py-16 text-center shadow-sm">
      <div class="mx-auto flex h-14 w-14 items-center justify-center rounded-full bg-indigo-50 text-indigo-500">
        <i class="fas fa-bolt text-lg"></i>
      </div>
      <h3 class="mt-6 text-lg font-semibold text-slate-900">Create your first flash note</h3>
      <p class="mt-2 text-sm text-slate-600">
        Notes you save will appear here. Organize them with tags or use the sample deck to get started.
      </p>
      <div class="mt-6 flex flex-wrap items-center justify-center gap-3">
        <button
          type="button"
          class="inline-flex items-center gap-2 rounded-full bg-indigo-600 px-4 py-2 text-sm font-semibold text-white shadow-sm transition hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
          @click="flashnote.createDraft()"
        >
          <i class="fas fa-plus text-xs"></i>
          New note
        </button>
        <button
          type="button"
          class="inline-flex items-center gap-2 rounded-full border border-slate-200 bg-white px-4 py-2 text-sm font-semibold text-slate-700 shadow-sm transition hover:border-indigo-200 hover:text-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
          @click="flashnote.importSample()"
        >
          <i class="fas fa-layer-group text-xs"></i>
          Import sample deck
        </button>
      </div>
    </div>
  </template>

  <div class="grid gap-4 sm:grid-cols-2 xl:grid-cols-3" x-show="flashnote.state.filteredNotes.length > 0">
    <template x-for="note in flashnote.state.filteredNotes" :key="note.id">
      <article
        class="flex h-full flex-col justify-between rounded-2xl border border-slate-200 bg-white p-6 shadow-sm transition hover:-translate-y-1 hover:border-indigo-200 hover:shadow-lg focus-within:-translate-y-1 focus-within:border-indigo-300 focus-within:shadow-lg"
        :class="flashnote.state.activeNoteId === note.id ? 'border-indigo-400 shadow-lg' : ''"
      >
        <div class="space-y-4">
          <div class="flex items-start justify-between gap-3">
            <h3 class="text-lg font-semibold text-slate-900" x-text="note.title"></h3>
            <button
              type="button"
              class="rounded-full border border-transparent px-3 py-1 text-xs font-semibold text-slate-500 hover:border-indigo-200 hover:text-indigo-600"
              @click="flashnote.selectNote(note.id)"
            >
              Open
            </button>
          </div>
          <p class="line-clamp-3 text-sm text-slate-600" x-text="note.content"></p>
        </div>
        <div class="mt-6 space-y-3">
          <div class="flex flex-wrap gap-2">
            <template x-for="tag in note.tags" :key="`${note.id}-${tag}`">
              <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-600">
                <i class="fas fa-hashtag text-[10px]"></i>
                <span x-text="tag"></span>
              </span>
            </template>
            <template x-if="note.tags.length === 0">
              <span class="rounded-full bg-slate-100 px-3 py-1 text-xs font-medium text-slate-500">No tags</span>
            </template>
          </div>
          <div class="flex items-center justify-between text-xs text-slate-500">
            <span>
              Updated
              <time :datetime="note.updatedAt" x-text="new Date(note.updatedAt).toLocaleString()"></time>
            </span>
            <span x-text="flashnote.describeNote(note)"></span>
          </div>
        </div>
      </article>
    </template>
  </div>
</section>
