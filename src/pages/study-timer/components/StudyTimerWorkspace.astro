---
import Button from '../../../components/Button.astro';
import SectionHeading from '../../../components/SectionHeading.astro';
---
<section
  class="relative border-t border-slate-200 bg-white py-16"
  x-data="() => ({ timer: $store.studyTimer, logNote: '' })"
>
  <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between gap-6">
      <SectionHeading
        eyebrow="Workspace"
        title="Operate the timer, tags, and notes from a single focus hub"
        description="Keep your active session, quick stats, and history insights in view — perfect for mid-study adjustments."
      />
      <div class="hidden shrink-0 rounded-full border border-slate-200 bg-white px-4 py-2 text-xs font-semibold text-slate-600 shadow-sm sm:flex sm:items-center sm:gap-2">
        <i class="fas fa-keyboard text-indigo-500"></i>
        <span>Shortcuts: Space to start/pause · R reset · I interruption</span>
      </div>
    </div>

    <div class="mt-12 grid gap-8 lg:grid-cols-[1.1fr_0.9fr]">
      <div class="space-y-8">
        <article class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
          <header class="flex flex-wrap items-center justify-between gap-4">
            <div>
              <h2 class="text-xl font-semibold text-slate-900">Presets</h2>
              <p class="text-sm text-slate-600">Pick the cycle that matches your energy level.</p>
            </div>
            <a
              href="#"
              class="inline-flex items-center gap-2 text-sm font-semibold text-indigo-600 hover:text-indigo-500"
              aria-disabled="true"
            >
              Manage presets
              <i class="fas fa-arrow-right text-xs"></i>
            </a>
          </header>
          <div class="mt-6 grid gap-4 md:grid-cols-2">
            <template x-for="preset in timer.state.presets" :key="preset.id">
              <button
                type="button"
                class="group flex h-full flex-col justify-between rounded-2xl border border-slate-200 bg-slate-50/80 p-4 text-left shadow-sm transition hover:-translate-y-1 hover:border-indigo-200 hover:bg-white hover:shadow-lg"
                :class="timer.state.activePresetId === preset.id ? 'border-indigo-400 bg-white shadow-lg' : ''"
                @click="timer.togglePreset(preset.id)"
              >
                <div class="flex items-start justify-between gap-4">
                  <div>
                    <p class="text-sm font-semibold text-slate-900" x-text="preset.name"></p>
                    <p class="mt-1 text-xs text-slate-500" x-text="timer.describePreset(preset)"></p>
                  </div>
                  <span
                    class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-[11px] font-semibold text-indigo-600"
                    :class="`bg-gradient-to-r ${preset.color}`"
                  >
                    <i class="fas fa-wave-square text-[10px]"></i>
                    Cycle
                  </span>
                </div>
                <p class="mt-4 text-xs text-slate-500" x-text="preset.description"></p>
              </button>
            </template>
          </div>
        </article>

        <article class="rounded-3xl border border-slate-200 bg-slate-50 p-6 shadow-inner">
          <div class="flex flex-wrap items-center justify-between gap-4">
            <div>
              <h3 class="text-lg font-semibold text-slate-900">Session focus</h3>
              <p class="text-sm text-slate-600">
                Keep an eye on goal progress while you work — updates land in real time.
              </p>
            </div>
            <div class="flex items-center gap-3 text-sm">
              <label class="flex items-center gap-2 font-semibold text-slate-600">
                <input
                  type="checkbox"
                  class="h-4 w-4 rounded border-slate-300 text-indigo-600 focus:ring-indigo-500"
                  x-model="timer.state.autoStartBreaks"
                />
                Auto-start breaks
              </label>
              <label class="flex items-center gap-2 font-semibold text-slate-600">
                <input
                  type="checkbox"
                  class="h-4 w-4 rounded border-slate-300 text-indigo-600 focus:ring-indigo-500"
                  x-model="timer.state.autoStartWork"
                />
                Auto-start focus
              </label>
            </div>
          </div>
          <div class="mt-6 grid gap-4 sm:grid-cols-3">
            <div class="rounded-2xl border border-indigo-100 bg-white p-4 shadow-sm">
              <p class="text-xs font-semibold uppercase tracking-wide text-indigo-500">Daily goal</p>
              <p class="mt-2 text-2xl font-semibold text-slate-900" x-text="`${timer.state.goal.completedDailyMinutes} / ${timer.state.goal.targetDailyMinutes} min`"></p>
              <p class="text-xs text-slate-500" x-text="`Streak ${timer.state.goal.streakDays} days · Best ${timer.state.goal.longestStreak}`"></p>
            </div>
            <div class="rounded-2xl border border-emerald-100 bg-white p-4 shadow-sm">
              <p class="text-xs font-semibold uppercase tracking-wide text-emerald-500">Pomodoros</p>
              <p class="mt-2 text-2xl font-semibold text-slate-900" x-text="`${timer.state.completedPomodorosToday} done`"></p>
              <p class="text-xs text-slate-500" x-text="`Target ${timer.state.goal.targetDailyPomos}`"></p>
            </div>
            <div class="rounded-2xl border border-slate-200 bg-white p-4 shadow-sm">
              <p class="text-xs font-semibold uppercase tracking-wide text-slate-500">Next break</p>
              <p class="mt-2 text-2xl font-semibold text-slate-900" x-text="`${timer.state.upcomingPhaseDurationMinutes} min`"></p>
              <p class="text-xs text-slate-500" x-text="timer.state.upcomingPhaseLabel"></p>
            </div>
          </div>
          <div class="mt-6 flex flex-wrap items-center gap-3">
            <Button
              size="sm"
              color="indigo"
              class="rounded-full !px-4"
              x-on:click="timer.toggleTimer()"
            >
              <i class="fas" :class="timer.state.isRunning ? 'fa-pause' : 'fa-play'"></i>
              <span x-text="timer.state.isRunning ? 'Pause session' : 'Resume session'"></span>
            </Button>
            <Button size="sm" variant="ghost" class="rounded-full !px-4" x-on:click="timer.resetTimer()">
              <i class="fas fa-rotate-left text-xs"></i>
              Reset session
            </Button>
            <p class="text-xs text-slate-500" x-text="timer.state.lastAction"></p>
          </div>
        </article>

        <article class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
          <h3 class="text-lg font-semibold text-slate-900">Recent history</h3>
          <p class="mt-2 text-sm text-slate-600">Yesterday’s sessions at a glance.</p>
          <div class="mt-4 space-y-4">
            <template x-for="day in timer.state.history" :key="day.date">
              <div class="rounded-2xl border border-slate-100 bg-slate-50/60 p-4">
                <div class="flex flex-wrap items-center justify-between gap-3 text-sm text-slate-600">
                  <div class="font-semibold text-slate-800">
                    <time :datetime="day.date" x-text="new Date(day.date).toLocaleDateString(undefined, { weekday: 'short', month: 'short', day: 'numeric' })"></time>
                  </div>
                  <div class="flex items-center gap-4">
                    <span><i class="fas fa-clock text-indigo-500"></i> <span x-text="`${day.totalMinutes} min`"></span></span>
                    <span><i class="fas fa-fire text-emerald-500"></i> <span x-text="`${day.pomodoros} pomos`"></span></span>
                    <span><i class="fas fa-triangle-exclamation text-amber-500"></i> <span x-text="`${day.interruptions} interruptions`"></span></span>
                  </div>
                </div>
                <ul class="mt-4 space-y-3">
                  <template x-for="session in day.sessions" :key="session.id">
                    <li class="flex flex-col gap-2 rounded-2xl border border-white/70 bg-white/80 p-3 shadow-sm">
                      <div class="flex flex-wrap items-center justify-between gap-3">
                        <p class="text-sm font-semibold text-slate-900" x-text="session.subject"></p>
                        <span class="inline-flex items-center gap-2 rounded-full bg-indigo-100 px-3 py-1 text-xs font-semibold text-indigo-600">
                          <i class="fas fa-stopwatch text-[10px]"></i>
                          <span x-text="`${session.durationMinutes} min`"></span>
                        </span>
                      </div>
                      <div class="flex flex-wrap items-center gap-2 text-xs text-slate-500">
                        <template x-for="tag in session.tags" :key="`${session.id}-${tag}`">
                          <span class="rounded-full bg-slate-100 px-2.5 py-1 font-semibold text-slate-600">#<span x-text="tag"></span></span>
                        </template>
                        <span class="ml-auto flex items-center gap-1" x-text="session.interruptions ? `${session.interruptions} interruptions` : 'No interruptions'"></span>
                      </div>
                      <template x-if="session.note">
                        <p class="text-xs text-slate-500" x-text="session.note"></p>
                      </template>
                    </li>
                  </template>
                </ul>
              </div>
            </template>
          </div>
        </article>
      </div>

      <div class="space-y-8">
        <article class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
          <header class="flex items-center justify-between">
            <div>
              <h3 class="text-lg font-semibold text-slate-900">Focus tags</h3>
              <p class="text-sm text-slate-600">Tap to mark what you’re studying right now.</p>
            </div>
            <span class="rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-600">
              <i class="fas fa-layer-group text-[10px]"></i>
              Live tagging
            </span>
          </header>
          <div class="mt-4 flex flex-wrap gap-3">
            <template x-for="tag in timer.state.tags" :key="tag.id">
              <button
                type="button"
                class="inline-flex items-center gap-2 rounded-full px-4 py-2 text-sm font-semibold shadow-sm transition hover:-translate-y-0.5"
                :class="timer.state.selectedTagIds.includes(tag.id) ? `${tag.color} ring-2 ring-offset-2 ring-indigo-200` : `${tag.color} opacity-80`"
                @click="timer.toggleTag(tag.id)"
              >
                <i class="fas fa-hashtag text-xs"></i>
                <span x-text="tag.label"></span>
                <span class="text-[11px] font-medium text-slate-600" x-text="`${tag.usageMinutes} min`"></span>
              </button>
            </template>
          </div>
        </article>

        <article class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
          <h3 class="text-lg font-semibold text-slate-900">Session notes</h3>
          <p class="mt-1 text-sm text-slate-600">Capture quick highlights or resource links for this session.</p>
          <textarea
            class="mt-4 h-32 w-full resize-none rounded-2xl border border-slate-200 bg-slate-50 p-4 text-sm text-slate-700 shadow-inner focus:border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-200"
            placeholder="What did you cover? Any blockers or resources to follow up on?"
            x-model="timer.state.note"
          ></textarea>
          <div class="mt-3 flex flex-wrap items-center justify-between gap-3 text-xs text-slate-500">
            <span x-text="timer.state.note.length ? `${timer.state.note.length} characters` : 'Notes autosave locally'">Notes autosave locally</span>
            <div class="flex items-center gap-2">
              <i class="fas fa-link text-indigo-500"></i>
              <span>Attach to Planner or FlashNote later</span>
            </div>
          </div>
        </article>

        <article class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
          <header class="flex flex-wrap items-center justify-between gap-3">
            <div>
              <h3 class="text-lg font-semibold text-slate-900">Interruption log</h3>
              <p class="text-sm text-slate-600">Track distractions to coach better habits.</p>
            </div>
            <button
              type="button"
              class="inline-flex items-center gap-2 rounded-full bg-rose-50 px-4 py-2 text-xs font-semibold text-rose-600 shadow-sm hover:bg-rose-100"
              @click="timer.logInterruption('other', logNote); logNote = ''"
            >
              <i class="fas fa-plus text-[10px]"></i>
              Quick log
            </button>
          </header>
          <div class="mt-4 flex flex-wrap gap-3">
            <template x-for="reason in timer.state.distractionReasons" :key="reason.id">
              <button
                type="button"
                class="inline-flex items-center gap-2 rounded-full border border-slate-200 bg-white px-4 py-2 text-xs font-semibold text-slate-600 shadow-sm transition hover:border-rose-200 hover:text-rose-600"
                @click="timer.logInterruption(reason.id, logNote); logNote = ''"
              >
                <i class="fas text-[10px]" :class="reason.icon"></i>
                <span x-text="reason.label"></span>
              </button>
            </template>
          </div>
          <textarea
            class="mt-4 h-20 w-full rounded-2xl border border-slate-200 bg-slate-50 p-3 text-sm text-slate-700 focus:border-rose-200 focus:outline-none focus:ring-2 focus:ring-rose-100"
            placeholder="Optional note about the interruption"
            x-model="logNote"
          ></textarea>
          <ul class="mt-4 space-y-3">
            <template x-for="interrupt in timer.state.interruptions" :key="interrupt.id">
              <li class="flex flex-col gap-1 rounded-2xl border border-slate-100 bg-slate-50/60 p-3 text-xs text-slate-500">
                <div class="flex items-center justify-between">
                  <span class="font-semibold text-slate-700" x-text="interrupt.reason"></span>
                  <time :datetime="interrupt.at" x-text="new Date(interrupt.at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })"></time>
                </div>
                <template x-if="interrupt.note">
                  <p class="text-slate-500" x-text="interrupt.note"></p>
                </template>
              </li>
            </template>
            <template x-if="timer.state.interruptions.length === 0">
              <li class="rounded-2xl border border-dashed border-slate-200 bg-slate-50 px-4 py-6 text-center text-xs font-semibold text-slate-500">
                No interruptions logged yet.
              </li>
            </template>
          </ul>
        </article>
      </div>
    </div>
  </div>
</section>
