---
import Layout from '../../layouts/Layout.astro';
import Button from '../../components/Button.astro';
import Modal from '../../components/Modal.astro';

const planHighlights = [
  { label: 'Lessons', free: 'Up to 10 drafts', pro: 'Unlimited' },
  { label: 'Modules', free: '2 active sequences', pro: 'Unlimited' },
  { label: 'AI assist', free: 'Outline & objectives (5/day)', pro: 'Full suite & unlimited runs' },
  { label: 'Exports', free: 'PDF · DOCX · Markdown (watermark)', pro: 'Brandless PDF/DOCX/MD + Calendar (ics)' },
  { label: 'Localization', free: 'Manual translation notes', pro: 'AI translation + RTL preview' },
];

const exportHighlights = [
  {
    icon: 'fas fa-file-pdf',
    title: 'Beautiful exports',
    description:
      'Generate branded PDFs, DOCX teacher packs, and Markdown handouts. Watermark removed on Pro.',
  },
  {
    icon: 'fas fa-calendar-days',
    title: 'Calendar sync',
    description:
      'Send lessons and modules directly to Google Calendar, Outlook, or download .ics pacing guides.',
  },
  {
    icon: 'fas fa-language',
    title: 'Localization ready',
    description:
      'Preview bilingual exports, auto-generate translations, and flip into RTL-friendly layouts instantly.',
  },
  {
    icon: 'fas fa-universal-access',
    title: 'Accessibility first',
    description:
      'Capture accommodations, extension tasks, and accessibility notes so every learner has a plan.',
  },
];

const integrationHighlights = [
  {
    icon: 'fas fa-graduation-cap',
    title: 'Quiz Institute',
    description:
      'Attach existing quizzes, auto-generate new MCQs, and sync attempts to keep analytics aligned.',
  },
  {
    icon: 'fas fa-layer-group',
    title: 'Module sequencing',
    description:
      'Group lessons into multi-week modules with prerequisites, pacing, and exportable overviews.',
  },
  {
    icon: 'fas fa-diagram-project',
    title: 'Section blocks',
    description:
      'Drag-and-drop Warm-up, Teach, Explore, Practice, Assess, and Wrap-up blocks with timings.',
  },
  {
    icon: 'fas fa-cloud-arrow-up',
    title: 'Resource vault',
    description:
      'Store slides, worksheets, and videos with metadata so exports and previews stay in sync.',
  },
];

const apiRoutes = [
  { method: 'POST', path: '/lesson/api/create', description: 'Create a draft lesson from blank or a template.' },
  { method: 'POST', path: '/lesson/api/ai-outline', description: 'Generate outlines, objectives, and suggested timings.' },
  { method: 'POST', path: '/lesson/api/sections', description: 'Persist lesson blocks, reordering, and materials.' },
  { method: 'POST', path: '/lesson/api/quiz-link', description: 'Attach an existing quiz from Quiz Institute.' },
  { method: 'POST', path: '/lesson/api/ai-quiz', description: 'Draft formative questions and answer keys with AI.' },
  { method: 'POST', path: '/lesson/api/export', description: 'Return PDF, DOCX, or Markdown exports with watermark handling.' },
  { method: 'POST', path: '/lesson/api/publish', description: 'Validate requirements and publish read-only lesson pages.' },
  { method: 'POST', path: '/lesson/api/module', description: 'Create or update module sequencing, pacing, and calendar sync.' },
];
---
<Layout>
  <a
    class="sr-only focus:not-sr-only focus:absolute focus:left-4 focus:top-4 focus:rounded-md focus:bg-white focus:px-4 focus:py-2 focus:text-sm focus:font-semibold focus:text-slate-900 focus:outline-none focus:ring-2 focus:ring-indigo-500"
    href="#lesson-dashboard"
  >
    Skip to content
  </a>
  <main
    id="lesson-dashboard"
    class="bg-slate-50 min-h-screen"
    x-data="() => ({ lesson: $store['lesson-builder'] ?? {} })"
    x-init="lesson.initDashboard()"
  >
    <section class="relative overflow-hidden py-16 sm:py-20">
      <div class="absolute inset-0 bg-gradient-to-br from-indigo-100 via-white to-transparent"></div>
      <div class="relative mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="grid gap-12 lg:grid-cols-[1.05fr_0.95fr] lg:items-center">
          <div class="space-y-6 text-center lg:text-left">
            <span class="inline-flex items-center gap-2 rounded-full bg-indigo-100 px-4 py-1.5 text-sm font-semibold text-indigo-700">
              <i class="fas fa-chalkboard-user text-xs"></i>
              Curriculum workspace spotlight
            </span>
            <h1 class="text-4xl font-bold tracking-tight text-slate-900 sm:text-5xl">
              Lesson Builder &amp; Module Studio
            </h1>
            <p class="text-base text-slate-600 sm:text-lg">
              Design, generate, organise, and publish rich lesson plans that sync seamlessly with Quiz Institute. Craft objectives,
              blocks, resources, and assessments in one collaborative workspace.
            </p>
            <div class="flex flex-wrap justify-center gap-3 lg:justify-start">
              <Button
                type="button"
                class="shadow-sm"
                @click.prevent="lesson.createLesson('blank')"
              >
                <i class="fas fa-plus text-xs"></i>
                New lesson
              </Button>
              <Button
                type="button"
                variant="outline"
                @click.prevent="lesson.openLessonEditor()"
              >
                <i class="fas fa-pen-to-square text-xs"></i>
                Open editor
              </Button>
              <Button
                type="button"
                variant="ghost"
                @click.prevent="lesson.openTemplates()"
              >
                <i class="fas fa-layer-group text-xs"></i>
                Browse templates
              </Button>
            </div>
            <div class="flex flex-wrap items-center justify-center gap-3 text-xs text-slate-600 lg:justify-start">
              <span class="inline-flex items-center gap-2 rounded-full bg-white px-4 py-2 font-semibold text-slate-700 shadow-sm">
                <i class="fas fa-circle-user text-[11px] text-indigo-500"></i>
                <span>
                  <span class="capitalize" x-text="lesson.state.plan"></span>
                  plan
                </span>
              </span>
              <span class="inline-flex items-center gap-2 rounded-full bg-white px-4 py-2 font-semibold text-slate-700 shadow-sm">
                <i class="fas fa-robot text-[11px] text-emerald-500"></i>
                <span>
                  <span x-text="lesson.state.aiUsage.used"></span>
                  /
                  <span x-text="lesson.state.aiUsage.unlimited ? '∞' : lesson.state.aiUsage.limit"></span>
                  AI runs today
                </span>
              </span>
              <span class="inline-flex items-center gap-2 rounded-full bg-white px-4 py-2 font-semibold text-slate-700 shadow-sm">
                <i class="fas fa-clock-rotate-left text-[11px] text-sky-500"></i>
                <span>
                  <span x-text="lesson.state.metrics.totalMinutes"></span>
                  planned minutes
                </span>
              </span>
            </div>
          </div>
          <div class="relative">
            <div class="absolute inset-0 translate-x-6 translate-y-6 rounded-3xl bg-indigo-200 opacity-40 blur-xl"></div>
            <div class="relative space-y-6 rounded-3xl border border-slate-200 bg-white p-6 shadow-xl">
              <header class="flex items-center justify-between">
                <div>
                  <p class="text-sm font-semibold text-slate-900">Workspace snapshot</p>
                  <p class="text-xs text-slate-500">Track lessons, modules, exports, and AI activity at a glance.</p>
                </div>
                <span class="inline-flex items-center gap-2 rounded-full bg-emerald-100 px-3 py-1 text-xs font-semibold text-emerald-700">
                  <i class="fas fa-circle-check text-[10px]"></i>
                  Synced
                </span>
              </header>
              <dl class="grid gap-4 sm:grid-cols-2">
                <div class="rounded-2xl border border-slate-100 bg-slate-50 p-4">
                  <dt class="text-xs font-medium uppercase tracking-wide text-slate-500">Lessons</dt>
                  <dd class="mt-2 flex items-baseline gap-2 text-2xl font-semibold text-slate-900">
                    <span x-text="lesson.state.metrics.totalLessons"></span>
                    <span class="text-xs font-medium text-slate-500">total</span>
                  </dd>
                </div>
                <div class="rounded-2xl border border-slate-100 bg-slate-50 p-4">
                  <dt class="text-xs font-medium uppercase tracking-wide text-slate-500">Modules</dt>
                  <dd class="mt-2 flex items-baseline gap-2 text-2xl font-semibold text-slate-900">
                    <span x-text="lesson.state.metrics.totalModules"></span>
                    <span class="text-xs font-medium text-slate-500">active</span>
                  </dd>
                </div>
                <div class="rounded-2xl border border-indigo-100 bg-indigo-50/60 p-4 sm:col-span-2">
                  <dt class="text-xs font-medium uppercase tracking-wide text-indigo-700">AI tokens spent</dt>
                  <dd class="mt-2 flex items-center gap-3">
                    <span class="text-2xl font-semibold text-indigo-900" x-text="lesson.state.metrics.aiTokens.toLocaleString()"></span>
                    <span class="text-sm text-indigo-700">this workspace</span>
                  </dd>
                </div>
              </dl>
              <div class="rounded-2xl border border-slate-100 bg-white/70 p-4">
                <h3 class="text-sm font-semibold text-slate-900">Upcoming actions</h3>
                <ul class="mt-3 space-y-3 text-xs text-slate-600">
                  <template x-for="event in lesson.state.timeline.slice(0,3)" :key="event.id">
                    <li class="flex items-start gap-3">
                      <span class="mt-0.5 inline-flex h-6 w-6 items-center justify-center rounded-full text-[11px] font-semibold"
                        :class="{
                          'bg-emerald-100 text-emerald-700': event.status === 'completed',
                          'bg-amber-100 text-amber-700': event.status === 'attention',
                          'bg-sky-100 text-sky-700': event.status === 'on-track',
                        }"
                      >
                        <i class="fas fa-flag"></i>
                      </span>
                      <div>
                        <p class="font-medium text-slate-900" x-text="event.title"></p>
                        <p>
                          <span class="font-medium" x-text="lesson.formatDate(event.targetDate)"></span>
                          ·
                          <span x-text="event.notes"></span>
                        </p>
                      </div>
                    </li>
                  </template>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="pb-20">
      <div class="mx-auto max-w-6xl space-y-10 px-4 sm:px-6 lg:px-8">
        <div class="rounded-3xl border border-slate-200 bg-white p-4 shadow-sm sm:p-6">
          <nav class="flex items-center gap-2 rounded-2xl bg-slate-50 p-1 text-sm font-semibold text-slate-600">
            <button
              type="button"
              class="flex-1 rounded-xl px-4 py-2 transition"
              :class="lesson.state.tab === 'lessons' ? 'bg-white text-slate-900 shadow-sm' : ''"
              @click.prevent="lesson.switchTab('lessons')"
            >
              Lessons
            </button>
            <button
              type="button"
              class="flex-1 rounded-xl px-4 py-2 transition"
              :class="lesson.state.tab === 'modules' ? 'bg-white text-slate-900 shadow-sm' : ''"
              @click.prevent="lesson.switchTab('modules')"
            >
              Modules
            </button>
          </nav>

          <div class="mt-8 grid gap-8 lg:grid-cols-[minmax(0,1fr)_320px]">
            <div x-show="lesson.state.tab === 'lessons'" x-transition>
              <header class="flex flex-wrap items-center justify-between gap-4">
                <div class="space-y-1">
                  <h2 class="text-2xl font-semibold text-slate-900">Your lessons</h2>
                  <p class="text-sm text-slate-600">Filter drafts, schedule lessons, and publish when you are ready.</p>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Lesson status</span>
                    <i class="fas fa-signal text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.filters.status"
                      @change="lesson.setFilter('status', $event.target.value)"
                    >
                      <option value="all">All statuses</option>
                      <option value="draft">Draft</option>
                      <option value="scheduled">Scheduled</option>
                      <option value="published">Published</option>
                      <option value="archived">Archived</option>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Subject filter</span>
                    <i class="fas fa-book text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.filters.subject"
                      @change="lesson.setFilter('subject', $event.target.value)"
                    >
                      <option value="all">All subjects</option>
                      <template x-for="subject in lesson.subjects" :key="subject">
                        <option :value="subject" x-text="subject"></option>
                      </template>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Grade band</span>
                    <i class="fas fa-people-roof text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.filters.gradeBand"
                      @change="lesson.setFilter('gradeBand', $event.target.value)"
                    >
                      <option value="all">All grades</option>
                      <template x-for="grade in lesson.gradeBands" :key="grade">
                        <option :value="grade" x-text="grade"></option>
                      </template>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Sort lessons</span>
                    <i class="fas fa-sort text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.filters.sort"
                      @change="lesson.setFilter('sort', $event.target.value)"
                    >
                      <option value="recent">Recent first</option>
                      <option value="duration-asc">Shortest</option>
                      <option value="duration-desc">Longest</option>
                      <option value="title">Alphabetical</option>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Search lessons</span>
                    <i class="fas fa-search text-xs"></i>
                    <input
                      type="search"
                      placeholder="Search"
                      class="w-32 bg-transparent text-sm focus:outline-none"
                      x-model="lesson.state.search"
                      @input.debounce.300ms="lesson.setSearch($event.target.value)"
                    />
                  </label>
                </div>
              </header>

              <div class="mt-6 space-y-6">
                <template x-if="lesson.state.loading">
                  <div class="grid gap-4 sm:grid-cols-2">
                    <template x-for="placeholder in 4" :key="`lesson-skeleton-${placeholder}`">
                      <article class="flex h-full flex-col justify-between rounded-2xl border border-slate-200 bg-white p-6">
                        <div class="space-y-3">
                          <div class="h-6 w-40 rounded bg-slate-200"></div>
                          <div class="h-4 w-32 rounded bg-slate-100"></div>
                          <div class="h-20 rounded bg-slate-50"></div>
                        </div>
                        <div class="mt-6 flex items-center justify-between">
                          <div class="h-6 w-24 rounded-full bg-slate-100"></div>
                          <div class="h-10 w-28 rounded-full bg-slate-200"></div>
                        </div>
                      </article>
                    </template>
                  </div>
                </template>

                <template x-if="!lesson.state.loading && lesson.state.filteredLessons.length === 0">
                  <div class="rounded-2xl border border-dashed border-slate-200 bg-white p-12 text-center">
                    <i class="fas fa-lightbulb text-3xl text-slate-300"></i>
                    <h3 class="mt-4 text-lg font-semibold text-slate-900">No lessons yet</h3>
                    <p class="mt-2 text-sm text-slate-600">
                      Start from a template or blank canvas. AI can draft objectives, activities, and quizzes in seconds.
                    </p>
                    <Button
                      type="button"
                      class="mt-4"
                      @click.prevent="lesson.createLesson('stem-lab')"
                    >
                      <i class="fas fa-wand-magic-sparkles text-xs"></i>
                      Generate lesson with AI
                    </Button>
                  </div>
                </template>

                <div class="grid gap-4 sm:grid-cols-2">
                  <template x-for="item in lesson.state.filteredLessons" :key="item.id">
                    <article
                      class="flex h-full flex-col justify-between rounded-2xl border border-slate-200 bg-white p-6 transition hover:-translate-y-1 hover:border-indigo-200 hover:shadow-md"
                      :class="lesson.state.selectedLessonId === item.id ? 'ring-2 ring-indigo-500 ring-offset-2' : ''"
                      @click="lesson.selectLesson(item.id)"
                    >
                      <div class="space-y-4">
                        <div class="flex items-start justify-between gap-3">
                          <div>
                            <h3 class="text-xl font-semibold text-slate-900" x-text="item.title"></h3>
                            <p class="text-xs font-medium uppercase tracking-wide text-slate-500" x-text="`${item.subject} · ${item.gradeBand}`"></p>
                          </div>
                          <span
                            class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-semibold"
                            :class="{
                              'bg-emerald-100 text-emerald-700': item.status === 'published',
                              'bg-sky-100 text-sky-700': item.status === 'scheduled',
                              'bg-amber-100 text-amber-700': item.status === 'draft',
                              'bg-slate-200 text-slate-700': item.status === 'archived',
                            }"
                          >
                            <i class="fas fa-circle text-[10px]"></i>
                            <span class="capitalize" x-text="item.status"></span>
                          </span>
                        </div>
                        <p class="text-sm text-slate-600" x-text="item.analytics.notes"></p>
                        <dl class="grid gap-3 text-xs text-slate-600 sm:grid-cols-2">
                          <div class="rounded-xl bg-slate-50 px-3 py-2">
                            <dt class="font-semibold text-slate-500">Duration</dt>
                            <dd class="mt-1 font-semibold text-slate-900" x-text="lesson.formatMinutes(item.duration)"></dd>
                          </div>
                          <div class="rounded-xl bg-slate-50 px-3 py-2">
                            <dt class="font-semibold text-slate-500">Last updated</dt>
                            <dd class="mt-1 font-semibold text-slate-900" x-text="lesson.formatDate(item.updatedAt)"></dd>
                          </div>
                          <div class="rounded-xl bg-slate-50 px-3 py-2">
                            <dt class="font-semibold text-slate-500">AI runs</dt>
                            <dd class="mt-1 font-semibold text-slate-900" x-text="item.analytics.aiRuns"></dd>
                          </div>
                          <div class="rounded-xl bg-slate-50 px-3 py-2">
                            <dt class="font-semibold text-slate-500">Quiz</dt>
                            <dd class="mt-1 font-semibold text-slate-900">
                              <span x-text="item.quiz.status === 'not-linked' ? 'Not linked' : item.quiz.title ?? 'Draft quiz'"></span>
                            </dd>
                          </div>
                        </dl>
                      </div>
                      <div class="mt-6 flex flex-wrap items-center justify-between gap-3">
                        <div class="flex items-center gap-2 text-xs text-slate-500">
                          <i class="fas fa-calendar-day text-[11px]"></i>
                          <span x-text="item.schedule.targetDate ? lesson.formatDate(item.schedule.targetDate) : 'No date set'"></span>
                        </div>
                        <div class="flex flex-wrap gap-2">
                          <button
                            type="button"
                            class="rounded-full border border-slate-200 px-3 py-1 text-xs font-semibold text-slate-700 transition hover:border-indigo-300 hover:text-indigo-600"
                            @click.stop.prevent="lesson.openLessonEditor(item.id)"
                          >
                            <i class="fas fa-arrow-up-right-from-square text-[10px]"></i>
                            Open
                          </button>
                          <button
                            type="button"
                            class="rounded-full border border-slate-200 px-3 py-1 text-xs font-semibold text-slate-700 transition hover:border-emerald-300 hover:text-emerald-600"
                            @click.stop.prevent="lesson.publishLesson(item.id)"
                          >
                            <i class="fas fa-rocket text-[10px]"></i>
                            Publish
                          </button>
                          <button
                            type="button"
                            class="rounded-full border border-slate-200 px-3 py-1 text-xs font-semibold text-slate-700 transition hover:border-slate-300 hover:text-slate-900"
                            @click.stop.prevent="lesson.duplicateLesson(item.id)"
                          >
                            <i class="fas fa-copy text-[10px]"></i>
                            Duplicate
                          </button>
                        </div>
                      </div>
                    </article>
                  </template>
                </div>
              </div>
            </div>

            <div x-show="lesson.state.tab === 'lessons'" x-transition class="space-y-6">
              <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
                <template x-if="lesson.selectedLesson">
                  <div class="space-y-5">
                    <header class="space-y-1">
                      <span class="inline-flex items-center gap-2 rounded-full bg-indigo-100 px-3 py-1 text-xs font-semibold text-indigo-700">
                        <i class="fas fa-compass text-[10px]"></i>
                        Selected lesson
                      </span>
                      <h3 class="text-lg font-semibold text-slate-900" x-text="lesson.selectedLesson.title"></h3>
                      <p class="text-xs text-slate-500">
                        Updated
                        <span x-text="lesson.formatDate(lesson.selectedLesson.updatedAt)"></span>
                        · Last AI run
                        <span x-text="lesson.formatTimeAgo(lesson.selectedLesson.aiUsage.lastRunAt)"></span>
                      </p>
                    </header>
                    <div class="space-y-3">
                      <h4 class="text-sm font-semibold text-slate-900">Objectives</h4>
                      <ul class="space-y-2 text-sm text-slate-600">
                        <template x-for="objective in lesson.selectedLesson.objectives" :key="objective.id">
                          <li class="flex items-start gap-2 rounded-xl bg-slate-50 px-3 py-2">
                            <i class="fas fa-bullseye text-xs text-indigo-500"></i>
                            <div>
                              <p class="font-medium text-slate-900" x-text="objective.statement"></p>
                              <p class="text-xs text-slate-500" x-text="`Success: ${objective.successCriteria}`"></p>
                            </div>
                          </li>
                        </template>
                      </ul>
                    </div>
                    <div class="space-y-3">
                      <h4 class="text-sm font-semibold text-slate-900">Sections &amp; timing</h4>
                      <ul class="space-y-2 text-sm text-slate-600">
                        <template x-for="block in lesson.selectedLesson.blocks" :key="block.id">
                          <li class="flex items-start gap-3 rounded-xl border border-slate-100 px-3 py-2">
                            <span class="mt-0.5 inline-flex h-6 w-6 items-center justify-center rounded-full bg-slate-100 text-[11px] font-semibold text-slate-600">
                              <span class="uppercase" x-text="block.type[0]"></span>
                            </span>
                            <div>
                              <p class="font-medium text-slate-900" x-text="block.title"></p>
                              <p class="text-xs text-slate-500">
                                <span x-text="lesson.formatMinutes(block.minutes)"></span>
                                ·
                                <span x-text="block.instructions"></span>
                              </p>
                            </div>
                          </li>
                        </template>
                      </ul>
                    </div>
                    <div class="space-y-3">
                      <h4 class="text-sm font-semibold text-slate-900">Resources</h4>
                      <ul class="space-y-2 text-sm text-slate-600">
                        <template x-for="resource in lesson.selectedLesson.resources" :key="resource.id">
                          <li class="flex items-center justify-between gap-3 rounded-xl bg-slate-50 px-3 py-2">
                            <div class="flex items-center gap-2">
                              <i class="fas fa-paperclip text-xs text-indigo-500"></i>
                              <span x-text="resource.label"></span>
                            </div>
                            <span class="text-xs text-slate-500" x-text="resource.plan === 'pro' ? 'Pro' : 'Free'"></span>
                          </li>
                        </template>
                      </ul>
                    </div>
                    <div class="space-y-3">
                      <h4 class="text-sm font-semibold text-slate-900">Accommodations</h4>
                      <ul class="space-y-2 text-sm text-slate-600">
                        <template x-for="accommodation in lesson.selectedLesson.accommodations" :key="accommodation.id">
                          <li class="flex items-start gap-2 rounded-xl border border-slate-100 px-3 py-2">
                            <i class="fas fa-universal-access mt-0.5 text-xs text-indigo-500"></i>
                            <div>
                              <p class="font-medium text-slate-900" x-text="accommodation.audience"></p>
                              <p class="text-xs text-slate-500" x-text="accommodation.description"></p>
                            </div>
                          </li>
                        </template>
                      </ul>
                    </div>
                    <div class="space-y-3">
                      <h4 class="text-sm font-semibold text-slate-900">AI quick actions</h4>
                      <div class="grid gap-3">
                        <template x-for="playbook in lesson.state.aiPlaybooks.slice(0,3)" :key="`sidebar-ai-${playbook.key}`">
                          <button
                            type="button"
                            class="flex items-center justify-between gap-3 rounded-2xl border border-slate-100 bg-slate-50 px-4 py-3 text-left text-sm text-slate-600 transition hover:border-indigo-200 hover:bg-white hover:text-slate-900"
                            @click.prevent="lesson.runAi(playbook.key)"
                          >
                            <span class="flex items-center gap-3">
                              <span class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white text-indigo-500 shadow-sm">
                                <i class="text-sm" :class="playbook.icon"></i>
                              </span>
                              <span>
                                <span class="block font-semibold text-slate-900" x-text="playbook.title"></span>
                                <span class="block text-xs" x-text="playbook.description"></span>
                              </span>
                            </span>
                            <i class="fas fa-arrow-right text-xs"></i>
                          </button>
                        </template>
                      </div>
                    </div>
                  </div>
                </template>
              </div>

              <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
                <h3 class="text-sm font-semibold text-slate-900">Insights &amp; alerts</h3>
                <ul class="mt-3 space-y-3 text-xs text-slate-600">
                  <template x-for="insight in lesson.state.insights" :key="insight.id">
                    <li class="flex items-start gap-3 rounded-xl bg-slate-50 px-3 py-2">
                      <span class="mt-0.5 inline-flex h-8 w-8 items-center justify-center rounded-full"
                        :class="{
                          'bg-emerald-100 text-emerald-700': insight.type === 'success',
                          'bg-amber-100 text-amber-700': insight.type === 'warning',
                          'bg-slate-200 text-slate-700': insight.type === 'info',
                        }"
                      >
                        <i :class="insight.icon"></i>
                      </span>
                      <div>
                        <p class="font-medium text-slate-900" x-text="insight.message"></p>
                        <p class="text-[11px] uppercase tracking-wide text-slate-500" x-text="insight.timestamp"></p>
                      </div>
                    </li>
                  </template>
                </ul>
              </div>
            </div>

            <div x-show="lesson.state.tab === 'modules'" x-transition>
              <header class="flex flex-wrap items-center justify-between gap-4">
                <div class="space-y-1">
                  <h2 class="text-2xl font-semibold text-slate-900">Module sequencing</h2>
                  <p class="text-sm text-slate-600">Align lessons into multi-session journeys with pacing and prerequisites.</p>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Module status</span>
                    <i class="fas fa-traffic-light text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.moduleFilters.status"
                      @change="lesson.setModuleFilter('status', $event.target.value)"
                    >
                      <option value="all">All statuses</option>
                      <option value="draft">Draft</option>
                      <option value="published">Published</option>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Module subject</span>
                    <i class="fas fa-diagram-project text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.moduleFilters.subject"
                      @change="lesson.setModuleFilter('subject', $event.target.value)"
                    >
                      <option value="all">All subjects</option>
                      <template x-for="subject in lesson.moduleSubjects" :key="`module-subject-${subject}`">
                        <option :value="subject" x-text="subject"></option>
                      </template>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Sort modules</span>
                    <i class="fas fa-sort-numeric-down text-xs"></i>
                    <select
                      class="appearance-none bg-transparent text-sm font-medium text-slate-700 focus:outline-none"
                      x-model="lesson.state.moduleFilters.sort"
                      @change="lesson.setModuleFilter('sort', $event.target.value)"
                    >
                      <option value="recent">Recent first</option>
                      <option value="lessons-desc">Most lessons</option>
                      <option value="lessons-asc">Fewest lessons</option>
                    </select>
                  </label>
                  <label class="flex items-center gap-2 rounded-full border border-slate-200 bg-white px-3 py-2 text-sm text-slate-600 shadow-sm">
                    <span class="sr-only">Search modules</span>
                    <i class="fas fa-search text-xs"></i>
                    <input
                      type="search"
                      placeholder="Search"
                      class="w-32 bg-transparent text-sm focus:outline-none"
                      x-model="lesson.state.moduleSearch"
                      @input.debounce.300ms="lesson.setModuleSearch($event.target.value)"
                    />
                  </label>
                </div>
              </header>

              <div class="mt-6 space-y-6">
                <div class="grid gap-4">
                  <template x-for="module in lesson.state.filteredModules" :key="module.id">
                    <article
                      class="flex flex-col gap-4 rounded-2xl border border-slate-200 bg-white p-6 transition hover:-translate-y-1 hover:border-indigo-200 hover:shadow-md"
                      :class="lesson.state.selectedModuleId === module.id ? 'ring-2 ring-indigo-500 ring-offset-2' : ''"
                      @click="lesson.selectModule(module.id)"
                    >
                      <header class="flex flex-wrap items-start justify-between gap-3">
                        <div>
                          <h3 class="text-xl font-semibold text-slate-900" x-text="module.title"></h3>
                          <p class="text-xs font-medium uppercase tracking-wide text-slate-500" x-text="`${module.subject} · ${module.gradeBand}`"></p>
                        </div>
                        <span
                          class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-semibold"
                          :class="module.status === 'published' ? 'bg-emerald-100 text-emerald-700' : 'bg-amber-100 text-amber-700'"
                        >
                          <i class="fas fa-circle text-[10px]"></i>
                          <span class="capitalize" x-text="module.status"></span>
                        </span>
                      </header>
                      <p class="text-sm text-slate-600" x-text="module.description"></p>
                      <dl class="grid gap-3 text-xs text-slate-600 sm:grid-cols-3">
                        <div class="rounded-xl bg-slate-50 px-3 py-2">
                          <dt class="font-semibold text-slate-500">Lessons</dt>
                          <dd class="mt-1 font-semibold text-slate-900" x-text="module.lessonIds.length"></dd>
                        </div>
                        <div class="rounded-xl bg-slate-50 px-3 py-2">
                          <dt class="font-semibold text-slate-500">Total minutes</dt>
                          <dd class="mt-1 font-semibold text-slate-900" x-text="lesson.formatMinutes(module.pacing.totalMinutes)"></dd>
                        </div>
                        <div class="rounded-xl bg-slate-50 px-3 py-2">
                          <dt class="font-semibold text-slate-500">Exports</dt>
                          <dd class="mt-1 font-semibold text-slate-900" x-text="module.analytics.exports"></dd>
                        </div>
                      </dl>
                      <div class="flex flex-wrap items-center justify-between gap-3 text-xs text-slate-600">
                        <div class="flex items-center gap-2">
                          <i class="fas fa-calendar-week text-[11px]"></i>
                          <span x-text="`${module.pacing.weeks} week plan · ${module.pacing.hoursPerWeek} hr/week`"></span>
                        </div>
                        <div class="flex flex-wrap gap-2">
                          <button
                            type="button"
                            class="rounded-full border border-slate-200 px-3 py-1 font-semibold text-slate-700 transition hover:border-indigo-300 hover:text-indigo-600"
                            @click.stop.prevent="lesson.openModuleBuilder(module.id)"
                          >
                            <i class="fas fa-diagram-project text-[10px]"></i>
                            Open builder
                          </button>
                          <button
                            type="button"
                            class="rounded-full border border-slate-200 px-3 py-1 font-semibold text-slate-700 transition hover:border-emerald-300 hover:text-emerald-600"
                            @click.stop.prevent="lesson.openLessonEditor(module.sequence[0]?.lessonId)"
                          >
                            <i class="fas fa-gauge-high text-[10px]"></i>
                            Review first lesson
                          </button>
                        </div>
                      </div>
                    </article>
                  </template>
                </div>
              </div>
            </div>

            <div x-show="lesson.state.tab === 'modules'" x-transition class="space-y-6">
              <template x-if="lesson.selectedModule">
                <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm space-y-4">
                  <header class="space-y-1">
                    <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-700">
                      <i class="fas fa-route text-[10px]"></i>
                      Module overview
                    </span>
                    <h3 class="text-lg font-semibold text-slate-900" x-text="lesson.selectedModule.title"></h3>
                    <p class="text-xs text-slate-500">
                      Lead: <span x-text="lesson.selectedModule.leadInstructor"></span>
                      · Updated <span x-text="lesson.formatDate(lesson.selectedModule.updatedAt)"></span>
                    </p>
                  </header>
                  <div class="space-y-2">
                    <h4 class="text-sm font-semibold text-slate-900">Outcomes</h4>
                    <ul class="space-y-2 text-sm text-slate-600">
                      <template x-for="outcome in lesson.selectedModule.outcomes" :key="`outcome-${outcome}`">
                        <li class="flex items-start gap-2">
                          <i class="fas fa-check text-xs text-emerald-500"></i>
                          <span x-text="outcome"></span>
                        </li>
                      </template>
                    </ul>
                  </div>
                  <div class="space-y-2">
                    <h4 class="text-sm font-semibold text-slate-900">Sequence</h4>
                    <ol class="space-y-2 text-sm text-slate-600">
                      <template x-for="step in lesson.selectedModule.sequence" :key="step.lessonId">
                        <li class="flex items-start gap-3 rounded-xl bg-slate-50 px-3 py-2">
                          <span class="mt-0.5 inline-flex h-7 w-7 items-center justify-center rounded-full bg-white text-xs font-semibold text-indigo-600 shadow" x-text="step.day"></span>
                          <div>
                            <p class="font-semibold text-slate-900" x-text="step.title"></p>
                            <p class="text-xs text-slate-500">
                              <span x-text="lesson.formatMinutes(step.duration)"></span>
                              ·
                              <span x-text="step.focus"></span>
                            </p>
                          </div>
                        </li>
                      </template>
                    </ol>
                  </div>
                  <div class="space-y-2">
                    <h4 class="text-sm font-semibold text-slate-900">Prerequisites</h4>
                    <ul class="list-disc space-y-1 pl-5 text-sm text-slate-600">
                      <template x-for="requirement in lesson.selectedModule.prerequisites" :key="`prereq-${requirement}`">
                        <li x-text="requirement"></li>
                      </template>
                    </ul>
                  </div>
                  <div class="flex flex-wrap items-center gap-3 text-xs text-slate-600">
                    <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-700">
                      <i class="fas fa-share-nodes text-[10px]"></i>
                      <span x-text="lesson.selectedModule.analytics.shareUrl ?? 'Private draft'"></span>
                    </span>
                    <span class="inline-flex items-center gap-2 rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-700">
                      <i class="fas fa-calendar-plus text-[10px]"></i>
                      <span x-text="lesson.selectedModule.pacing.calendarExported ? 'Calendar synced' : 'Calendar pending'"></span>
                    </span>
                  </div>
                </div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="bg-slate-900 py-16">
      <div class="mx-auto max-w-6xl space-y-10 px-4 sm:px-6 lg:px-8">
        <header class="space-y-3 text-center">
          <span class="inline-flex items-center gap-2 rounded-full bg-white/10 px-4 py-1.5 text-xs font-semibold uppercase tracking-wide text-indigo-200">
            <i class="fas fa-wand-magic-sparkles text-[10px]"></i>
            AI workbench
          </span>
          <h2 class="text-3xl font-semibold text-white">Generate outlines, activities, resources, and quizzes in one flow</h2>
          <p class="mx-auto max-w-3xl text-sm text-slate-300">
            Every AI playbook understands your lesson context, learners, and pacing goals. Run as many assists as you need on Pro,
            or mix-and-match five runs per day on the free plan.
          </p>
        </header>
        <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
          <template x-for="playbook in lesson.state.aiPlaybooks" :key="`ai-card-${playbook.key}`">
            <div class="flex flex-col gap-4 rounded-3xl border border-slate-800 bg-slate-800/60 p-6 text-slate-200 transition hover:border-indigo-500 hover:bg-slate-800/90">
              <div class="flex items-center gap-3">
                <span class="inline-flex h-11 w-11 items-center justify-center rounded-full bg-indigo-500/20 text-indigo-200">
                  <i class="text-sm" :class="playbook.icon"></i>
                </span>
                <div>
                  <p class="text-lg font-semibold text-white" x-text="playbook.title"></p>
                  <p class="text-xs text-slate-400" x-text="playbook.plan === 'pro' ? 'Pro feature' : 'Free included'"></p>
                </div>
              </div>
              <p class="text-sm" x-text="playbook.description"></p>
              <div class="mt-auto flex items-center justify-between text-xs text-slate-400">
                <button
                  type="button"
                  class="inline-flex items-center gap-2 rounded-full bg-indigo-500/10 px-3 py-2 font-semibold text-indigo-200 transition hover:bg-indigo-500/20"
                  @click.prevent="lesson.runAi(playbook.key)"
                >
                  <i class="fas fa-play text-[10px]"></i>
                  Run playbook
                </button>
                <span :class="playbook.plan === 'pro' ? 'text-amber-300' : 'text-emerald-200'">
                  <i class="fas fa-sparkles text-[10px]"></i>
                  AI assist
                </span>
              </div>
            </div>
          </template>
        </div>
      </div>
    </section>

    <section class="py-16">
      <div class="mx-auto max-w-6xl space-y-12 px-4 sm:px-6 lg:px-8">
        <div class="grid gap-8 lg:grid-cols-[minmax(0,1fr)_320px]">
          <div class="space-y-6">
            <header class="space-y-2">
              <h2 class="text-3xl font-semibold text-slate-900">Publish, export, and localise with confidence</h2>
              <p class="text-sm text-slate-600">Export-ready lesson plans, pacing guides, and accessible learner handouts.</p>
            </header>
            <div class="grid gap-4 sm:grid-cols-2">
              {exportHighlights.map((item) => (
                <article class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
                  <div class="flex items-start gap-3">
                    <span class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-indigo-50 text-indigo-500">
                      <i class={item.icon}></i>
                    </span>
                    <div class="space-y-1">
                      <h3 class="text-base font-semibold text-slate-900">{item.title}</h3>
                      <p class="text-sm text-slate-600">{item.description}</p>
                    </div>
                  </div>
                </article>
              ))}
            </div>
          </div>
          <aside class="space-y-5 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
            <h3 class="text-sm font-semibold text-slate-900">Integrations &amp; workflows</h3>
            <ul class="space-y-4 text-sm text-slate-600">
              {integrationHighlights.map((item) => (
                <li class="flex items-start gap-3">
                  <span class="mt-0.5 inline-flex h-8 w-8 items-center justify-center rounded-full bg-indigo-50 text-indigo-500">
                    <i class={item.icon}></i>
                  </span>
                  <div>
                    <p class="font-semibold text-slate-900">{item.title}</p>
                    <p class="text-xs text-slate-500">{item.description}</p>
                  </div>
                </li>
              ))}
            </ul>
          </aside>
        </div>

        <div class="overflow-hidden rounded-3xl border border-slate-200 bg-white shadow-sm">
          <table class="min-w-full divide-y divide-slate-100 text-left text-sm">
            <thead class="bg-slate-50 text-xs font-semibold uppercase tracking-wide text-slate-500">
              <tr>
                <th class="px-4 py-3">Method</th>
                <th class="px-4 py-3">Endpoint</th>
                <th class="px-4 py-3">Description</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-slate-100 text-slate-700">
              {apiRoutes.map((route) => (
                <tr>
                  <td class="px-4 py-3 font-semibold text-indigo-600">{route.method}</td>
                  <td class="px-4 py-3 font-mono text-xs">{route.path}</td>
                  <td class="px-4 py-3 text-sm text-slate-600">{route.description}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </section>

    <template x-if="lesson.state.showPlanModal">
      <Modal
        size="lg"
        class="items-start"
        x-on:modal-close.window="lesson.closePlanUpsell()"
      >
        <div class="space-y-6">
          <header class="space-y-2">
            <h2 class="text-2xl font-semibold text-slate-900">Upgrade to Lesson Builder Pro</h2>
            <p class="text-sm text-slate-600">Unlock unlimited lessons and modules, advanced AI playbooks, and watermark-free exports.</p>
          </header>
          <div class="rounded-3xl border border-slate-100 bg-slate-50 p-4">
            <div class="grid gap-4 text-sm text-slate-600 sm:grid-cols-3">
              <div class="rounded-2xl bg-white p-4 shadow-sm">
                <p class="text-xs font-semibold uppercase tracking-wide text-slate-500">Free</p>
                <p class="mt-2 text-2xl font-semibold text-slate-900">$0</p>
                <p class="mt-1 text-xs text-slate-500">Includes 10 lessons, 2 modules, AI outline &amp; objectives.</p>
              </div>
              <div class="rounded-2xl bg-indigo-600 p-4 text-white shadow-md sm:col-span-2">
                <p class="text-xs font-semibold uppercase tracking-wide text-indigo-100">Pro</p>
                <p class="mt-2 text-2xl font-semibold">$24/mo</p>
                <p class="mt-1 text-xs text-indigo-100">Unlimited AI runs, calendar sync, localisation, and watermark-free exports.</p>
              </div>
            </div>
          </div>
          <div class="overflow-hidden rounded-3xl border border-slate-100">
            <table class="min-w-full divide-y divide-slate-100 text-sm">
              <thead class="bg-slate-50 text-left text-xs font-semibold uppercase tracking-wide text-slate-500">
                <tr>
                  <th class="px-4 py-3">Feature</th>
                  <th class="px-4 py-3">Free</th>
                  <th class="px-4 py-3">Pro</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-slate-100 bg-white text-slate-700">
                {planHighlights.map((row) => (
                  <tr>
                    <td class="px-4 py-3 font-semibold text-slate-900">{row.label}</td>
                    <td class="px-4 py-3">{row.free}</td>
                    <td class="px-4 py-3 text-indigo-600">{row.pro}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
        <div slot="footer" class="flex w-full flex-wrap items-center justify-end gap-3">
          <Button
            type="button"
            variant="ghost"
            @click.prevent="lesson.closePlanUpsell()"
          >
            Maybe later
          </Button>
          <Button
            type="button"
            @click.prevent="lesson.upgradeToPro()"
          >
            Upgrade to Pro
          </Button>
        </div>
      </Modal>
    </template>
  </main>
</Layout>
