---
import Layout from "../../layouts/Layout.astro";
import Button from "../../components/Button.astro";
import FeatureCard from "../../components/FeatureCard.astro";
import SectionHeading from "../../components/SectionHeading.astro";

const settingsSections = [
  {
    title: "Model defaults",
    bullets: [
      "Choose base or pro tier models per plan",
      "Set default temperature, max tokens, top-p, and stop sequences",
      "Enable deterministic seeds for reproducibility",
    ],
    icon: "fas fa-robot",
  },
  {
    title: "Tone & reading level",
    bullets: [
      "Define default tone (formal, friendly, coaching)",
      "Set reading level (A1–C2) and fallback language",
      "Allow persona overrides while keeping guardrails",
    ],
    icon: "fas fa-language",
  },
  {
    title: "Safety toggles",
    bullets: [
      "Plagiarism check threshold",
      "Age-appropriate content filters",
      "Source citation enforcement",
    ],
    icon: "fas fa-shield-halved",
  },
];

const integrationSettings = [
  {
    title: "Lesson Builder",
    description:
      "Connect EduPrompt outputs to Lesson Builder modules with default folders, publishing visibility, and pacing sync.",
    icon: "fas fa-chalkboard",
  },
  {
    title: "Quiz Institute",
    description:
      "Map rubric fields and export schema defaults for quiz JSON payloads.",
    icon: "fas fa-square-poll-vertical",
  },
  {
    title: "FlashNote & Study Planner",
    description:
      "Set default decks and revision schedules when sending flashcards or tasks downstream.",
    icon: "fas fa-link",
  },
];

const guardrailPolicies = [
  {
    title: "Plagiarism",
    details: [
      "Set similarity threshold (default 0.85)",
      "Auto-block high-risk outputs or require review",
    ],
  },
  {
    title: "Sensitive topics",
    details: [
      "Flag topics needing manual approval",
      "Default disclaimers for sensitive content",
    ],
  },
  {
    title: "Citations",
    details: [
      "Require inline or footnote citations",
      "Choose MLA or author-year formatting",
    ],
  },
];

const notificationOptions = [
  {
    title: "Run updates",
    description:
      "Receive alerts when multi-persona runs finish, auto-revise loops complete, or guardrail flags appear.",
    icon: "fas fa-bell",
  },
  {
    title: "Dataset progress",
    description:
      "Notify when coverage targets are met or batches need manual intervention.",
    icon: "fas fa-chart-line",
  },
  {
    title: "Export delivery",
    description:
      "Confirm when outputs reach Lesson Builder, Quiz Institute, FlashNote, or Study Planner.",
    icon: "fas fa-paper-plane",
  },
];
---
<Layout title="EduPrompt Settings">
  <main class="bg-slate-50">
    <section class="relative overflow-hidden py-16 sm:py-24">
      <div class="absolute inset-0 -z-10 bg-gradient-to-br from-indigo-100 via-white to-transparent"></div>
      <div class="relative mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="grid gap-12 lg:grid-cols-[1.05fr_0.95fr] lg:items-center">
          <div class="space-y-6 text-center lg:text-left">
            <span class="inline-flex items-center gap-2 rounded-full bg-indigo-100 px-4 py-1.5 text-sm font-semibold text-indigo-700">
              <i class="fas fa-gear text-xs" aria-hidden="true"></i>
              Settings
            </span>
            <h1 class="text-4xl font-bold tracking-tight text-slate-900 sm:text-5xl">
              Configure EduPrompt for your classroom
            </h1>
            <p class="text-base text-slate-600 sm:text-lg">
              Set default models, tone, guardrails, and integrations so every prompt starts with the right context.
            </p>
            <div class="flex flex-wrap items-center justify-center gap-3 lg:justify-start">
              <Button href="/eduprompt">
                <i class="fas fa-arrow-left text-xs" aria-hidden="true"></i>
                Back to EduPrompt
              </Button>
              <Button href="/eduprompt/builder" variant="outline">
                <i class="fas fa-sliders text-xs" aria-hidden="true"></i>
                Open builder
              </Button>
              <Button href="/eduprompt/history" variant="ghost">
                <i class="fas fa-clock-rotate-left text-xs" aria-hidden="true"></i>
                View history
              </Button>
            </div>
          </div>
          <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
            <h2 class="text-sm font-semibold uppercase tracking-[0.3em] text-indigo-500">Configuration areas</h2>
            <div class="mt-5 grid gap-4 sm:grid-cols-3">
              {settingsSections.map((section) => (
                <div class="rounded-2xl border border-slate-100 bg-slate-50/80 p-4 text-left">
                  <div class="flex items-center gap-2 text-indigo-600">
                    <i class={`${section.icon} text-sm`} aria-hidden="true"></i>
                    <span class="text-xs font-semibold uppercase tracking-wide text-slate-500">{section.title}</span>
                  </div>
                  <ul class="mt-3 space-y-2 text-xs text-slate-600">
                    {section.bullets.map((bullet) => (
                      <li class="flex gap-2">
                        <i class="fas fa-circle text-[0.4rem] text-indigo-400 mt-1.5"></i>
                        <span>{bullet}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="py-16">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 space-y-12">
        <SectionHeading
          align="center"
          eyebrow="GUARDRAILS"
          title="Policy controls for safe prompts"
          description="Adjust thresholds and enforcement actions to fit your institution."
        />
        <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {guardrailPolicies.map((policy) => (
            <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
              <p class="text-sm font-semibold uppercase tracking-wide text-indigo-500">{policy.title}</p>
              <ul class="mt-3 space-y-2 text-sm text-slate-600">
                {policy.details.map((detail) => (
                  <li class="flex gap-2">
                    <i class="fas fa-circle text-[0.4rem] text-indigo-400 mt-1.5"></i>
                    <span>{detail}</span>
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </div>
      </div>
    </section>

    <section class="bg-white py-16">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 space-y-12">
        <SectionHeading
          align="center"
          eyebrow="INTEGRATIONS"
          title="Connect EduPrompt to the Ansiversa suite"
          description="Control how prompts flow into companion apps."
        />
        <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {integrationSettings.map((item) => (
            <FeatureCard {...item} />
          ))}
        </div>
        <div class="rounded-3xl border border-slate-200 bg-white p-8 shadow-soft">
          <div class="grid gap-6 lg:grid-cols-[1fr_1.1fr] lg:items-center">
            <div class="space-y-3">
              <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Parameter profiles</p>
              <h3 class="text-2xl font-semibold text-slate-900">Reusable configuration bundles</h3>
              <p class="text-sm text-slate-600">
                Save presets for different scenarios — exam practice, lesson design, worksheet generation — and share them across your organisation.
              </p>
            </div>
            <div class="grid gap-3 text-xs text-slate-600">
              {[
                { name: "Exam-ready", details: "Temp 0.2 · Max 600 · Guardrails strict" },
                { name: "Creative lesson", details: "Temp 0.5 · Max 900 · Tone friendly" },
                { name: "Flashcards", details: "Temp 0.3 · Max 500 · Sources required" },
              ].map((profile) => (
                <div class="rounded-2xl border border-slate-200 bg-slate-50 p-4">
                  <p class="font-semibold text-slate-900">{profile.name}</p>
                  <p class="mt-1">{profile.details}</p>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="py-16">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 space-y-12">
        <SectionHeading
          align="center"
          eyebrow="NOTIFICATIONS"
          title="Stay in the loop"
          description="Admins and educators choose what events trigger alerts."
        />
        <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {notificationOptions.map((option) => (
            <FeatureCard {...option} />
          ))}
        </div>
        <div class="rounded-3xl border border-slate-200 bg-white p-8 shadow-soft">
          <div class="grid gap-6 lg:grid-cols-[1fr_1.1fr] lg:items-center">
            <div class="space-y-3">
              <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Team management</p>
              <h3 class="text-2xl font-semibold text-slate-900">Roles & permissions</h3>
              <p class="text-sm text-slate-600">
                Assign roles for admins, educators, and reviewers. Control who can edit templates, run datasets, clear guardrails, and export outputs.
              </p>
            </div>
            <div class="grid gap-3 text-xs text-slate-600">
              {[
                { role: "Admin", abilities: "Manage settings, guardrails, and integrations" },
                { role: "Educator", abilities: "Create prompts, run outputs, export results" },
                { role: "Reviewer", abilities: "Approve guardrail flags and manage history" },
              ].map((entry) => (
                <div class="rounded-2xl border border-indigo-100 bg-indigo-50/60 p-4">
                  <p class="font-semibold text-slate-900">{entry.role}</p>
                  <p class="mt-1">{entry.abilities}</p>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="bg-white py-16">
      <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
        <div class="rounded-3xl border border-indigo-100 bg-indigo-50/60 p-8">
          <div class="grid gap-6 lg:grid-cols-[1fr_1fr] lg:items-center">
            <div class="space-y-4">
              <p class="text-xs font-semibold uppercase tracking-[0.35em] text-indigo-500">Next steps</p>
              <h3 class="text-2xl font-semibold text-slate-900">Keep prompts aligned</h3>
              <p class="text-sm text-slate-600">
                After dialling in settings, build prompts and datasets knowing every run will honour your guardrails and integrations.
              </p>
            </div>
            <div class="flex flex-wrap gap-3">
              <Button href="/eduprompt/builder" class="shadow-sm">
                <i class="fas fa-pen-to-square text-xs" aria-hidden="true"></i>
                Open builder
              </Button>
              <Button href="/eduprompt/datasets" variant="outline">
                <i class="fas fa-database text-xs" aria-hidden="true"></i>
                Manage datasets
              </Button>
              <Button href="/eduprompt/history" variant="ghost">
                <i class="fas fa-clock-rotate-left text-xs" aria-hidden="true"></i>
                View history
              </Button>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>
