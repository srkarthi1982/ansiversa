---
import Layout from '../../layouts/Layout.astro';
import Button from '../../components/Button.astro';
---
<Layout>
  <main
    class="min-h-screen bg-slate-50"
    x-data="() => ({ invoice: $store.invoice })"
    x-init="invoice.initDashboard()"
  >
    <section class="py-16 sm:py-20">
      <div class="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-3xl font-bold tracking-tight text-slate-900 sm:text-4xl">Invoice templates</h1>
          <p class="mt-3 text-base text-slate-600">
            Pick a layout that matches your brand. Templates control accent colors, typography, and table styling.
          </p>
        </div>
        <div class="mt-10 grid gap-6 sm:grid-cols-2">
          <template x-for="template in $store.invoice.templates" :key="template.key">
            <article class="flex h-full flex-col justify-between rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
              <div class="space-y-4">
                <div class="h-40 rounded-2xl" :style="`background: linear-gradient(135deg, ${template.accentColor}, #0f172a);`"></div>
                <div>
                  <h2 class="text-lg font-semibold text-slate-900" x-text="template.label"></h2>
                  <p class="mt-1 text-sm text-slate-600" x-text="template.description"></p>
                  <p class="mt-2 text-xs font-semibold uppercase tracking-wide text-slate-500" x-text="template.highlight"></p>
                </div>
              </div>
              <div class="mt-6 flex items-center justify-between">
                <span
                  class="inline-flex items-center gap-2 rounded-full px-3 py-1 text-xs font-semibold"
                  :class="$store.invoice.builder.record.templateKey === template.key ? 'bg-indigo-100 text-indigo-600' : 'bg-slate-100 text-slate-600'"
                >
                  <i class="fas" :class="$store.invoice.builder.record.templateKey === template.key ? 'fa-circle-check' : 'fa-layer-group'"></i>
                  <span x-text="$store.invoice.builder.record.templateKey === template.key ? 'Selected' : 'Available'"></span>
                </span>
                <div class="flex items-center gap-2">
                  <Button
                    type="button"
                    variant="ghost"
                    @click.prevent="$store.invoice.updateTemplate(template.key)"
                  >
                    <i class="fas fa-paintbrush text-xs"></i>
                    Apply
                  </Button>
                  <Button
                    type="button"
                    @click.prevent="$store.invoice.updateTemplate(template.key); window.location.assign('/invoice/builder');"
                  >
                    <i class="fas fa-pen-to-square text-xs"></i>
                    Use template
                  </Button>
                </div>
              </div>
            </article>
          </template>
        </div>
      </div>
    </section>
  </main>
</Layout>
