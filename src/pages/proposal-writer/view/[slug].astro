---
import Layout from '../../../layouts/Layout.astro';
import { db, Proposal, eq } from 'astro:db';
import { ProposalDataSchema } from '../../../lib/proposal/schema';
import { formatCurrency } from '../../../lib/proposal/utils';

const slug = Astro.params.slug;
const rows = await db.select().from(Proposal).where(eq(Proposal.slug, slug));
const record = rows[0];

if (!record || record.status !== 'published') {
  Astro.response.status = 404;
}

const proposalData = record ? ProposalDataSchema.parse(record.data) : ProposalDataSchema.parse({});
const currency = record?.currency ?? 'USD';
const title = record?.title ?? 'Proposal';
---
<Layout>
  <main class="bg-slate-100 py-16">
    <div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
      {record && record.status === 'published' ? (
        <article class="rounded-3xl border border-slate-200 bg-white shadow-xl">
          <header class="rounded-t-3xl bg-slate-900 px-8 py-10 text-white">
            <p class="text-xs uppercase tracking-[0.2em] text-white/70">Proposal</p>
            <h1 class="mt-2 text-3xl font-bold">{title}</h1>
            <p class="mt-2 text-sm text-white/80">Prepared for {proposalData.client.company ?? 'client'} — {proposalData.client.contact}</p>
          </header>
          <div class="space-y-10 px-8 py-10">
            <section class="space-y-3">
              <h2 class="text-lg font-semibold text-slate-900">Executive summary</h2>
              <p class="text-sm leading-relaxed text-slate-600">{proposalData.overview}</p>
            </section>
            <section class="grid gap-6 lg:grid-cols-2">
              <div>
                <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Goals</h3>
                <ul class="mt-3 space-y-2 text-sm text-slate-700">
                  {proposalData.goals.map((goal, index) => (
                    <li class="flex items-start gap-3" key={`goal-${index}`}>
                      <i class="fas fa-check text-emerald-500 text-xs mt-1"></i>
                      <span>{goal}</span>
                    </li>
                  ))}
                </ul>
              </div>
              <div>
                <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Scope</h3>
                <ul class="mt-3 space-y-2 text-sm text-slate-700">
                  {proposalData.scope.map((item, index) => (
                    <li class="flex items-start gap-3" key={`scope-${index}`}>
                      <i class="fas fa-layer-group text-indigo-500 text-xs mt-1"></i>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </section>
            <section class="space-y-4">
              <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Timeline</h3>
              <ol class="space-y-3">
                {proposalData.timeline.map((item, index) => (
                  <li class="flex flex-wrap items-center justify-between gap-3 rounded-2xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm" key={`timeline-${index}`}>
                    <div>
                      <h4 class="font-semibold text-slate-900">{item.milestone}</h4>
                      <p class="text-xs text-slate-500">{item.description}</p>
                    </div>
                    <div class="text-xs font-semibold uppercase tracking-wide text-slate-600">
                      <span>{item.start}</span>
                      <span class="mx-1">→</span>
                      <span>{item.end}</span>
                    </div>
                  </li>
                ))}
              </ol>
            </section>
            <section class="space-y-4">
              <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Budget</h3>
              <div class="overflow-hidden rounded-2xl border border-slate-200">
                <table class="w-full text-sm">
                  <thead class="bg-slate-100 text-xs font-semibold uppercase tracking-wide text-slate-600">
                    <tr>
                      <th class="px-4 py-3 text-left">Item</th>
                      <th class="px-4 py-3 text-right">Qty</th>
                      <th class="px-4 py-3 text-right">Unit</th>
                      <th class="px-4 py-3 text-right">Total</th>
                    </tr>
                  </thead>
                  <tbody class="divide-y divide-slate-100">
                    {proposalData.budget.items.map((item, index) => (
                      <tr class="text-slate-700" key={`budget-${index}`}>
                        <td class="px-4 py-3">{item.label}</td>
                        <td class="px-4 py-3 text-right">{item.qty}</td>
                        <td class="px-4 py-3 text-right">{formatCurrency(item.unitPrice, currency)}</td>
                        <td class="px-4 py-3 text-right font-semibold">{formatCurrency(item.total, currency)}</td>
                      </tr>
                    ))}
                  </tbody>
                  <tfoot class="bg-slate-50 text-sm font-semibold text-slate-900">
                    <tr>
                      <td class="px-4 py-3" colspan="3">Total investment</td>
                      <td class="px-4 py-3 text-right">{formatCurrency(proposalData.budget.total, currency)}</td>
                    </tr>
                  </tfoot>
                </table>
              </div>
              {proposalData.budget.notes ? (
                <p class="text-xs text-slate-500">{proposalData.budget.notes}</p>
              ) : null}
            </section>
            <section class="grid gap-6 lg:grid-cols-2">
              <div>
                <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Team</h3>
                <ul class="mt-3 space-y-3 text-sm text-slate-700">
                  {proposalData.team.map((member, index) => (
                    <li class="rounded-2xl border border-slate-200 bg-slate-50 p-4" key={`team-${index}`}>
                      <p class="font-semibold text-slate-900">{member.name}</p>
                      <p class="text-xs uppercase tracking-wide text-slate-500">{member.role}</p>
                      <p class="mt-2 text-sm text-slate-600">{member.bio}</p>
                    </li>
                  ))}
                </ul>
              </div>
              <div>
                <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Risks and mitigations</h3>
                <ul class="mt-3 space-y-2 text-sm text-slate-700">
                  {proposalData.risks.map((risk, index) => (
                    <li class="flex items-start gap-3" key={`risk-${index}`}>
                      <i class="fas fa-triangle-exclamation text-amber-500 text-xs mt-1"></i>
                      <span>{risk}</span>
                    </li>
                  ))}
                </ul>
                <ul class="mt-4 space-y-2 text-sm text-slate-700">
                  {proposalData.mitigations.map((item, index) => (
                    <li class="flex items-start gap-3" key={`mitigation-${index}`}>
                      <i class="fas fa-shield-halved text-emerald-500 text-xs mt-1"></i>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </section>
            <section class="space-y-3">
              <h3 class="text-sm font-semibold uppercase tracking-wide text-slate-500">Terms</h3>
              <ul class="space-y-2 text-sm text-slate-700">
                {proposalData.terms.map((term, index) => (
                  <li class="flex items-start gap-3" key={`term-${index}`}>
                    <i class="fas fa-scale-balanced text-indigo-500 text-xs mt-1"></i>
                    <span>{term}</span>
                  </li>
                ))}
              </ul>
            </section>
          </div>
        </article>
      ) : (
        <div class="rounded-3xl border border-dashed border-slate-300 bg-white p-12 text-center text-slate-600">
          <i class="fas fa-circle-exclamation text-3xl text-slate-300"></i>
          <h2 class="mt-4 text-xl font-semibold text-slate-900">Proposal not available</h2>
          <p class="mt-2 text-sm">This link is inactive or the proposal is no longer published.</p>
        </div>
      )}
    </div>
  </main>
</Layout>
