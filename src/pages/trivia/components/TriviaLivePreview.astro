---
import SectionHeading from '../../../components/SectionHeading.astro';
import Button from '../../../components/Button.astro';
---
<section class="bg-slate-50 py-16" x-data="() => ({ store: $store.triviaArena })">
  <div class="mx-auto max-w-6xl space-y-10 px-4 sm:px-6 lg:px-8">
    <SectionHeading
      eyebrow="Gameplay preview"
      title="Prototype the Trivia Arena flow"
      description="Test drive the adaptive session loop: switch modes, manage the timer, activate power-ups, and review feedback without leaving the product page."
      align="center"
    />
    <div class="grid gap-6 lg:grid-cols-[minmax(0,1.6fr)_minmax(0,1fr)]">
      <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
        <nav class="flex flex-wrap gap-2">
          <template x-for="mode in store.state.modes" :key="mode.key">
            <button
              type="button"
              class="inline-flex items-center gap-2 rounded-full border px-4 py-2 text-xs font-semibold uppercase tracking-wide transition"
              :class="store.state.activeMode === mode.key
                ? 'border-indigo-500 bg-indigo-500 text-white shadow'
                : 'border-slate-200 bg-slate-50 text-slate-600 hover:border-slate-300'"
              @click="store.startMode(mode.key)"
            >
              <span x-text="mode.label"></span>
              <span
                class="rounded-full px-2 py-0.5 text-[10px] font-semibold"
                x-show="mode.badge"
                x-text="mode.badge"
                :class="store.state.activeMode === mode.key ? 'bg-white/20' : 'bg-slate-200 text-slate-600'"
              ></span>
              <span
                class="rounded-full px-2 py-0.5 text-[10px] font-semibold"
                x-show="mode.status === 'coming-soon'"
              >Coming soon</span>
            </button>
          </template>
        </nav>

        <div class="mt-6 flex items-center justify-between text-xs text-slate-500">
          <p>
            Question
            <span class="font-semibold text-slate-700" x-text="`${store.state.activeIndex + 1} / ${store.state.questions.length}`"></span>
            ·
            <span class="font-semibold text-slate-700" x-text="store.activeQuestion?.category"></span>
            ·
            <span class="font-semibold capitalize text-slate-700" x-text="store.activeQuestion?.difficulty"></span>
          </p>
          <p class="inline-flex items-center gap-2">
            <span class="rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-700">
              <i class="fas fa-stopwatch text-[11px]"></i>
              <span x-text="Math.round(store.state.session.timer.remainingMs / 1000)"></span>s
            </span>
            <span class="rounded-full bg-slate-100 px-3 py-1 font-semibold text-slate-700">
              <i class="fas fa-fire text-[11px]"></i>
              x<span x-text="(1 + store.state.session.streak * 0.05).toFixed(2)"></span>
            </span>
          </p>
        </div>

        <div class="mt-4 h-2 w-full overflow-hidden rounded-full bg-slate-100">
          <div
            class="h-full rounded-full bg-gradient-to-r from-indigo-500 via-sky-500 to-emerald-500"
            :style="`width: ${Math.round(store.timerProgress * 100)}%`"
          ></div>
        </div>

        <div class="mt-6 space-y-4">
          <template x-if="store.activeQuestion?.imageUrl">
            <img
              :src="store.activeQuestion.imageUrl"
              alt="Question illustration"
              class="h-48 w-full rounded-2xl object-cover"
            />
          </template>
          <h3 class="text-lg font-semibold text-slate-900" x-text="store.activeQuestion?.prompt"></h3>

          <template x-if="store.activeQuestion?.type === 'fill'">
            <div>
              <label class="text-xs font-semibold uppercase tracking-wide text-slate-500">Type your answer</label>
              <input
                type="text"
                class="mt-2 w-full rounded-2xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm focus:border-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                placeholder="Enter a one-word response"
                x-model="store.state.fillAnswers[store.activeQuestion.id]"
                @input="store.updateFillAnswer($event.target.value)"
              />
            </div>
          </template>

          <template x-if="store.activeQuestion && store.activeQuestion.type !== 'fill'">
            <ul class="grid gap-3">
              <template x-for="option in (store.activeQuestion?.options ?? [])" :key="option.id">
                <li
                  class="rounded-2xl border px-4 py-3 text-sm font-medium transition"
                  :class="[
                    store.selection.includes(option.id)
                      ? 'border-indigo-500 bg-indigo-50 text-indigo-700'
                      : store.state.session.hiddenOptionIds.includes(option.id)
                        ? 'border-dashed border-slate-200 bg-slate-100 text-slate-400'
                        : 'border-slate-200 bg-white hover:border-indigo-300'
                  ]"
                >
                  <button
                    type="button"
                    class="flex w-full items-center justify-between gap-3"
                    @click.prevent="store.selectOption(option.id)"
                    :disabled="store.state.session.hiddenOptionIds.includes(option.id)"
                  >
                    <span class="inline-flex items-center gap-3">
                      <span class="inline-flex h-8 w-8 items-center justify-center rounded-full border text-xs font-bold"
                        :class="store.selection.includes(option.id) ? 'border-indigo-500 bg-indigo-500 text-white' : 'border-slate-200 bg-slate-100 text-slate-600'"
                        x-text="option.label"
                      ></span>
                      <span x-text="option.text"></span>
                    </span>
                    <span
                      class="text-xs font-semibold uppercase"
                      x-show="store.state.session.answerStatus === 'revealed' && store.answerArray(store.activeQuestion).includes(option.id)"
                    >Correct</span>
                  </button>
                </li>
              </template>
            </ul>
          </template>
        </div>

        <div class="mt-6 flex flex-wrap items-center gap-3">
          <Button
            type="button"
            :class="store.state.session.answerStatus === 'correct' ? 'opacity-60 cursor-default' : ''"
            @click.prevent="store.submitAnswer()"
          >
            <i class="fas fa-check text-sm"></i>
            Submit answer
          </Button>
          <Button
            type="button"
            variant="outline"
            @click.prevent="store.nextQuestion()"
          >
            <i class="fas fa-arrow-right text-sm"></i>
            Next question
          </Button>
          <Button type="button" variant="ghost" @click.prevent="store.revealAnswer()">
            <i class="fas fa-eye text-sm"></i>
            Reveal answer
          </Button>
        </div>

        <div class="mt-6">
          <p class="text-xs font-semibold uppercase tracking-wide text-slate-500">Power-ups</p>
          <div class="mt-3 flex flex-wrap gap-3">
            <template x-for="power in store.state.powerUps" :key="power.key">
              <button
                type="button"
                class="inline-flex items-center gap-2 rounded-full border px-4 py-2 text-xs font-semibold uppercase tracking-wide transition"
                :class="power.used >= power.limit ? 'border-slate-200 bg-slate-100 text-slate-400 cursor-not-allowed' : 'border-indigo-200 bg-indigo-50 text-indigo-700 hover:border-indigo-400'"
                @click.prevent="store.usePowerUp(power.key)"
              >
                <i :class="`${power.icon} text-sm`"></i>
                <span x-text="power.label"></span>
                <span class="rounded-full bg-white/40 px-2 py-0.5 text-[10px] font-semibold" x-text="`${power.limit - power.used}`"></span>
              </button>
            </template>
          </div>
          <p class="mt-3 text-xs text-slate-500" x-text="store.state.lastAction"></p>
        </div>

        <template x-if="store.state.session.lastExplanation && store.state.session.answerStatus !== 'idle'">
          <div class="mt-6 rounded-2xl border border-emerald-200 bg-emerald-50 px-4 py-3 text-sm text-emerald-700">
            <p class="font-semibold">Explanation</p>
            <p class="mt-1" x-text="store.state.session.lastExplanation"></p>
          </div>
        </template>
      </div>

      <aside class="flex flex-col gap-6 rounded-3xl border border-slate-200 bg-white p-6 shadow-soft">
        <div>
          <h3 class="text-lg font-semibold text-slate-900">Session stats</h3>
          <dl class="mt-4 grid gap-3 text-sm text-slate-600">
            <div class="flex items-center justify-between rounded-2xl bg-slate-50 px-3 py-2">
              <dt>Accuracy</dt>
              <dd class="font-semibold text-slate-900" x-text="`${Math.round(store.state.stats.accuracy * 100)}%`"></dd>
            </div>
            <div class="flex items-center justify-between rounded-2xl bg-slate-50 px-3 py-2">
              <dt>Avg. time to answer</dt>
              <dd class="font-semibold text-slate-900" x-text="`${Math.round(store.state.stats.averageTimeMs / 100) / 10}s`"></dd>
            </div>
            <div class="flex items-center justify-between rounded-2xl bg-slate-50 px-3 py-2">
              <dt>Current streak</dt>
              <dd class="font-semibold text-slate-900" x-text="store.state.session.streak"></dd>
            </div>
            <div class="flex items-center justify-between rounded-2xl bg-slate-50 px-3 py-2">
              <dt>Rating</dt>
              <dd class="font-semibold text-slate-900" x-text="store.state.stats.rating"></dd>
            </div>
          </dl>
        </div>
        <div>
          <h3 class="text-lg font-semibold text-slate-900">Leaderboard glimpse</h3>
          <template x-for="board in store.state.leaderboards" :key="board.scope">
            <div class="mt-3 rounded-2xl border border-slate-200 bg-slate-50 px-4 py-3 text-sm">
              <div class="flex items-center justify-between text-xs text-slate-500">
                <span class="font-semibold uppercase tracking-wide text-slate-600" x-text="board.label"></span>
                <span x-text="new Date(board.updatedAt).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })"></span>
              </div>
              <ul class="mt-2 space-y-1 text-slate-700">
                <template x-for="entry in board.entries" :key="`${board.scope}-${entry.rank}`">
                  <li class="flex items-center justify-between text-xs">
                    <span>
                      <span class="font-semibold" x-text="`#${entry.rank}`"></span>
                      <span class="ml-2" x-text="entry.player"></span>
                    </span>
                    <span class="font-semibold" x-text="entry.score"></span>
                  </li>
                </template>
              </ul>
            </div>
          </template>
        </div>
        <div>
          <h3 class="text-lg font-semibold text-slate-900">Category strengths</h3>
          <ul class="mt-3 space-y-2 text-sm text-slate-600">
            <template x-for="item in store.state.stats.categoryStrengths" :key="item.category">
              <li>
                <div class="flex items-center justify-between">
                  <span class="font-semibold text-slate-700" x-text="item.category"></span>
                  <span class="text-xs font-semibold text-indigo-600" x-text="item.rating"></span>
                </div>
                <div class="mt-1 h-1.5 w-full overflow-hidden rounded-full bg-slate-100">
                  <div class="h-full rounded-full bg-gradient-to-r from-indigo-500 to-sky-500" :style="`width: ${item.rating}%`"></div>
                </div>
              </li>
            </template>
          </ul>
        </div>
      </aside>
    </div>
  </div>
</section>
