---
import Layout from "../../../layouts/Layout.astro";
import Button from "../../../components/Button.astro";
import VariantCard from "../../../components/caption/VariantCard.astro";
import {
  captionPlatformDetails,
  captionSeedDrafts,
} from "../../../data/captionSamples";
import type { CaptionDraft, CaptionPlatform } from "../../../types/caption";

export async function getStaticPaths() {
  const drafts = captionSeedDrafts();
  return drafts.map((draft) => ({
    params: { slug: draft.shareSlug },
    props: { draft },
  }));
}

const { draft } = Astro.props as { draft: CaptionDraft };
const platforms = draft.platforms
  .map((id) => captionPlatformDetails(id))
  .filter(Boolean) as CaptionPlatform[];
---

<Layout>
  <main class="min-h-screen bg-slate-50">
    <section class="border-b border-slate-200 bg-white/80 backdrop-blur">
      <div class="mx-auto flex max-w-5xl flex-wrap items-center justify-between gap-4 px-4 py-8 sm:px-6 lg:px-8">
        <div>
          <p class="text-xs font-semibold uppercase tracking-wide text-indigo-600">Share preview</p>
          <h1 class="text-3xl font-bold text-slate-900">{draft.title}</h1>
          <p class="mt-2 text-sm text-slate-600">Generated with Ansiversa Social Caption Generator.</p>
        </div>
        <div class="flex flex-wrap items-center gap-3 text-sm">
          <Button href="/caption/editor" variant="outline">
            <i class="fas fa-pen-to-square text-xs"></i>
            Edit in workspace
          </Button>
          <Button href="/caption" variant="ghost">
            <i class="fas fa-wand-magic-sparkles text-xs"></i>
            Generate another set
          </Button>
        </div>
      </div>
    </section>

    <section class="mx-auto max-w-5xl px-4 py-12 sm:px-6 lg:px-8">
      <div class="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
        <div class="flex flex-wrap items-center justify-between gap-4">
          <div>
            <p class="text-xs font-semibold uppercase tracking-wide text-slate-500">Post idea</p>
            <p class="mt-1 text-lg font-semibold text-slate-900">{draft.idea}</p>
          </div>
          {draft.utm && (
            <div class="rounded-2xl bg-slate-100 px-4 py-3 text-xs text-slate-600">
              <span class="font-semibold text-slate-800">Tracking link:</span>
              <span class="ml-2 break-all">{draft.utm.url}</span>
            </div>
          )}
        </div>
      </div>

      <div class="mt-10 space-y-8">
        {platforms.map((platform) => {
          const variants = draft.variants[platform.id] ?? [];
          const chosenId = draft.chosen[platform.id];
          return (
            <section class="space-y-4" key={platform.id}>
              <header class="flex flex-wrap items-center justify-between gap-3">
                <div class="flex items-center gap-2 text-sm font-semibold uppercase tracking-wide text-slate-500">
                  <i class={platform.icon}></i>
                  <span>{platform.name}</span>
                </div>
                <span class="inline-flex items-center gap-1 rounded-full bg-indigo-50 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-indigo-700">
                  <i class="fas fa-check-circle"></i>
                  Live variant
                </span>
              </header>
              <div class="grid gap-6 lg:grid-cols-2">
                {variants.map((variant) => (
                  <VariantCard
                    platform={platform}
                    variant={variant}
                    isChosen={variant.id === chosenId}
                    badgeLabel={variant.id === chosenId ? "Selected" : null}
                  >
                    <Button slot="actions" type="button" size="sm" variant="outline">
                      <i class="fas fa-copy text-xs"></i>
                      Copy text
                    </Button>
                  </VariantCard>
                ))}
              </div>
            </section>
          );
        })}
      </div>
    </section>
  </main>
</Layout>
