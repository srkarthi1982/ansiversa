import type {
  CourseRecord,
  CourseTrackerSampleData,
  LessonRecord,
  ModuleRecord,
  NoteRecord,
  PlanSession,
  StudySessionRecord,
} from '../../types/course-tracker';

const toIso = (value: string): string => new Date(value).toISOString();

const createLesson = (data: Partial<LessonRecord> & Pick<LessonRecord, 'id' | 'title'>): LessonRecord => ({
  courseId: data.courseId ?? 'course-deeplearning',
  moduleId: data.moduleId ?? 'module-1',
  moduleTitle: data.moduleTitle ?? 'Module',
  durationMin: data.durationMin ?? 45,
  resourceUrl: data.resourceUrl ?? '#',
  position: data.position ?? 1,
  completed: data.completed ?? false,
  scheduledFor: data.scheduledFor ?? null,
  dueAt: data.dueAt ?? null,
  noteCount: data.noteCount ?? 0,
  quizAttached: data.quizAttached ?? false,
  tags: data.tags ?? [],
  ...data,
});

const createModule = (data: Partial<ModuleRecord> & Pick<ModuleRecord, 'id' | 'title'>): ModuleRecord => ({
  description: data.description ?? '',
  position: data.position ?? 1,
  lessons: data.lessons ?? [],
  ...data,
});

const createPlanSession = (data: Partial<PlanSession> & Pick<PlanSession, 'id' | 'day'>): PlanSession => ({
  focus: data.focus ?? 'Deep work',
  start: data.start ?? '07:30',
  end: data.end ?? '09:00',
  lessonIds: data.lessonIds ?? [],
  type: data.type ?? 'study',
  status: data.status ?? 'scheduled',
  ...data,
});

const createSessionRecord = (
  data: Partial<StudySessionRecord> & Pick<StudySessionRecord, 'id' | 'courseId' | 'lessonId'>,
): StudySessionRecord => ({
  startedAt: data.startedAt ?? toIso('2024-07-17T07:30:00Z'),
  endedAt: data.endedAt ?? toIso('2024-07-17T08:30:00Z'),
  minutes: data.minutes ?? 60,
  type: data.type ?? 'deep-work',
  ...data,
});

const createNote = (data: Partial<NoteRecord> & Pick<NoteRecord, 'id' | 'courseId' | 'lessonId'>): NoteRecord => ({
  title: data.title ?? 'Study note',
  body: data.body ?? '',
  updatedAt: data.updatedAt ?? toIso('2024-07-16T19:45:00Z'),
  tags: data.tags ?? [],
  ...data,
});

export const getSampleCourseTrackerData = (): CourseTrackerSampleData => {
  const deepLearningLessonsModule1: LessonRecord[] = [
    createLesson({
      id: 'lesson-dl-1',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-1',
      moduleTitle: 'Neural Networks Foundations',
      title: 'Perceptrons & Activation Functions',
      durationMin: 55,
      scheduledFor: toIso('2024-07-22T07:30:00Z'),
      dueAt: toIso('2024-07-22T23:59:00Z'),
      completed: true,
      noteCount: 2,
      quizAttached: true,
      tags: ['math review', 'core'],
    }),
    createLesson({
      id: 'lesson-dl-2',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-1',
      moduleTitle: 'Neural Networks Foundations',
      title: 'Backpropagation Walkthrough',
      durationMin: 65,
      scheduledFor: toIso('2024-07-23T07:30:00Z'),
      dueAt: toIso('2024-07-23T23:59:00Z'),
      completed: true,
      noteCount: 1,
      quizAttached: true,
      tags: ['derivations'],
    }),
    createLesson({
      id: 'lesson-dl-3',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-1',
      moduleTitle: 'Neural Networks Foundations',
      title: 'Regularisation Strategies',
      durationMin: 45,
      scheduledFor: toIso('2024-07-24T07:30:00Z'),
      dueAt: toIso('2024-07-24T23:59:00Z'),
      completed: false,
      noteCount: 1,
      quizAttached: false,
      tags: ['hyperparameters'],
    }),
  ];

  const deepLearningLessonsModule2: LessonRecord[] = [
    createLesson({
      id: 'lesson-dl-4',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-2',
      moduleTitle: 'Optimisation Toolkit',
      title: 'Gradient Descent Variants',
      durationMin: 50,
      scheduledFor: toIso('2024-07-25T07:30:00Z'),
      dueAt: toIso('2024-07-25T23:59:00Z'),
      completed: false,
      noteCount: 0,
      quizAttached: true,
      tags: ['optimisation'],
    }),
    createLesson({
      id: 'lesson-dl-5',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-2',
      moduleTitle: 'Optimisation Toolkit',
      title: 'Initialisation Recipes',
      durationMin: 40,
      scheduledFor: toIso('2024-07-26T07:30:00Z'),
      dueAt: toIso('2024-07-26T23:59:00Z'),
      completed: false,
      noteCount: 0,
      quizAttached: false,
      tags: ['implementation'],
    }),
    createLesson({
      id: 'lesson-dl-6',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-2',
      moduleTitle: 'Optimisation Toolkit',
      title: 'Batch Normalisation Deep Dive',
      durationMin: 55,
      scheduledFor: toIso('2024-07-28T09:00:00Z'),
      dueAt: toIso('2024-07-28T23:59:00Z'),
      completed: false,
      noteCount: 0,
      quizAttached: false,
      tags: ['stability'],
    }),
  ];

  const deepLearningLessonsModule3: LessonRecord[] = [
    createLesson({
      id: 'lesson-dl-7',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-3',
      moduleTitle: 'CNN Architectures',
      title: 'Convolutional Blocks',
      durationMin: 60,
      scheduledFor: toIso('2024-07-29T07:30:00Z'),
      dueAt: toIso('2024-07-29T23:59:00Z'),
      completed: false,
      noteCount: 0,
      quizAttached: false,
      tags: ['vision'],
    }),
    createLesson({
      id: 'lesson-dl-8',
      courseId: 'course-deeplearning',
      moduleId: 'module-dl-3',
      moduleTitle: 'CNN Architectures',
      title: 'Transfer Learning Pipeline',
      durationMin: 75,
      scheduledFor: toIso('2024-07-30T07:30:00Z'),
      dueAt: toIso('2024-07-30T23:59:00Z'),
      completed: false,
      noteCount: 0,
      quizAttached: true,
      tags: ['projects'],
    }),
  ];

  const productAnalyticsModule1: LessonRecord[] = [
    createLesson({
      id: 'lesson-pa-1',
      courseId: 'course-product-analytics',
      moduleId: 'module-pa-1',
      moduleTitle: 'Foundations',
      title: 'North Star Metrics',
      durationMin: 40,
      scheduledFor: toIso('2024-07-23T18:00:00Z'),
      dueAt: toIso('2024-07-23T23:59:00Z'),
      completed: true,
      noteCount: 2,
      quizAttached: false,
      tags: ['strategy'],
    }),
    createLesson({
      id: 'lesson-pa-2',
      courseId: 'course-product-analytics',
      moduleId: 'module-pa-1',
      moduleTitle: 'Foundations',
      title: 'Instrumentation Planning',
      durationMin: 45,
      scheduledFor: toIso('2024-07-24T18:00:00Z'),
      dueAt: toIso('2024-07-24T23:59:00Z'),
      completed: false,
      noteCount: 1,
      quizAttached: true,
      tags: ['tracking'],
    }),
  ];

  const productAnalyticsModule2: LessonRecord[] = [
    createLesson({
      id: 'lesson-pa-3',
      courseId: 'course-product-analytics',
      moduleId: 'module-pa-2',
      moduleTitle: 'Experimentation',
      title: 'A/B Test Design',
      durationMin: 50,
      scheduledFor: toIso('2024-07-26T18:00:00Z'),
      dueAt: toIso('2024-07-26T23:59:00Z'),
      completed: false,
      noteCount: 1,
      quizAttached: true,
      tags: ['experiments'],
    }),
    createLesson({
      id: 'lesson-pa-4',
      courseId: 'course-product-analytics',
      moduleId: 'module-pa-2',
      moduleTitle: 'Experimentation',
      title: 'Interpreting Statistical Power',
      durationMin: 60,
      scheduledFor: toIso('2024-07-28T17:00:00Z'),
      dueAt: toIso('2024-07-28T23:59:00Z'),
      completed: false,
      noteCount: 0,
      quizAttached: false,
      tags: ['statistics'],
    }),
  ];

  const notionModuleLessons: LessonRecord[] = [
    createLesson({
      id: 'lesson-notion-1',
      courseId: 'course-notion-productivity',
      moduleId: 'module-notion-1',
      moduleTitle: 'Systems Setup',
      title: 'Build Master Task Database',
      durationMin: 30,
      scheduledFor: null,
      dueAt: null,
      completed: false,
      noteCount: 0,
      quizAttached: false,
      tags: ['workspace'],
    }),
    createLesson({
      id: 'lesson-notion-2',
      courseId: 'course-notion-productivity',
      moduleId: 'module-notion-1',
      moduleTitle: 'Systems Setup',
      title: 'Automate Weekly Agenda',
      durationMin: 35,
      scheduledFor: null,
      dueAt: null,
      completed: false,
      noteCount: 0,
      quizAttached: false,
      tags: ['automation'],
    }),
  ];

  const writingModuleLessons: LessonRecord[] = [
    createLesson({
      id: 'lesson-writing-1',
      courseId: 'course-creative-writing',
      moduleId: 'module-writing-1',
      moduleTitle: 'Narrative Craft',
      title: 'Character Voice Lab',
      durationMin: 35,
      completed: true,
      scheduledFor: toIso('2024-06-20T19:00:00Z'),
      dueAt: toIso('2024-06-20T23:59:00Z'),
      noteCount: 3,
      quizAttached: false,
      tags: ['voice'],
    }),
    createLesson({
      id: 'lesson-writing-2',
      courseId: 'course-creative-writing',
      moduleId: 'module-writing-1',
      moduleTitle: 'Narrative Craft',
      title: 'Scene Structure Workshop',
      durationMin: 40,
      completed: true,
      scheduledFor: toIso('2024-06-22T19:00:00Z'),
      dueAt: toIso('2024-06-22T23:59:00Z'),
      noteCount: 2,
      quizAttached: false,
      tags: ['structure'],
    }),
  ];

  const courses: CourseRecord[] = [
    {
      id: 'course-deeplearning',
      title: 'Deep Learning Specialisation',
      slug: 'deep-learning-specialisation',
      provider: 'Coursera',
      url: 'https://www.coursera.org/specializations/deep-learning',
      level: 'Advanced',
      focusArea: 'Data & AI',
      status: 'active',
      estimatedHours: 62,
      progressPct: 58,
      startedAt: toIso('2024-06-18T08:00:00Z'),
      targetEndDate: toIso('2024-08-12T08:00:00Z'),
      modules: [
        createModule({ id: 'module-dl-1', title: 'Neural Networks Foundations', position: 1, lessons: deepLearningLessonsModule1 }),
        createModule({ id: 'module-dl-2', title: 'Optimisation Toolkit', position: 2, lessons: deepLearningLessonsModule2 }),
        createModule({ id: 'module-dl-3', title: 'CNN Architectures', position: 3, lessons: deepLearningLessonsModule3 }),
      ],
      plan: {
        weeklyGoalHours: 7,
        preferredPace: 'steady',
        streakDays: 6,
        longestStreak: 11,
        studyDays: ['Mon', 'Tue', 'Thu', 'Sat'],
        nextReminderAt: toIso('2024-07-22T07:00:00Z'),
        autoAdjust: true,
        sessions: [
          createPlanSession({
            id: 'plan-dl-mon',
            day: 'Mon',
            focus: 'Replay last quiz + new lecture',
            start: '07:00',
            end: '08:30',
            lessonIds: ['lesson-dl-3'],
            status: 'overdue',
          }),
          createPlanSession({
            id: 'plan-dl-tue',
            day: 'Tue',
            focus: 'Implement gradient descent variants',
            lessonIds: ['lesson-dl-4'],
            status: 'scheduled',
          }),
          createPlanSession({
            id: 'plan-dl-thu',
            day: 'Thu',
            focus: 'Batch norm walkthrough',
            lessonIds: ['lesson-dl-6'],
            start: '07:30',
            end: '09:00',
            status: 'scheduled',
          }),
          createPlanSession({
            id: 'plan-dl-sat',
            day: 'Sat',
            focus: 'Capstone project sprint',
            start: '09:00',
            end: '11:00',
            lessonIds: ['lesson-dl-7', 'lesson-dl-8'],
            type: 'review',
            status: 'scheduled',
          }),
        ],
        upcomingMilestones: [
          { id: 'milestone-dl-1', label: 'Optimization assignment submit', date: toIso('2024-07-27T18:00:00Z'), type: 'checkpoint' },
          { id: 'milestone-dl-2', label: 'CNN project upload', date: toIso('2024-08-05T18:00:00Z'), type: 'project' },
        ],
      },
      reminders: [
        { id: 'reminder-dl-daily', label: 'Morning study reminder', cadence: 'Daily', time: '07:00', channel: 'Push', active: true },
        { id: 'reminder-dl-weekly', label: 'Saturday project block', cadence: 'Weekly', time: '09:00', channel: 'Email', active: true },
      ],
      quizLinks: [
        { id: 'quiz-dl-1', lessonId: 'lesson-dl-2', title: 'Backpropagation quick check', url: '/quiz/backpropagation', status: 'published' },
        { id: 'quiz-dl-2', lessonId: 'lesson-dl-4', title: 'Gradient descent mastery quiz', url: '/quiz/gradient-descent', status: 'draft' },
      ],
      resources: [
        { label: 'Lesson Builder import', url: '/lesson-builder?from=course-deeplearning' },
        { label: 'Repo checklist template', url: 'https://github.com/ansiversa/study-checklists' },
      ],
      notesOverview: [
        {
          lessonId: 'lesson-dl-2',
          title: 'Chain rule intuition',
          excerpt: 'Visualised gradient flow through each layer using colour-coded matrices to explain vanishing gradients...',
          updatedAt: toIso('2024-07-18T21:00:00Z'),
        },
        {
          lessonId: 'lesson-dl-3',
          title: 'Regularisation playbook',
          excerpt: 'Setup for dropout vs L2 comparison, with ideas on when to pick each for vision workloads.',
          updatedAt: toIso('2024-07-20T10:15:00Z'),
        },
      ],
      highlight: {
        wins: ['AI summary saved 25 mins on lecture review', 'Streak restored after weekend catch-up'],
        blockers: ['Need clarity on momentum schedule implementation'],
        focusQuestion: 'How can I explain batch normalisation intuitively for the blog post?',
      },
      metrics: {
        totalLessons: deepLearningLessonsModule1.length + deepLearningLessonsModule2.length + deepLearningLessonsModule3.length,
        completedLessons: deepLearningLessonsModule1.filter((lesson) => lesson.completed).length + deepLearningLessonsModule2.filter((lesson) => lesson.completed).length,
        minutesLogged: 1480,
        minutesThisWeek: 285,
        overdueLessons: 1,
      },
    },
    {
      id: 'course-product-analytics',
      title: 'Product Analytics Bootcamp',
      slug: 'product-analytics-bootcamp',
      provider: 'Udemy',
      url: 'https://www.udemy.com/course/product-analytics',
      level: 'Intermediate',
      focusArea: 'Product & Strategy',
      status: 'active',
      estimatedHours: 28,
      progressPct: 42,
      startedAt: toIso('2024-07-10T18:00:00Z'),
      targetEndDate: toIso('2024-08-03T18:00:00Z'),
      modules: [
        createModule({ id: 'module-pa-1', title: 'Foundations', position: 1, lessons: productAnalyticsModule1 }),
        createModule({ id: 'module-pa-2', title: 'Experimentation', position: 2, lessons: productAnalyticsModule2 }),
      ],
      plan: {
        weeklyGoalHours: 4,
        preferredPace: 'flex',
        streakDays: 3,
        longestStreak: 7,
        studyDays: ['Tue', 'Thu', 'Sun'],
        nextReminderAt: toIso('2024-07-23T17:30:00Z'),
        autoAdjust: false,
        sessions: [
          createPlanSession({ id: 'plan-pa-tue', day: 'Tue', focus: 'Funnel instrumentation doc', start: '17:30', end: '18:45', lessonIds: ['lesson-pa-2'], status: 'scheduled' }),
          createPlanSession({ id: 'plan-pa-thu', day: 'Thu', focus: 'Hypothesis library review', start: '18:00', end: '19:00', lessonIds: ['lesson-pa-3'], status: 'scheduled' }),
          createPlanSession({ id: 'plan-pa-sun', day: 'Sun', focus: 'Case study writing sprint', start: '10:00', end: '11:30', lessonIds: ['lesson-pa-4'], type: 'review', status: 'scheduled' }),
        ],
        upcomingMilestones: [
          { id: 'milestone-pa-1', label: 'Submit instrumentation plan', date: toIso('2024-07-25T18:00:00Z'), type: 'project' },
        ],
      },
      reminders: [
        { id: 'reminder-pa-weekly', label: 'Analytics recap note', cadence: 'Weekly', time: '20:30', channel: 'Email', active: true },
      ],
      quizLinks: [
        { id: 'quiz-pa-1', lessonId: 'lesson-pa-3', title: 'A/B testing readiness quiz', url: '/quiz/ab-testing', status: 'draft' },
      ],
      resources: [
        { label: 'Experiment charter template', url: 'https://ansiversa.notion.site/experiment-charter' },
        { label: 'Lesson Builder plan sync', url: '/lesson-builder?from=product-analytics' },
      ],
      notesOverview: [
        {
          lessonId: 'lesson-pa-1',
          title: 'Choosing the north star',
          excerpt: 'Comparing activation rate vs weekly teams engaged – flagged to test retention scoring model next.',
          updatedAt: toIso('2024-07-19T22:15:00Z'),
        },
      ],
      highlight: {
        wins: ['Quiz Institute draft generated targeted comprehension questions'],
        blockers: ['Need example dashboards for retention cohorts'],
        focusQuestion: 'Which metric best signals aha moment during onboarding?',
      },
      metrics: {
        totalLessons: productAnalyticsModule1.length + productAnalyticsModule2.length,
        completedLessons: productAnalyticsModule1.filter((lesson) => lesson.completed).length,
        minutesLogged: 640,
        minutesThisWeek: 120,
        overdueLessons: 0,
      },
    },
    {
      id: 'course-notion-productivity',
      title: 'Notion Productivity Sprint',
      slug: 'notion-productivity-sprint',
      provider: 'YouTube Playlist',
      url: 'https://youtube.com/playlist?list=notion-sprint',
      level: 'Beginner',
      focusArea: 'Productivity',
      status: 'planning',
      estimatedHours: 8,
      progressPct: 12,
      startedAt: toIso('2024-07-01T10:00:00Z'),
      targetEndDate: toIso('2024-07-31T10:00:00Z'),
      modules: [createModule({ id: 'module-notion-1', title: 'Systems Setup', position: 1, lessons: notionModuleLessons })],
      plan: {
        weeklyGoalHours: 2,
        preferredPace: 'steady',
        streakDays: 1,
        longestStreak: 3,
        studyDays: ['Wed', 'Sat'],
        nextReminderAt: toIso('2024-07-24T08:00:00Z'),
        autoAdjust: true,
        sessions: [
          createPlanSession({ id: 'plan-notion-wed', day: 'Wed', focus: 'Draft master tasks DB', start: '08:00', end: '08:45', lessonIds: ['lesson-notion-1'], status: 'scheduled' }),
          createPlanSession({ id: 'plan-notion-sat', day: 'Sat', focus: 'Automations + templates', start: '09:30', end: '10:30', lessonIds: ['lesson-notion-2'], status: 'scheduled' }),
        ],
        upcomingMilestones: [
          { id: 'milestone-notion-1', label: 'Workspace audit', date: toIso('2024-07-30T15:00:00Z'), type: 'checkpoint' },
        ],
      },
      reminders: [
        { id: 'reminder-notion', label: 'Workspace reset reminder', cadence: 'Weekly', time: '09:00', channel: 'Push', active: false },
      ],
      quizLinks: [],
      resources: [
        { label: 'Lesson Builder link', url: '/lesson-builder?from=notion' },
        { label: 'Template gallery', url: 'https://ansiversa.notion.site/templates' },
      ],
      notesOverview: [],
      highlight: {
        wins: ['Playlist curated and outline imported via Lesson Builder integration'],
        blockers: ['Need to gather task statuses from existing board'],
        focusQuestion: 'Which automations save most manual sorting time?',
      },
      metrics: {
        totalLessons: notionModuleLessons.length,
        completedLessons: notionModuleLessons.filter((lesson) => lesson.completed).length,
        minutesLogged: 55,
        minutesThisWeek: 0,
        overdueLessons: 0,
      },
    },
    {
      id: 'course-creative-writing',
      title: 'Creative Writing Masterclass',
      slug: 'creative-writing-masterclass',
      provider: 'Skillshare',
      url: 'https://www.skillshare.com/classes/creative-writing',
      level: 'Intermediate',
      focusArea: 'Creative',
      status: 'completed',
      estimatedHours: 14,
      progressPct: 100,
      startedAt: toIso('2024-05-15T20:00:00Z'),
      targetEndDate: toIso('2024-06-25T20:00:00Z'),
      modules: [createModule({ id: 'module-writing-1', title: 'Narrative Craft', position: 1, lessons: writingModuleLessons })],
      plan: {
        weeklyGoalHours: 3,
        preferredPace: 'steady',
        streakDays: 0,
        longestStreak: 9,
        studyDays: ['Mon', 'Wed'],
        nextReminderAt: toIso('2024-07-01T19:00:00Z'),
        autoAdjust: false,
        sessions: [
          createPlanSession({ id: 'plan-writing-mon', day: 'Mon', focus: 'Voice exercises', start: '19:00', end: '20:00', lessonIds: ['lesson-writing-1'], status: 'completed' }),
          createPlanSession({ id: 'plan-writing-wed', day: 'Wed', focus: 'Scene polish', start: '19:00', end: '20:00', lessonIds: ['lesson-writing-2'], status: 'completed' }),
        ],
        upcomingMilestones: [],
      },
      reminders: [
        { id: 'reminder-writing', label: 'Publish reflection to Blog Writer', cadence: 'Weekly', time: '20:15', channel: 'Email', active: false },
      ],
      quizLinks: [],
      resources: [
        { label: 'Blog Writer export', url: '/blog-writer?from=creative-writing' },
      ],
      notesOverview: [
        {
          lessonId: 'lesson-writing-2',
          title: 'Scene pacing notes',
          excerpt: 'Layered tension by alternating sentence length; flagged techniques to reuse in next draft.',
          updatedAt: toIso('2024-06-24T21:00:00Z'),
        },
      ],
      highlight: {
        wins: ['Draft published with reader feedback integrated'],
        blockers: [],
        focusQuestion: 'Which scenes to repurpose for newsletter feature?',
      },
      metrics: {
        totalLessons: writingModuleLessons.length,
        completedLessons: writingModuleLessons.filter((lesson) => lesson.completed).length,
        minutesLogged: 580,
        minutesThisWeek: 0,
        overdueLessons: 0,
      },
    },
  ];

  const sessions: StudySessionRecord[] = [
    createSessionRecord({
      id: 'session-dl-1',
      courseId: 'course-deeplearning',
      lessonId: 'lesson-dl-2',
      startedAt: toIso('2024-07-18T07:05:00Z'),
      endedAt: toIso('2024-07-18T08:15:00Z'),
      minutes: 70,
      type: 'deep-work',
    }),
    createSessionRecord({
      id: 'session-dl-2',
      courseId: 'course-deeplearning',
      lessonId: 'lesson-dl-3',
      startedAt: toIso('2024-07-20T09:00:00Z'),
      endedAt: toIso('2024-07-20T09:45:00Z'),
      minutes: 45,
      type: 'review',
    }),
    createSessionRecord({
      id: 'session-pa-1',
      courseId: 'course-product-analytics',
      lessonId: 'lesson-pa-1',
      startedAt: toIso('2024-07-18T18:05:00Z'),
      endedAt: toIso('2024-07-18T18:55:00Z'),
      minutes: 50,
      type: 'deep-work',
    }),
    createSessionRecord({
      id: 'session-pa-2',
      courseId: 'course-product-analytics',
      lessonId: 'lesson-pa-2',
      startedAt: toIso('2024-07-19T18:00:00Z'),
      endedAt: toIso('2024-07-19T18:35:00Z'),
      minutes: 35,
      type: 'catch-up',
    }),
  ];

  const notes: NoteRecord[] = [
    createNote({
      id: 'note-dl-1',
      courseId: 'course-deeplearning',
      lessonId: 'lesson-dl-2',
      title: 'Backprop gradients cheat sheet',
      body:
        'Summarised each derivative step with matrix notation. Highlighted where to emphasise intuition for future blog post.',
      tags: ['derivatives', 'blog-draft'],
      updatedAt: toIso('2024-07-18T21:05:00Z'),
    }),
    createNote({
      id: 'note-dl-2',
      courseId: 'course-deeplearning',
      lessonId: 'lesson-dl-3',
      title: 'Regularisation tradeoffs',
      body: 'Compared dropout vs L2 with dataset notes. Need to ask AI for simpler explanation.',
      tags: ['questions'],
      updatedAt: toIso('2024-07-20T10:30:00Z'),
    }),
    createNote({
      id: 'note-pa-1',
      courseId: 'course-product-analytics',
      lessonId: 'lesson-pa-1',
      title: 'North star scoring model',
      body: 'Drafted scoring rubric: activation, engagement, collaboration. Need to validate with PM feedback.',
      tags: ['framework'],
      updatedAt: toIso('2024-07-19T22:25:00Z'),
    }),
  ];

  const exports: CourseTrackerSampleData['exports'] = [
    { id: 'export-md', format: 'Markdown', lastRunAt: toIso('2024-07-19T12:15:00Z'), status: 'ready', description: 'Lesson notes grouped by module.' },
    { id: 'export-csv', format: 'CSV', lastRunAt: toIso('2024-07-18T20:00:00Z'), status: 'ready', description: 'Lesson status + session log.' },
    { id: 'export-pdf', format: 'PDF', lastRunAt: null, status: 'pro', description: 'Dashboard export with charts and streak badge.' },
    { id: 'export-ics', format: 'ICS', lastRunAt: null, status: 'pro', description: 'Study calendar sync (Pro only).' },
  ];

  const timeline: CourseTrackerSampleData['timeline'] = [
    { id: 'timeline-1', courseId: 'course-deeplearning', date: toIso('2024-07-20T09:45:00Z'), type: 'session', label: '45 min review', detail: 'Regularisation strategies session logged.' },
    { id: 'timeline-2', courseId: 'course-deeplearning', date: toIso('2024-07-20T10:30:00Z'), type: 'note', label: 'New highlight', detail: 'Added insights on L2 vs dropout.' },
    { id: 'timeline-3', courseId: 'course-product-analytics', date: toIso('2024-07-19T22:25:00Z'), type: 'note', label: 'North star rubric', detail: 'Drafted scoring model for activation metric.' },
    { id: 'timeline-4', courseId: 'course-product-analytics', date: toIso('2024-07-18T18:55:00Z'), type: 'session', label: '50 min focus', detail: 'Deep dive into instrumentation map.' },
    { id: 'timeline-5', courseId: 'course-deeplearning', date: toIso('2024-07-18T07:05:00Z'), type: 'reminder', label: 'Morning reminder sent', detail: 'Push notification delivered.' },
    { id: 'timeline-6', courseId: 'course-creative-writing', date: toIso('2024-06-24T21:00:00Z'), type: 'milestone', label: 'Draft published', detail: 'Exported to Blog Writer for editing.' },
  ];

  return { courses, sessions, notes, exports, timeline };
};

export type { CourseRecord };
