---
import type { CaptionPlatform, CaptionVariant } from "../../types/caption";

interface Props {
  platform: CaptionPlatform;
  variant: CaptionVariant;
  isChosen?: boolean;
  badgeLabel?: string | null;
  showCounters?: boolean;
}

const { platform, variant, isChosen = false, badgeLabel = null, showCounters = true } =
  Astro.props as Props;

const articleClasses = [
  "rounded-3xl border bg-white p-6 shadow-sm transition",
  isChosen ? "border-indigo-500 shadow-lg" : "",
]
  .filter(Boolean)
  .join(" ");

const complianceClass = (severity: string) =>
  [
    "rounded-xl border px-3 py-2",
    severity === "warning"
      ? "border-amber-200 bg-amber-50 text-amber-700"
      : severity === "info"
        ? "border-emerald-200 bg-emerald-50 text-emerald-700"
        : "border-rose-200 bg-rose-50 text-rose-700",
  ]
    .filter(Boolean)
    .join(" ");

const iconClass = (severity: string) =>
  [
    "fas mr-2 text-sm",
    severity === "info"
      ? "fa-circle-info"
      : severity === "warning"
        ? "fa-triangle-exclamation"
        : "fa-octagon-exclamation",
  ]
    .filter(Boolean)
    .join(" ");
---

<article class={articleClasses}>
  <header class="flex flex-wrap items-start justify-between gap-3">
    <div>
      <div class="flex items-center gap-2 text-xs font-semibold uppercase tracking-wide text-slate-500">
        <i class={platform.icon}></i>
        <span>{platform.name}</span>
      </div>
      <h3 class="mt-2 text-lg font-semibold text-slate-900">{variant.title}</h3>
    </div>
    <div class="flex flex-col items-end gap-2 text-right">
      {badgeLabel && (
        <span class="inline-flex items-center gap-1 rounded-full bg-indigo-100 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-indigo-700">
          <i class="fas fa-check-circle"></i>
          {badgeLabel}
        </span>
      )}
      {showCounters && (
        <div class="flex items-center gap-2 text-xs text-slate-500">
          <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-2 py-1">
            <i class="fas fa-font"></i>
            {variant.counters.characters}/{platform.limit}
          </span>
          <span class="inline-flex items-center gap-1 rounded-full bg-slate-100 px-2 py-1">
            <i class="fas fa-hashtag"></i>
            {variant.counters.hashtags}
          </span>
        </div>
      )}
    </div>
  </header>

  <p class="mt-4 whitespace-pre-line text-sm text-slate-700">{variant.text}</p>

  {variant.hashtags.length > 0 && (
    <div class="mt-4 flex flex-wrap gap-2 text-xs font-semibold uppercase tracking-wide text-slate-500">
      {variant.hashtags.map((tag) => (
        <span class="rounded-full bg-slate-100 px-2 py-1">#{tag}</span>
      ))}
    </div>
  )}

  {variant.compliance.length > 0 && (
    <ul class="mt-4 space-y-2 text-xs">
      {variant.compliance.map((flag) => (
        <li class={complianceClass(flag.severity)}>
          <i class={iconClass(flag.severity)}></i>
          {flag.message}
        </li>
      ))}
    </ul>
  )}

  <footer class="mt-6 flex flex-wrap items-center justify-between gap-3 text-sm text-slate-500">
    <div class="flex items-center gap-4">
      <span class="flex items-center gap-1">
        <i class="fas fa-sparkles text-indigo-500"></i>
        {variant.score.clarity} clarity
      </span>
      <span class="flex items-center gap-1">
        <i class="fas fa-bolt text-amber-500"></i>
        {variant.score.punch} punch
      </span>
      <span class="flex items-center gap-1">
        <i class="fas fa-shield-check text-emerald-500"></i>
        {variant.score.compliance} compliance
      </span>
    </div>
    <div class="flex flex-wrap items-center gap-2">
      <slot name="actions" />
    </div>
  </footer>
</article>
