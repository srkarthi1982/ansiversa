---
import SectionHeading from "../SectionHeading.astro";
import Button from "../Button.astro";
---
<section
  id="song-library"
  class="border-t border-white/10 bg-slate-950/95 py-20 text-white"
  x-data="{ song: $store['song-lyric-maker'] }"
>
  <div class="mx-auto max-w-6xl space-y-12 px-4 sm:px-6 lg:px-8">
    <header class="flex flex-wrap items-start justify-between gap-6">
      <div class="max-w-2xl">
        <SectionHeading
          eyebrow="Lyric library"
          title="Keep drafts, finals, and live hooks organized"
          description="Filter by genre, status, language, or tag to jump into the right workspace. Preview plan limits before inviting collaborators."
        />
      </div>
      <div class="flex flex-col items-end gap-3 text-right">
        <Button
          type="button"
          variant="outline"
          class="border-white/40 text-white hover:border-white/70 hover:text-white"
          @click="song.togglePlan()"
        >
          <i class="fa-solid fa-rotate text-xs"></i>
          Switch to <span x-text="song.plan === 'free' ? 'Pro preview' : 'Free preview'"></span>
        </Button>
        <p class="text-xs text-white/60">
          <span class="font-semibold" x-text="song.plan === 'free' ? 'Free plan' : 'Pro plan'"></span>
          ·
          Hooks per batch: <span x-text="song.planLimits.hooksPerPrompt"></span>
          ·
          Near rhyme: <span x-text="song.planLimits.nearRhyme === 'full' ? 'Full map' : 'Basic'"> </span>
        </p>
      </div>
    </header>

    <div class="grid gap-6 lg:grid-cols-[1.05fr_0.95fr]">
      <div class="space-y-6 rounded-3xl border border-white/10 bg-white/5 p-6">
        <div class="grid gap-4 sm:grid-cols-2 xl:grid-cols-4">
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Total projects</p>
            <p class="mt-2 text-2xl font-semibold" x-text="song.state.metrics.totalProjects"></p>
            <p class="text-xs text-white/60">Across pop, hip-hop, K-pop, devotional, and more.</p>
          </div>
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Drafts in progress</p>
            <p class="mt-2 text-2xl font-semibold" x-text="song.state.metrics.activeDrafts"></p>
            <p class="text-xs text-white/60">Verse, chorus, and bridge refinements underway.</p>
          </div>
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Avg sections</p>
            <p class="mt-2 text-2xl font-semibold" x-text="song.state.metrics.averageSections"></p>
            <p class="text-xs text-white/60">Templates keep structure consistent gig to gig.</p>
          </div>
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">AI passes run</p>
            <p class="mt-2 text-2xl font-semibold" x-text="song.state.aiUsage.passesRun"></p>
            <p class="text-xs text-white/60">Hook punch-ups, singability, translations, and more.</p>
          </div>
        </div>

        <div class="rounded-3xl border border-white/10 bg-slate-950/40 p-5">
          <div class="flex flex-wrap items-center gap-3">
            <div class="flex flex-1 flex-wrap gap-3">
              <label class="flex items-center gap-2 rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/70">
                <i class="fa-solid fa-magnifying-glass text-[10px]"></i>
                <input
                  type="search"
                  placeholder="Search titles, themes, tags"
                  class="bg-transparent text-sm text-white/90 placeholder:text-white/40 focus:outline-none"
                  @input.debounce.250ms="song.setFilter('search', $event.target.value)"
                />
              </label>
              <select
                class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
                @change="song.setFilter('status', $event.target.value)"
              >
                <template x-for="status in song.availableStatuses" :key="status">
                  <option
                    :value="status"
                    class="bg-slate-900 text-white"
                    x-text="status === 'all' ? 'All statuses' : status"
                    :selected="song.state.filters.status === status"
                  ></option>
                </template>
              </select>
              <select
                class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
                @change="song.setFilter('genre', $event.target.value)"
              >
                <template x-for="genre in song.availableGenres" :key="genre">
                  <option
                    :value="genre"
                    class="bg-slate-900 text-white"
                    x-text="genre === 'all' ? 'All genres' : genre"
                    :selected="song.state.filters.genre === genre"
                  ></option>
                </template>
              </select>
              <select
                class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
                @change="song.setFilter('language', $event.target.value)"
              >
                <template x-for="lang in song.availableLanguages" :key="lang">
                  <option
                    :value="lang"
                    class="bg-slate-900 text-white"
                    x-text="lang === 'all' ? 'All languages' : lang"
                    :selected="song.state.filters.language === lang"
                  ></option>
                </template>
              </select>
              <select
                class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
                @change="song.setFilter('tag', $event.target.value)"
              >
                <template x-for="tag in song.availableTags" :key="tag">
                  <option
                    :value="tag"
                    class="bg-slate-900 text-white"
                    x-text="tag === 'all' ? 'All tags' : tag"
                    :selected="song.state.filters.tag === tag"
                  ></option>
                </template>
              </select>
            </div>
            <Button
              type="button"
              variant="ghost"
              class="text-xs text-white/70 hover:text-white"
              @click="song.resetFilters()"
            >
              Clear filters
            </Button>
          </div>
          <p class="mt-3 text-xs text-white/50">
            Showing <span x-text="song.filteredProjects.length"></span> of <span x-text="song.state.projects.length"></span> projects.
            <template x-if="song.plan === 'free'">
              <span>
                Free slots remaining:
                <span x-text="song.remainingFreeSlots === 'unlimited' ? '—' : song.remainingFreeSlots"></span>.
              </span>
            </template>
          </p>
        </div>

        <ul class="space-y-3">
          <template x-for="project in song.filteredProjects" :key="project.id">
            <li>
              <button
                type="button"
                class="w-full rounded-3xl border px-5 py-4 text-left transition"
                :class="[
                  song.view.selectedProjectId === project.id
                    ? 'border-violet-400/60 bg-violet-500/20 text-white'
                    : 'border-white/10 bg-white/5 text-white/80 hover:border-white/30 hover:text-white',
                ]"
                @click="song.selectProject(project.id)"
              >
                <div class="flex flex-wrap items-center justify-between gap-4">
                  <div class="space-y-1">
                    <div class="flex items-center gap-2">
                      <h3 class="text-lg font-semibold text-white" x-text="project.title"></h3>
                      <template x-if="project.pinned">
                        <span class="inline-flex items-center gap-1 rounded-full bg-amber-400/20 px-2 py-0.5 text-[10px] font-semibold text-amber-200">
                          <i class="fa-solid fa-thumbtack text-[9px]"></i>
                          Pinned hook
                        </span>
                      </template>
                      <template x-if="project.planLocks?.nearRhyme && song.plan === 'free'">
                        <span class="inline-flex items-center gap-1 rounded-full bg-purple-500/20 px-2 py-0.5 text-[10px] font-semibold text-purple-200">
                          <i class="fa-solid fa-lock"></i>
                          Pro prosody
                        </span>
                      </template>
                    </div>
                    <p class="text-xs uppercase tracking-[0.3em] text-white/50">
                      <span x-text="project.genre"></span>
                      · <span x-text="project.tone"></span>
                      · <span x-text="project.status"></span>
                    </p>
                  </div>
                  <div class="flex flex-wrap items-center gap-4 text-xs text-white/60">
                    <span><i class="fa-regular fa-clock"></i> Updated <span x-text="song.formatRelative(project.updatedAt)"></span></span>
                    <span><i class="fa-solid fa-wave-square"></i> <span x-text="project.analysis.rhymeTightness"></span>% rhyme</span>
                    <span><i class="fa-solid fa-music"></i> <span x-text="`${project.tempo.bpm} BPM`"></span></span>
                  </div>
                </div>
                <div class="mt-3 flex flex-wrap items-center gap-2 text-[11px] text-white/60">
                  <template x-for="tag in project.tags" :key="tag">
                    <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2.5 py-1">
                      <i class="fa-solid fa-tag text-[9px]"></i>
                      <span x-text="tag"></span>
                    </span>
                  </template>
                </div>
                <div class="mt-3 grid gap-3 text-xs text-white/60 sm:grid-cols-2">
                  <div class="rounded-2xl border border-white/10 bg-white/5 px-3 py-2">
                    <p class="font-semibold text-white/70">Hook</p>
                    <p class="mt-1 text-white" x-text="project.hook.text"></p>
                  </div>
                  <div class="rounded-2xl border border-white/10 bg-white/5 px-3 py-2">
                    <p class="font-semibold text-white/70">Structure</p>
                    <p class="mt-1" x-text="song.templates.find(t => t.id === project.structureTemplateId)?.label ?? 'Custom'"></p>
                  </div>
                </div>
              </button>
            </li>
          </template>
        </ul>
      </div>

      <div class="space-y-6">
        <div class="rounded-3xl border border-white/10 bg-white/5 p-6">
          <header class="flex items-center justify-between">
            <div>
              <h2 class="text-lg font-semibold text-white">Structure lab templates</h2>
              <p class="text-xs text-white/60">Choose a template to preview section orders, syllable spans, and plan gating.</p>
            </div>
            <Button type="button" size="sm" variant="ghost" class="text-xs text-white/70 hover:text-white" @click="song.createProject(song.view.selectedTemplateId)">
              Use template
            </Button>
          </header>
          <ul class="mt-5 space-y-3">
            <template x-for="template in song.templates" :key="template.id">
              <li>
                <button
                  type="button"
                  class="w-full rounded-3xl border px-4 py-3 text-left transition"
                  :class="[
                    song.view.selectedTemplateId === template.id
                      ? 'border-emerald-400/60 bg-emerald-400/15 text-white'
                      : 'border-white/10 bg-white/5 text-white/80 hover:border-white/30 hover:text-white',
                  ]"
                  @click="song.selectTemplate(template.id)"
                >
                  <div class="flex flex-wrap items-center justify-between gap-3">
                    <div>
                      <p class="text-sm font-semibold text-white" x-text="template.label"></p>
                      <p class="mt-1 text-[11px] uppercase tracking-[0.3em] text-white/50" x-text="template.sectionOrder.join(' · ')"></p>
                    </div>
                    <span
                      class="inline-flex items-center gap-1 rounded-full px-2 py-0.5 text-[10px] font-semibold"
                      :class="song.isTemplateLocked(template.id) ? 'bg-purple-500/20 text-purple-200' : 'bg-emerald-400/20 text-emerald-100'"
                    >
                      <i class="fa-solid" :class="song.isTemplateLocked(template.id) ? 'fa-lock' : 'fa-star'"></i>
                      <span x-text="template.plan === 'free' ? 'Free' : 'Pro'"></span>
                    </span>
                  </div>
                  <p class="mt-2 text-xs text-white/60" x-text="template.description"></p>
                </button>
              </li>
            </template>
          </ul>
        </div>

        <div class="rounded-3xl border border-white/10 bg-white/5 p-6">
          <header class="flex items-center justify-between">
            <div>
              <h2 class="text-lg font-semibold text-white">Recent activity</h2>
              <p class="text-xs text-white/60">Monitor hook generations, analyses, and exports.</p>
            </div>
          </header>
          <ul class="mt-4 space-y-3">
            <template x-for="entry in song.state.activity" :key="entry.id">
              <li class="flex items-start gap-3 rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3">
                <span
                  class="mt-0.5 inline-flex h-8 w-8 items-center justify-center rounded-full"
                  :class="{
                    'bg-emerald-400/15 text-emerald-200': entry.tone === 'success',
                    'bg-sky-400/15 text-sky-200': entry.tone === 'info',
                    'bg-amber-400/15 text-amber-200': entry.tone === 'warning',
                  }"
                >
                  <i class="fa-solid" :class="entry.icon"></i>
                </span>
                <div>
                  <p class="text-sm font-semibold text-white" x-text="entry.label"></p>
                  <p class="text-xs text-white/60" x-text="entry.detail"></p>
                  <p class="mt-1 text-[11px] uppercase tracking-[0.3em] text-white/40" x-text="song.formatRelative(entry.timestamp)"></p>
                </div>
              </li>
            </template>
          </ul>
        </div>
      </div>
    </div>
  </div>
</section>
