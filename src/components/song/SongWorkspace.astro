---
import Button from "../Button.astro";
import SectionHeading from "../SectionHeading.astro";
---
<section
  id="song-workspace"
  class="border-t border-white/10 bg-slate-950 py-20 text-white"
  x-data="{ song: $store['song-lyric-maker'] }"
>
  <div class="mx-auto max-w-6xl space-y-12 px-4 sm:px-6 lg:px-8">
    <header class="flex flex-wrap items-center justify-between gap-6">
      <div class="space-y-2">
        <SectionHeading
          eyebrow="Workspace"
          title="Craft sections with live prosody, rhyme, and tempo context"
          description="Dive into the currently selected lyric project, swap hooks, run targeted revision passes, and export stage-ready sheets."
        />
      </div>
      <div class="flex flex-col items-end text-right text-xs text-white/60">
        <span>
          Plan:
          <span class="font-semibold" x-text="song.plan === 'free' ? 'Free' : 'Pro'"></span>
          · Multilingual: <span x-text="song.planLimits.multilingual.join(', ')"></span>
        </span>
        <span>Hooks per batch: <span x-text="song.planLimits.hooksPerPrompt"></span></span>
      </div>
    </header>

    <div class="grid gap-6 lg:grid-cols-[1.2fr_0.8fr]">
      <div class="space-y-6 rounded-3xl border border-white/10 bg-white/5 p-6" x-data="{ project: song.selectedProject }" x-effect="project = song.selectedProject">
        <template x-if="!project">
          <div class="rounded-3xl border border-dashed border-white/20 bg-white/5 p-8 text-center text-sm text-white/70">
            Select or create a project to begin shaping lyrics.
          </div>
        </template>
        <template x-if="project">
          <div class="space-y-6" x-data="{ project: song.selectedProject }" x-effect="project = song.selectedProject">
            <div class="flex flex-wrap items-start justify-between gap-4">
              <div>
                <h2 class="text-2xl font-semibold text-white" x-text="project?.title"></h2>
                <p class="mt-1 text-xs uppercase tracking-[0.3em] text-white/50">
                  <span x-text="project?.genre"></span>
                  · <span x-text="project?.tone"></span>
                  · Persona: <span x-text="project?.persona"></span>
                </p>
              </div>
              <div class="flex flex-wrap items-center gap-3 text-xs text-white/60">
                <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2.5 py-1">
                  <i class="fa-solid fa-clock"></i>
                  Updated <span x-text="song.formatRelative(project?.updatedAt)"></span>
                </span>
                <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2.5 py-1">
                  <i class="fa-solid fa-headphones"></i>
                  <span x-text="`${project?.tempo.bpm} BPM · ${project?.tempo.feel}`"></span>
                </span>
                <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2.5 py-1">
                  <i class="fa-solid fa-language"></i>
                  <span x-text="project?.language.toUpperCase()"></span>
                </span>
              </div>
            </div>

            <nav class="flex flex-wrap gap-2 text-xs font-semibold uppercase tracking-[0.3em] text-white/50">
              <button
                type="button"
                class="rounded-full px-4 py-2 transition"
                :class="song.view.activeTab === 'lyrics' ? 'bg-violet-500/40 text-white shadow-lg' : 'bg-white/5 hover:bg-white/10'"
                @click="song.setActiveTab('lyrics')"
              >
                Lyrics
              </button>
              <button
                type="button"
                class="rounded-full px-4 py-2 transition"
                :class="song.view.activeTab === 'analysis' ? 'bg-violet-500/40 text-white shadow-lg' : 'bg-white/5 hover:bg-white/10'"
                @click="song.setActiveTab('analysis')"
              >
                Analysis
              </button>
              <button
                type="button"
                class="rounded-full px-4 py-2 transition"
                :class="song.view.activeTab === 'structure' ? 'bg-violet-500/40 text-white shadow-lg' : 'bg-white/5 hover:bg-white/10'"
                @click="song.setActiveTab('structure')"
              >
                Structure & tempo
              </button>
              <button
                type="button"
                class="rounded-full px-4 py-2 transition"
                :class="song.view.activeTab === 'exports' ? 'bg-violet-500/40 text-white shadow-lg' : 'bg-white/5 hover:bg-white/10'"
                @click="song.setActiveTab('exports')"
              >
                Export
              </button>
            </nav>

            <div class="space-y-5">
              <div x-show="song.view.activeTab === 'lyrics'" x-transition>
                <div class="space-y-5">
                  <template x-for="section in project?.sections" :key="section.id">
                    <article class="rounded-3xl border border-white/10 bg-slate-950/60 p-5">
                      <header class="flex flex-wrap items-center justify-between gap-3">
                        <div>
                          <h3 class="text-lg font-semibold text-white" x-text="section.label"></h3>
                          <p class="text-xs text-white/60">
                            Target syllables:
                            <span x-text="section.targetSyllables.join(' / ')"></span>
                            · Rhyme scheme: <span x-text="section.rhymeScheme"></span>
                          </p>
                        </div>
                        <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-3 py-1 text-[11px] text-white/70">
                          <i class="fa-solid fa-wave-square text-[9px]"></i>
                          <span x-text="section.description"></span>
                        </span>
                      </header>
                      <ul class="mt-4 space-y-2 text-sm">
                        <template x-for="line in section.lines" :key="`${section.id}-${line.number}`">
                          <li class="flex flex-wrap items-center gap-3 rounded-2xl border border-white/10 bg-white/5 px-3 py-2">
                            <span class="inline-flex h-7 w-7 items-center justify-center rounded-full bg-white/10 text-xs font-semibold text-white/70">
                              <span x-text="line.number"></span>
                            </span>
                            <p class="flex-1 text-white" x-text="line.text"></p>
                            <span class="inline-flex items-center gap-1 rounded-full bg-slate-900/70 px-2 py-1 text-[11px] text-white/60">
                              <i class="fa-solid fa-s"></i>
                              <span x-text="`${line.syllables} syl`"></span>
                            </span>
                            <span class="inline-flex items-center gap-1 rounded-full bg-slate-900/70 px-2 py-1 text-[11px] text-white/60">
                              <i class="fa-solid fa-r"></i>
                              <span x-text="line.rhymeKey"></span>
                            </span>
                            <template x-if="line.note">
                              <span class="inline-flex items-center gap-1 rounded-full bg-amber-400/15 px-2 py-1 text-[11px] text-amber-200">
                                <i class="fa-solid fa-lightbulb"></i>
                                <span x-text="line.note"></span>
                              </span>
                            </template>
                          </li>
                        </template>
                      </ul>
                      <template x-if="section.prosodyNotes">
                        <p class="mt-3 rounded-2xl border border-white/10 bg-white/5 px-3 py-2 text-xs text-white/60" x-text="section.prosodyNotes"></p>
                      </template>
                    </article>
                  </template>
                </div>
              </div>

              <div x-show="song.view.activeTab === 'analysis'" x-transition>
                <div class="grid gap-4 sm:grid-cols-2">
                  <div class="rounded-3xl border border-white/10 bg-slate-950/60 p-4">
                    <h3 class="text-sm font-semibold text-white">Rhyme & meter</h3>
                    <dl class="mt-3 space-y-2 text-sm text-white/70">
                      <div class="flex items-center justify-between">
                        <dt>Rhyme tightness</dt>
                        <dd class="font-semibold text-white" x-text="`${project?.analysis.rhymeTightness}%`"></dd>
                      </div>
                      <div class="flex items-center justify-between">
                        <dt>Near rhymes tracked</dt>
                        <dd class="font-semibold text-white" x-text="project?.analysis.nearRhymes"></dd>
                      </div>
                      <div class="flex items-center justify-between">
                        <dt>Syllable balance</dt>
                        <dd class="font-semibold text-white" x-text="project?.analysis.syllableBalance"></dd>
                      </div>
                      <div class="flex items-center justify-between">
                        <dt>Stress alignment</dt>
                        <dd class="font-semibold text-white" x-text="project?.analysis.stressAlignment"></dd>
                      </div>
                    </dl>
                    <Button type="button" size="sm" class="mt-4" @click="project && song.runAnalysis(project.id)">
                      <i class="fa-solid fa-wave-square text-xs"></i>
                      Refresh analysis
                    </Button>
                  </div>
                  <div class="rounded-3xl border border-white/10 bg-slate-950/60 p-4">
                    <h3 class="text-sm font-semibold text-white">Hook lift & vocabulary</h3>
                    <p class="mt-2 text-sm text-white/70">Hook lift: <span class="font-semibold text-white" x-text="project?.analysis.hookLift"></span></p>
                    <p class="text-sm text-white/70">Vocabulary heat: <span class="font-semibold text-white" x-text="project?.analysis.vocabularyHeat"></span></p>
                    <div class="mt-3 flex flex-wrap gap-2 text-[11px] text-white/70">
                      <template x-for="motif in project?.analysis.motifHighlights" :key="motif">
                        <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2.5 py-1">
                          <i class="fa-solid fa-star text-[9px]"></i>
                          <span x-text="motif"></span>
                        </span>
                      </template>
                    </div>
                    <div class="mt-4 space-y-2">
                      <template x-for="warning in project?.analysis.warnings" :key="warning.id">
                        <div
                          class="flex items-start gap-2 rounded-2xl border px-3 py-2 text-xs"
                          :class="warning.severity === 'critical' ? 'border-red-400/60 bg-red-500/15 text-red-100' : warning.severity === 'warn' ? 'border-amber-400/60 bg-amber-500/15 text-amber-100' : 'border-sky-400/60 bg-sky-500/15 text-sky-100'"
                        >
                          <i class="fa-solid" :class="warning.severity === 'critical' ? 'fa-circle-exclamation' : warning.severity === 'warn' ? 'fa-triangle-exclamation' : 'fa-circle-info'"></i>
                          <p>
                            <strong class="mr-1">Line <span x-text="warning.line"></span>:</strong>
                            <span x-text="warning.message"></span>
                          </p>
                        </div>
                      </template>
                    </div>
                  </div>
                </div>
              </div>

              <div x-show="song.view.activeTab === 'structure'" x-transition>
                <div class="grid gap-4 lg:grid-cols-2">
                  <div class="rounded-3xl border border-white/10 bg-slate-950/60 p-4">
                    <h3 class="text-sm font-semibold text-white">Tempo map</h3>
                    <dl class="mt-3 space-y-2 text-sm text-white/70">
                      <div class="flex items-center justify-between">
                        <dt>BPM</dt>
                        <dd class="font-semibold text-white" x-text="project?.tempo.bpm"></dd>
                      </div>
                      <div class="flex items-center justify-between">
                        <dt>Feel</dt>
                        <dd class="font-semibold text-white" x-text="project?.tempo.feel"></dd>
                      </div>
                      <div class="flex items-center justify-between">
                        <dt>Groove</dt>
                        <dd class="font-semibold text-white" x-text="project?.tempo.groove"></dd>
                      </div>
                      <div class="flex items-center justify-between">
                        <dt>Bars mapped</dt>
                        <dd class="font-semibold text-white" x-text="project?.tempo.bars"></dd>
                      </div>
                    </dl>
                    <div class="mt-4 flex flex-wrap gap-2 text-xs">
                      <Button type="button" size="sm" variant="ghost" class="border-white/30 text-white/70 hover:text-white" @click="project && song.tapTempo(project.id, 110)">
                        <i class="fa-solid fa-hand-point-up text-xs"></i>
                        Tap tempo (110)
                      </Button>
                      <Button type="button" size="sm" variant="ghost" class="border-white/30 text-white/70 hover:text-white" @click="project && song.setTempo(project.id, project.tempo.bpm + 2)">
                        <i class="fa-solid fa-plus text-xs"></i>
                        +2 BPM
                      </Button>
                      <Button type="button" size="sm" variant="ghost" class="border-white/30 text-white/70 hover:text-white" @click="project && song.setTempo(project.id, Math.max(60, project.tempo.bpm - 2))">
                        <i class="fa-solid fa-minus text-xs"></i>
                        -2 BPM
                      </Button>
                    </div>
                  </div>
                  <div class="rounded-3xl border border-white/10 bg-slate-950/60 p-4">
                    <h3 class="text-sm font-semibold text-white">Structure preview</h3>
                    <p class="mt-2 text-xs text-white/60">Template: <span class="font-semibold text-white" x-text="song.templates.find(t => t.id === project?.structureTemplateId)?.label ?? 'Custom map'"></span></p>
                    <ol class="mt-3 space-y-2 text-sm text-white/70">
                      <template x-for="(section, index) in song.templates.find(t => t.id === project?.structureTemplateId)?.sectionOrder ?? []" :key="`${project?.id}-order-${index}`">
                        <li class="flex items-center gap-2 rounded-2xl border border-white/10 bg-white/5 px-3 py-2">
                          <span class="inline-flex h-6 w-6 items-center justify-center rounded-full bg-white/10 text-[11px] font-semibold text-white/70" x-text="index + 1"></span>
                          <span class="flex-1 capitalize" x-text="section.replace('-', ' ')"></span>
                          <span class="text-[11px] uppercase tracking-[0.3em] text-white/40">
                            <span x-text="song.templates.find(t => t.id === project?.structureTemplateId)?.syllableTargets[section]?.join('/') ?? '—'"></span>
                          </span>
                        </li>
                      </template>
                    </ol>
                    <div class="mt-3 flex items-center justify-between rounded-2xl border border-white/10 bg-white/5 px-3 py-2 text-xs text-white/60">
                      <span>Clean lyrics enabled</span>
                      <label class="inline-flex cursor-pointer items-center gap-2">
                        <input type="checkbox" class="h-4 w-4 rounded border-white/40 bg-slate-900" :checked="project?.cleanLyrics" @change="project && song.toggleClean(project.id)">
                        <span class="text-white/70">Radio friendly</span>
                      </label>
                    </div>
                  </div>
                </div>
              </div>

              <div x-show="song.view.activeTab === 'exports'" x-transition>
                <div class="space-y-4">
                  <template x-for="preset in song.exportPresets" :key="preset.id">
                    <div class="rounded-3xl border border-white/10 bg-slate-950/60 p-4">
                      <div class="flex flex-wrap items-center justify-between gap-3">
                        <div>
                          <h3 class="text-sm font-semibold text-white" x-text="preset.label"></h3>
                          <p class="text-xs text-white/60" x-text="preset.description"></p>
                          <p class="mt-1 text-[11px] uppercase tracking-[0.3em] text-white/40">
                            Includes: <span x-text="preset.includes.join(', ')"></span>
                          </p>
                        </div>
                        <span
                          class="inline-flex items-center gap-1 rounded-full px-2 py-0.5 text-[10px] font-semibold"
                          :class="song.isExportLocked(preset.id) ? 'bg-purple-500/20 text-purple-200' : 'bg-emerald-400/20 text-emerald-100'"
                        >
                          <i class="fa-solid" :class="song.isExportLocked(preset.id) ? 'fa-lock' : 'fa-cloud-arrow-down'"></i>
                          <span x-text="preset.plan === 'free' ? 'Free' : 'Pro'"></span>
                        </span>
                      </div>
                      <Button
                        type="button"
                        size="sm"
                        class="mt-4"
                        :class="song.isExportLocked(preset.id) ? 'pointer-events-none opacity-60' : ''"
                        @click="project && song.queueExport(project.id, preset.id)"
                      >
                        Queue export
                      </Button>
                    </div>
                  </template>
                </div>
              </div>
            </div>
          </div>
        </template>
      </div>

      <aside class="space-y-6">
        <div class="rounded-3xl border border-white/10 bg-white/5 p-6" x-data="{ project: song.selectedProject }" x-effect="project = song.selectedProject">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-white">Hook variants</h3>
            <Button type="button" size="sm" variant="ghost" class="text-xs text-white/70 hover:text-white" @click="project && song.queueHookGeneration(project.id)">
              Generate more
            </Button>
          </div>
          <p class="mt-1 text-xs text-white/60">Pin your favourite hook or audition pro-only variants for extra lift.</p>
          <ul class="mt-4 space-y-3">
            <template x-for="variant in project?.hookVariants ?? []" :key="variant.id">
              <li
                class="rounded-3xl border px-4 py-3"
                :class="[
                  project?.hook.variantId === variant.id
                    ? 'border-emerald-400/60 bg-emerald-400/15 text-white'
                    : 'border-white/10 bg-white/5 text-white/80',
                ]"
              >
                <p class="text-sm font-semibold" x-text="variant.text"></p>
                <p class="mt-1 text-[11px] uppercase tracking-[0.3em] text-white/40">
                  <span x-text="`${variant.syllables} syl · ${variant.punchScore.toFixed(2)} punch · ${variant.singScore.toFixed(2)} sing`"></span>
                </p>
                <div class="mt-3 flex items-center justify-between text-xs text-white/60">
                  <div class="flex flex-wrap gap-2">
                    <template x-for="keyword in variant.keywords" :key="keyword">
                      <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2 py-0.5 text-[11px]">
                        <i class="fa-solid fa-hashtag text-[9px]"></i>
                        <span x-text="keyword"></span>
                      </span>
                    </template>
                  </div>
                  <span
                    class="inline-flex items-center gap-1 rounded-full px-2 py-0.5 text-[10px] font-semibold"
                    :class="song.isVariantLocked(variant.plan) ? 'bg-purple-500/20 text-purple-200' : 'bg-emerald-400/20 text-emerald-100'"
                  >
                    <i class="fa-solid" :class="song.isVariantLocked(variant.plan) ? 'fa-lock' : 'fa-star'"></i>
                    <span x-text="variant.plan === 'pro' ? 'Pro' : 'Free'"></span>
                  </span>
                </div>
                <Button
                  type="button"
                  size="sm"
                  class="mt-3"
                  :class="song.isVariantLocked(variant.plan) ? 'pointer-events-none opacity-60' : ''"
                  @click="project && song.applyHookVariant(project.id, variant.id)"
                >
                  <i class="fa-solid fa-thumbtack text-xs"></i>
                  Pin hook
                </Button>
              </li>
            </template>
            <template x-if="!project || (project?.hookVariants?.length ?? 0) === 0">
              <li class="rounded-3xl border border-dashed border-white/20 bg-white/5 px-4 py-6 text-center text-xs text-white/60">
                Generate hook ideas to populate this board.
              </li>
            </template>
          </ul>
        </div>

        <div class="rounded-3xl border border-white/10 bg-white/5 p-6">
          <h3 class="text-lg font-semibold text-white">Revision passes</h3>
          <p class="mt-1 text-xs text-white/60">Queue craft passes to punch up imagery, singability, or translations.</p>
          <ul class="mt-4 space-y-3 text-sm text-white/70">
            <template x-for="pass in song.passes" :key="pass.key">
              <li class="rounded-3xl border border-white/10 bg-slate-950/60 p-4">
                <div class="flex items-start justify-between gap-3">
                  <div>
                    <p class="text-sm font-semibold text-white" x-text="pass.label"></p>
                    <p class="mt-1 text-xs text-white/60" x-text="pass.description"></p>
                    <p class="mt-1 text-[11px] uppercase tracking-[0.3em] text-white/40" x-text="pass.bestFor"></p>
                  </div>
                  <span
                    class="inline-flex items-center gap-1 rounded-full px-2 py-0.5 text-[10px] font-semibold"
                    :class="song.isPassLocked(pass.key) ? 'bg-purple-500/20 text-purple-200' : 'bg-emerald-400/20 text-emerald-100'"
                  >
                    <i class="fa-solid" :class="song.isPassLocked(pass.key) ? 'fa-lock' : 'fa-wand-magic-sparkles'"></i>
                    <span x-text="pass.gating === 'free' ? 'Free' : 'Pro'"></span>
                  </span>
                </div>
                <Button
                  type="button"
                  size="sm"
                  class="mt-4"
                  :class="song.isPassLocked(pass.key) ? 'pointer-events-none opacity-60' : ''"
                  @click="song.queueRevisionPass(song.selectedProject?.id ?? '', pass.key)"
                >
                  Queue pass
                </Button>
              </li>
            </template>
          </ul>
        </div>

        <div class="rounded-3xl border border-white/10 bg-white/5 p-6" x-data="{ project: song.selectedProject }" x-effect="project = song.selectedProject">
          <h3 class="text-lg font-semibold text-white">Project quick facts</h3>
          <dl class="mt-3 space-y-2 text-sm text-white/70">
            <div class="flex items-center justify-between">
              <dt>Total sections</dt>
              <dd class="font-semibold text-white" x-text="project?.sections.length ?? 0"></dd>
            </div>
            <div class="flex items-center justify-between">
              <dt>Exports run</dt>
              <dd class="font-semibold text-white" x-text="project?.aiUsage.exports ?? 0"></dd>
            </div>
            <div class="flex items-center justify-between">
              <dt>Draft passes</dt>
              <dd class="font-semibold text-white" x-text="project?.aiUsage.passes ?? 0"></dd>
            </div>
            <div class="flex items-center justify-between">
              <dt>Theme</dt>
              <dd class="max-w-[12rem] text-right" x-text="project?.theme"></dd>
            </div>
          </dl>
          <p class="mt-3 text-xs text-white/50">Tap tempo or import a chord progression to refine beat alignment and stress map accuracy.</p>
        </div>
      </aside>
    </div>
  </div>
</section>
