---
type Props = {
  id?: string;
  name?: string;
  label: string;
  wrapperClass?: string;
  inputClass?: string;
  buttonClass?: string;
  toggleLabel?: string;
  labelClass?: string;
  placeholder?: string;
  minlength?: number;
};

const {
  id,
  name,
  label,
  wrapperClass = "",
  inputClass = "",
  buttonClass = "",
  labelClass = "block text-sm font-medium text-slate-700",
  toggleLabel = "password",
  placeholder = "",
  minlength = 6,
  ...rest
} = Astro.props as Props & Record<string, unknown>;

const randomId = Math.random().toString(36).slice(2);
const inputId = id ?? name ?? `password-${randomId}`;
const inputName = name ?? inputId;
const hideLabel = `Hide ${toggleLabel}`;
const showLabel = `Show ${toggleLabel}`;
const ariaExpression = `show ? '${hideLabel.replace(/'/g, "\\'")}' : '${showLabel.replace(/'/g, "\\'")}'`;
const wrapperClassName = ["space-y-1", wrapperClass].filter(Boolean).join(" ").trim();
const inputClassName = [
  "w-full rounded-lg border px-3 py-2 pr-10 outline-none focus:ring-2 focus:ring-indigo-500",
  inputClass,
]
  .filter(Boolean)
  .join(" ");
const buttonClassName = [
  "absolute inset-y-0 right-0 flex items-center px-3 text-slate-400 hover:text-slate-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2",
  buttonClass,
]
  .filter(Boolean)
  .join(" ");
---
<div x-data="{ show: false }" class={wrapperClassName}>
  <label for={inputId} class={labelClass}>
    {label}
  </label>
  <div class="relative mt-1">
    <input
      id={inputId}
      name={inputName}
      :type="show ? 'text' : 'password'"
      placeholder={placeholder}
      class={inputClassName}
      minlength={minlength}
      {...rest}
    />
    <button
      type="button"
      x-on:click="show = !show"
      :aria-label={ariaExpression}
      class={buttonClassName}
    >
      <svg
        x-show="!show"
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-5"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.5"
          d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
        />
        <circle cx="12" cy="12" r="3" stroke-width="1.5" />
      </svg>
      <svg
        x-show="show"
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-5"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="1.5"
          d="M13.875 18.825A10.05 10.05 0 0 1 12 19c-4.477 0-8.268-2.943-9.542-7a9.979 9.979 0 0 1 3.113-4.568m2.873-1.705A9.956 9.956 0 0 1 12 5c4.478 0 8.268 2.943 9.542 7a9.971 9.971 0 0 1-1.249 2.592M15 12a3 3 0 0 1-3 3m0-6a3 3 0 0 1 3 3m-3 3L4.5 4.5m7.5 4.5a3 3 0 0 0-3 3m3 3 7.5 7.5"
        />
      </svg>
    </button>
  </div>
</div>
