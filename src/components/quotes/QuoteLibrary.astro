---
import SectionHeading from "../SectionHeading.astro";
import Button from "../Button.astro";
---
<section
  id="quote-library"
  class="border-t border-white/10 bg-slate-950/95 py-20 text-white"
  x-data="{ quote: $store['quote-forge'] }"
>
  <div class="mx-auto max-w-6xl space-y-12 px-4 sm:px-6 lg:px-8">
    <header class="flex flex-wrap items-start justify-between gap-6">
      <div class="max-w-2xl">
        <SectionHeading
          eyebrow="Project library"
          title="Organise briefs, variants, packs, and exports"
          description="Filter by plan status, language, persona, or device focus. Tap a project to open its workspace with variants, refinements, and scheduling."
        />
      </div>
      <div class="flex flex-col items-end gap-3 text-right">
        <Button
          type="button"
          variant="outline"
          class="border-white/40 text-white hover:border-white/70 hover:text-white"
          @click="quote.togglePlan()"
        >
          <i class="fa-solid fa-rotate text-xs"></i>
          Switch to <span x-text="quote.plan === 'free' ? 'Pro preview' : 'Free preview'"></span>
        </Button>
        <p class="text-xs text-white/60">
          Projects allowed: <span x-text="quote.planLimits.projects === 'unlimited' ? 'Unlimited' : quote.planLimits.projects"></span>
          · Languages: <span x-text="quote.planLimits.languages.join(', ')"></span>
          · Designer push: <span x-text="quote.planLimits.designerPush ? 'Enabled' : 'Pro only'"></span>
        </p>
      </div>
    </header>

    <div class="grid gap-6 lg:grid-cols-[1.05fr_0.95fr]">
      <div class="space-y-6 rounded-3xl border border-white/10 bg-white/5 p-6">
        <div class="grid gap-4 sm:grid-cols-2 xl:grid-cols-4">
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Total projects</p>
            <p class="mt-2 text-2xl font-semibold" x-text="quote.state.metrics.totalProjects"></p>
            <p class="text-xs text-white/60">Across discipline, wellness, and creative storytelling themes.</p>
          </div>
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Approval rate</p>
            <p class="mt-2 text-2xl font-semibold" x-text="`${Math.round(quote.state.metrics.approvalRate * 100)}%`"></p>
            <p class="text-xs text-white/60">Candidates promoted to final after review.</p>
          </div>
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">AI refinements</p>
            <p class="mt-2 text-2xl font-semibold" x-text="quote.state.aiUsage.refinements"></p>
            <p class="text-xs text-white/60">Tighten, punch, poetic, and safety passes executed.</p>
          </div>
          <div class="rounded-2xl border border-white/10 bg-slate-950/40 p-4">
            <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Scheduled this month</p>
            <p class="mt-2 text-2xl font-semibold" x-text="quote.state.metrics.scheduledThisMonth"></p>
            <p class="text-xs text-white/60">Queued across LinkedIn, Instagram, and newsletter channels.</p>
          </div>
        </div>

        <div class="rounded-3xl border border-white/10 bg-slate-950/40 p-5">
          <div class="flex flex-wrap items-center gap-3">
            <label class="flex items-center gap-2 rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/70">
              <i class="fa-solid fa-magnifying-glass text-[10px]"></i>
              <input
                type="search"
                placeholder="Search projects, tags, or quote text"
                class="bg-transparent text-sm text-white/90 placeholder:text-white/40 focus:outline-none"
                @input.debounce.250ms="quote.setFilter('search', $event.target.value)"
              />
            </label>
            <select
              class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
              @change="quote.setFilter('status', $event.target.value)"
            >
              <template x-for="status in quote.availableStatuses" :key="status">
                <option
                  :value="status"
                  class="bg-slate-900 text-white"
                  :selected="quote.state.filters.status === status"
                  x-text="status === 'all' ? 'All statuses' : status"
                ></option>
              </template>
            </select>
            <select
              class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
              @change="quote.setFilter('language', $event.target.value)"
            >
              <template x-for="lang in quote.availableLanguages" :key="lang">
                <option
                  :value="lang"
                  class="bg-slate-900 text-white"
                  :selected="quote.state.filters.language === lang"
                  x-text="lang === 'all' ? 'All languages' : lang"
                ></option>
              </template>
            </select>
            <select
              class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
              @change="quote.setFilter('tone', $event.target.value)"
            >
              <template x-for="tone in quote.availableTones" :key="tone">
                <option
                  :value="tone"
                  class="bg-slate-900 text-white"
                  :selected="quote.state.filters.tone === tone"
                  x-text="tone === 'all' ? 'All tones' : tone"
                ></option>
              </template>
            </select>
            <select
              class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
              @change="quote.setFilter('persona', $event.target.value)"
            >
              <template x-for="persona in quote.availablePersonas" :key="persona">
                <option
                  :value="persona"
                  class="bg-slate-900 text-white"
                  :selected="quote.state.filters.persona === persona"
                  x-text="persona === 'all' ? 'All personas' : persona"
                ></option>
              </template>
            </select>
            <select
              class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
              @change="quote.setFilter('device', $event.target.value)"
            >
              <template x-for="device in quote.availableDevices" :key="device">
                <option
                  :value="device"
                  class="bg-slate-900 text-white"
                  :selected="quote.state.filters.device === device"
                  x-text="device === 'all' ? 'All devices' : device"
                ></option>
              </template>
            </select>
            <select
              class="rounded-full border border-white/15 bg-white/5 px-3 py-1.5 text-xs text-white/80 focus:border-white/40 focus:outline-none"
              @change="quote.setFilter('tag', $event.target.value)"
            >
              <template x-for="tag in quote.availableTags" :key="tag">
                <option
                  :value="tag"
                  class="bg-slate-900 text-white"
                  :selected="quote.state.filters.tag === tag"
                  x-text="tag === 'all' ? 'All tags' : tag"
                ></option>
              </template>
            </select>
            <Button
              type="button"
              variant="ghost"
              class="text-xs text-white/70 hover:text-white"
              @click="quote.resetFilters()"
            >
              Clear filters
            </Button>
          </div>
          <p class="mt-3 text-xs text-white/50">
            Showing <span x-text="quote.filteredProjects.length"></span> of <span x-text="quote.state.projects.length"></span> projects.
          </p>
        </div>

        <ul class="space-y-3">
          <template x-for="project in quote.filteredProjects" :key="project.id">
            <li>
              <button
                type="button"
                class="w-full rounded-3xl border px-5 py-4 text-left transition"
                :class="[
                  quote.view.selectedProjectId === project.id
                    ? 'border-emerald-400/60 bg-emerald-500/20 text-white'
                    : 'border-white/10 bg-white/5 text-white/80 hover:border-white/30 hover:text-white',
                ]"
                @click="quote.selectProject(project.id)"
              >
                <div class="flex flex-wrap items-center justify-between gap-4">
                  <div class="space-y-1">
                    <div class="flex items-center gap-2">
                      <h3 class="text-lg font-semibold text-white" x-text="project.name"></h3>
                      <template x-if="project.status === 'ready'">
                        <span class="inline-flex items-center gap-1 rounded-full bg-emerald-400/20 px-2 py-0.5 text-[10px] font-semibold text-emerald-100">
                          <i class="fa-solid fa-circle-check text-[9px]"></i>
                          Ready
                        </span>
                      </template>
                      <template x-if="project.planLocks?.designerPush && quote.plan === 'free'">
                        <span class="inline-flex items-center gap-1 rounded-full bg-purple-500/20 px-2 py-0.5 text-[10px] font-semibold text-purple-200">
                          <i class="fa-solid fa-lock"></i>
                          Designer push
                        </span>
                      </template>
                    </div>
                    <p class="text-xs uppercase tracking-[0.3em] text-white/50">
                      <span x-text="project.language"></span>
                      · <span x-text="project.topicTags.join(' · ')"></span>
                    </p>
                  </div>
                  <div class="flex flex-wrap items-center gap-4 text-xs text-white/60">
                    <span><i class="fa-regular fa-clock"></i> Updated <span x-text="quote.formatRelative(project.updatedAt)"></span></span>
                    <span><i class="fa-solid fa-quote-right"></i> <span x-text="project.quotes.length"></span> variants</span>
                    <span><i class="fa-solid fa-check-double"></i> <span x-text="project.quotes.filter(q => q.status === 'approved').length"></span> approved</span>
                  </div>
                </div>
                <div class="mt-3 flex flex-wrap items-center gap-2 text-[11px] text-white/60">
                  <template x-for="tag in project.topicTags" :key="`${project.id}-${tag}`">
                    <span class="inline-flex items-center gap-1 rounded-full bg-white/10 px-2.5 py-1">
                      <i class="fa-solid fa-tag text-[9px]"></i>
                      <span x-text="tag"></span>
                    </span>
                  </template>
                </div>
                <div class="mt-3 grid gap-3 text-xs text-white/60 sm:grid-cols-2">
                  <div class="rounded-2xl border border-white/10 bg-white/5 px-3 py-2">
                    <p class="text-xs uppercase tracking-[0.3em] text-white/50">Default persona</p>
                    <p class="text-sm font-semibold text-white" x-text="project.defaultPersona"></p>
                  </div>
                  <div class="rounded-2xl border border-white/10 bg-white/5 px-3 py-2">
                    <p class="text-xs uppercase tracking-[0.3em] text-white/50">Preferred tone</p>
                    <p class="text-sm font-semibold text-white" x-text="project.defaultTone"></p>
                  </div>
                </div>
              </button>
            </li>
          </template>
        </ul>
      </div>

      <aside class="space-y-6 rounded-3xl border border-white/10 bg-slate-900/70 p-6">
        <div class="rounded-2xl border border-white/10 bg-white/5 p-5 text-sm text-white/80">
          <p class="text-xs uppercase tracking-[0.3em] text-white/60">Activity feed</p>
          <ul class="mt-3 space-y-3">
            <template x-for="item in quote.allActivity" :key="item.id">
              <li class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3">
                <div class="flex items-center justify-between gap-3 text-xs text-white/50">
                  <span class="inline-flex items-center gap-2">
                    <i class="fa-solid" :class="item.icon"></i>
                    <span x-text="item.message"></span>
                  </span>
                  <span x-text="quote.formatRelative(item.timestamp)"></span>
                </div>
                <p class="mt-2 text-xs text-white/60" x-text="item.detail"></p>
              </li>
            </template>
          </ul>
        </div>
        <div class="rounded-2xl border border-white/10 bg-white/5 p-5 text-sm text-white/80">
          <p class="text-xs uppercase tracking-[0.3em] text-white/60">Plan comparison</p>
          <ul class="mt-3 space-y-2">
            <li class="flex items-center justify-between rounded-2xl border border-white/10 bg-slate-950/50 px-4 py-2">
              <span>Uniqueness check</span>
              <span x-text="quote.planLimits.uniqueness === 'advanced' ? 'Advanced' : 'Basic'"></span>
            </li>
            <li class="flex items-center justify-between rounded-2xl border border-white/10 bg-slate-950/50 px-4 py-2">
              <span>Packs per project</span>
              <span x-text="`${quote.planLimits.packItems} items`"></span>
            </li>
            <li class="flex items-center justify-between rounded-2xl border border-white/10 bg-slate-950/50 px-4 py-2">
              <span>Designer handoff</span>
              <span x-text="quote.planLimits.designerPush ? 'Available' : 'Upgrade'"></span>
            </li>
          </ul>
        </div>
      </aside>
    </div>
  </div>
</section>
