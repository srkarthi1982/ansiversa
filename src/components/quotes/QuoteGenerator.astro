---
import SectionHeading from "../SectionHeading.astro";
import Button from "../Button.astro";
---
<section
  class="border-t border-white/10 bg-slate-950 py-20 text-white"
  x-data="{ quote: $store['quote-forge'] }"
>
  <div class="mx-auto max-w-6xl space-y-12 px-4 sm:px-6 lg:px-8">
    <header class="flex flex-wrap items-start justify-between gap-6">
      <div class="max-w-2xl">
        <SectionHeading
          eyebrow="Generator wizard"
          title="Brief by tone, persona, devices, and attribution"
          description="Mix presets and fine controls to tailor quote batches for daily drips, campaign arcs, or multilingual packs."
        />
      </div>
      <div class="flex flex-col items-end gap-3 text-right text-xs text-white/60">
        <p>
          Plan: <span class="font-semibold" x-text="quote.plan === 'free' ? 'Free' : 'Pro'"></span>
          · Variants per prompt: <span x-text="quote.planLimits.variantsPerPrompt"></span>
          · Export formats: <span x-text="quote.planLimits.exportFormats.join(', ')"></span>
        </p>
        <p>
          Uniqueness guard:
          <span x-text="quote.planLimits.uniqueness === 'advanced' ? 'Advanced (pack-level)' : 'Basic (single quote)'"></span>
        </p>
      </div>
    </header>

    <div class="grid gap-8 lg:grid-cols-[1.2fr_0.8fr]">
      <div class="space-y-6 rounded-3xl border border-white/10 bg-white/5 p-6">
        <div class="grid gap-3 sm:grid-cols-2">
          <template x-for="mode in quote.generationModes" :key="mode.id">
            <button
              type="button"
              class="rounded-2xl border px-4 py-3 text-left transition"
              :class="[
                quote.generatorState.modeId === mode.id
                  ? 'border-emerald-400/80 bg-emerald-500/20 text-white'
                  : 'border-white/10 bg-white/5 text-white/70 hover:border-white/30 hover:text-white',
                mode.proOnly && quote.plan === 'free' ? 'opacity-60' : '',
              ]"
              :disabled="mode.proOnly && quote.plan === 'free'"
              @click="quote.setGeneratorMode(mode.id)"
            >
              <div class="flex items-center justify-between text-xs uppercase tracking-[0.3em] text-white/50">
                <span x-text="mode.label"></span>
                <span x-text="mode.proOnly ? 'PRO' : 'FREE'"></span>
              </div>
              <p class="mt-2 text-sm text-white/80" x-text="mode.description"></p>
              <p class="mt-3 text-xs text-white/60" x-text="mode.highlight"></p>
            </button>
          </template>
        </div>

        <div class="grid gap-5 md:grid-cols-2">
          <label class="space-y-2 text-sm">
            <span class="text-xs uppercase tracking-[0.3em] text-white/60">Tone</span>
            <select
              class="w-full rounded-2xl border border-white/15 bg-white/5 px-4 py-3 text-sm text-white/90 focus:border-emerald-300 focus:outline-none"
              @change="quote.setGeneratorField('tone', $event.target.value)"
            >
              <template x-for="tone in quote.availableTones" :key="tone">
                <option
                  :value="tone"
                  class="bg-slate-900 text-white"
                  :selected="quote.generatorState.tone === tone"
                  x-text="tone === 'all' ? 'Default' : tone"
                ></option>
              </template>
            </select>
          </label>
          <label class="space-y-2 text-sm">
            <span class="text-xs uppercase tracking-[0.3em] text-white/60">Persona</span>
            <select
              class="w-full rounded-2xl border border-white/15 bg-white/5 px-4 py-3 text-sm text-white/90 focus:border-emerald-300 focus:outline-none"
              @change="quote.setGeneratorField('persona', $event.target.value)"
            >
              <template x-for="persona in quote.availablePersonas" :key="persona">
                <option
                  :value="persona"
                  class="bg-slate-900 text-white"
                  :selected="quote.generatorState.persona === persona"
                  x-text="persona === 'all' ? 'Default' : persona"
                ></option>
              </template>
            </select>
          </label>
          <label class="space-y-2 text-sm">
            <span class="text-xs uppercase tracking-[0.3em] text-white/60">Length preset</span>
            <select
              class="w-full rounded-2xl border border-white/15 bg-white/5 px-4 py-3 text-sm text-white/90 focus:border-emerald-300 focus:outline-none"
              @change="quote.setGeneratorField('length', $event.target.value)"
            >
              <template x-for="(label, key) in quote.lengthLabels" :key="key">
                <option
                  :value="key"
                  class="bg-slate-900 text-white"
                  :selected="quote.generatorState.length === key"
                  x-text="`${key} — ${label}`"
                ></option>
              </template>
            </select>
          </label>
          <label class="space-y-2 text-sm">
            <span class="text-xs uppercase tracking-[0.3em] text-white/60">Language</span>
            <select
              class="w-full rounded-2xl border border-white/15 bg-white/5 px-4 py-3 text-sm text-white/90 focus:border-emerald-300 focus:outline-none"
              @change="quote.setGeneratorField('language', $event.target.value)"
            >
              <template x-for="lang in quote.generatorLanguageOptions" :key="lang">
                <option
                  :value="lang"
                  class="bg-slate-900 text-white"
                  :selected="quote.generatorState.language === lang"
                  x-text="lang"
                ></option>
              </template>
            </select>
          </label>
          <label class="space-y-2 text-sm">
            <span class="text-xs uppercase tracking-[0.3em] text-white/60">Variants requested</span>
            <input
              type="number"
              min="1"
              class="w-full rounded-2xl border border-white/15 bg-white/5 px-4 py-3 text-sm text-white/90 focus:border-emerald-300 focus:outline-none"
              :value="quote.generatorState.count"
              @input="quote.setGeneratorField('count', Number($event.target.value))"
            />
            <p class="text-xs text-white/50">Limit: <span x-text="quote.planLimits.variantsPerPrompt"></span> per prompt.</p>
          </label>
          <label class="space-y-2 text-sm">
            <span class="text-xs uppercase tracking-[0.3em] text-white/60">Attribution mode</span>
            <select
              class="w-full rounded-2xl border border-white/15 bg-white/5 px-4 py-3 text-sm text-white/90 focus:border-emerald-300 focus:outline-none"
              @change="quote.setGeneratorField('attribution', $event.target.value)"
            >
              <template x-for="mode in quote.attributionModes" :key="mode.key">
                <option
                  :value="mode.key"
                  class="bg-slate-900 text-white"
                  :selected="quote.generatorState.attribution === mode.key"
                  x-text="`${mode.label}${mode.plan === 'pro' ? ' · PRO' : ''}`"
                  :disabled="mode.plan === 'pro' && quote.plan === 'free'"
                ></option>
              </template>
            </select>
          </label>
        </div>

        <div class="space-y-3">
          <p class="text-xs font-semibold uppercase tracking-[0.3em] text-white/60">Devices emphasis</p>
          <div class="flex flex-wrap gap-2">
            <template x-for="device in quote.deviceGuides" :key="device.key">
              <button
                type="button"
                class="rounded-full border px-3 py-1.5 text-xs transition"
                :class="quote.generatorState.devices.includes(device.key)
                  ? 'border-emerald-400/80 bg-emerald-500/20 text-white'
                  : 'border-white/15 bg-white/5 text-white/70 hover:border-white/30 hover:text-white'"
                @click="quote.toggleGeneratorDevice(device.key)"
              >
                <i class="fa-solid fa-sparkles text-[10px]"></i>
                <span x-text="device.label"></span>
              </button>
            </template>
          </div>
          <p class="text-xs text-white/60">
            Layer two to three devices per brief for natural cadence. Quote Forge auto-adjusts combinations to avoid cliché.
          </p>
        </div>

        <div class="flex flex-wrap justify-between gap-4 rounded-3xl border border-white/10 bg-slate-950/60 p-5 text-sm text-white/80">
          <div>
            <p class="text-xs uppercase tracking-[0.3em] text-white/50">Plan guardrails</p>
            <ul class="mt-2 space-y-1 text-xs text-white/60">
              <li>Projects allowed: <span x-text="quote.planLimits.projects === 'unlimited' ? 'Unlimited' : quote.planLimits.projects"></span></li>
              <li>Designer handoff: <span x-text="quote.planLimits.designerPush ? 'Enabled' : 'Upgrade to Pro'"></span></li>
              <li>Pack capacity: <span x-text="`${quote.planLimits.packItems} items`"></span></li>
            </ul>
          </div>
          <div class="flex flex-col items-end justify-between text-right">
            <Button type="button" variant="ghost" class="text-xs text-white/70 hover:text-white" @click="quote.queueGeneration()">
              Run generator
            </Button>
            <p class="text-[11px] text-white/50">Adds job to queue and logs to activity feed.</p>
          </div>
        </div>
      </div>

      <aside class="space-y-6 rounded-3xl border border-white/10 bg-slate-900/70 p-6">
        <div class="rounded-2xl border border-white/10 bg-white/5 p-5">
          <p class="text-xs uppercase tracking-[0.3em] text-white/60">Device playbook</p>
          <ul class="mt-3 space-y-3 text-sm">
            <template x-for="device in quote.deviceGuides" :key="`guide-${device.key}`">
              <li class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3">
                <p class="text-xs font-semibold uppercase tracking-wide text-emerald-300" x-text="device.label"></p>
                <p class="mt-1 text-sm text-white/80" x-text="device.description"></p>
                <p class="mt-2 text-xs text-white/60">
                  <i class="fa-solid fa-quote-left text-[10px] opacity-70"></i>
                  <span x-text="device.example"></span>
                </p>
              </li>
            </template>
          </ul>
        </div>
        <div class="rounded-2xl border border-white/10 bg-white/5 p-5 text-sm text-white/80">
          <p class="text-xs uppercase tracking-[0.3em] text-white/60">Attribution guidance</p>
          <ul class="mt-3 space-y-2">
            <template x-for="mode in quote.attributionModes" :key="`attrib-${mode.key}`">
              <li class="rounded-2xl border border-white/10 bg-slate-950/60 px-4 py-3">
                <div class="flex items-center justify-between gap-3 text-xs uppercase tracking-[0.3em] text-white/50">
                  <span x-text="mode.label"></span>
                  <span x-show="mode.plan === 'pro'" class="rounded-full bg-purple-500/20 px-2 py-0.5 text-[10px] font-semibold text-purple-200">PRO</span>
                </div>
                <p class="mt-2 text-sm text-white/80" x-text="mode.description"></p>
                <p class="mt-1 text-xs text-white/60" x-text="`Example: ${mode.example}`"></p>
              </li>
            </template>
          </ul>
        </div>
      </aside>
    </div>
  </div>
</section>
